// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parse.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . SourceFile $end\l"]
  0 -> 1 [style=solid label="PACKAGE"]
  0 -> 2 [style=dashed label="SourceFile"]
  0 -> 3 [style=dashed label="PackageClause"]
  1 [label="State 1\n\l  2 PackageClause: PACKAGE . PackageName\l"]
  1 -> 4 [style=solid label="ID"]
  1 -> 5 [style=dashed label="PackageName"]
  2 [label="State 2\n\l  0 $accept: SourceFile . $end\l"]
  2 -> 6 [style=solid label="$end"]
  3 [label="State 3\n\l  1 SourceFile: PackageClause . ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  3 -> 7 [style=solid label="';'"]
  4 [label="State 4\n\l  3 PackageName: ID .\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  2 PackageClause: PACKAGE PackageName .\l"]
  5 -> "5R2" [style=solid]
 "5R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  0 $accept: SourceFile $end .\l"]
  6 -> "6R0" [style=solid]
 "6R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  7 [label="State 7\n\l  1 SourceFile: PackageClause ';' . STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  7 -> 8 [style=dashed label="STAR_ImportDecl_SC"]
  7 -> "7R15" [style=solid]
 "7R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC . STAR_TopLevelDecl_SC\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC . ImportDecl ';'\l"]
  8 -> 9 [style=solid label="IMPORT"]
  8 -> 10 [style=dashed label="ImportDecl"]
  8 -> 11 [style=dashed label="STAR_TopLevelDecl_SC"]
  8 -> "8R13" [style=solid]
 "8R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  4 ImportDecl: IMPORT . ImportSpec\l  5           | IMPORT . '(' STAR_ImportSpec_SC ')'\l"]
  9 -> 4 [style=solid label="ID"]
  9 -> 12 [style=solid label="STRING_LIT"]
  9 -> 13 [style=solid label="'('"]
  9 -> 14 [style=solid label="'.'"]
  9 -> 15 [style=dashed label="PackageName"]
  9 -> 16 [style=dashed label="ImportSpec"]
  9 -> 17 [style=dashed label="ImportPath"]
  10 [label="State 10\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl . ';'\l"]
  10 -> 18 [style=solid label="';'"]
  11 [label="State 11\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC .\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC . TopLevelDecl ';'\l"]
  11 -> 19 [style=solid label="FUNC"]
  11 -> 20 [style=solid label="CONST"]
  11 -> 21 [style=solid label="VAR"]
  11 -> 22 [style=solid label="TYPE_TOK"]
  11 -> 23 [style=dashed label="TopLevelDecl"]
  11 -> 24 [style=dashed label="Declaration"]
  11 -> 25 [style=dashed label="ConstDecl"]
  11 -> 26 [style=dashed label="TypeDecl"]
  11 -> 27 [style=dashed label="VarDecl"]
  11 -> 28 [style=dashed label="FunctionDecl"]
  11 -> "11R1" [style=solid]
 "11R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  9 ImportPath: STRING_LIT .\l"]
  12 -> "12R9" [style=solid]
 "12R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  5 ImportDecl: IMPORT '(' . STAR_ImportSpec_SC ')'\l"]
  13 -> 29 [style=dashed label="STAR_ImportSpec_SC"]
  13 -> "13R17" [style=solid]
 "13R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  7 ImportSpec: '.' . ImportPath\l"]
  14 -> 12 [style=solid label="STRING_LIT"]
  14 -> 30 [style=dashed label="ImportPath"]
  15 [label="State 15\n\l  8 ImportSpec: PackageName . ImportPath\l"]
  15 -> 12 [style=solid label="STRING_LIT"]
  15 -> 31 [style=dashed label="ImportPath"]
  16 [label="State 16\n\l  4 ImportDecl: IMPORT ImportSpec .\l"]
  16 -> "16R4" [style=solid]
 "16R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  6 ImportSpec: ImportPath .\l"]
  17 -> "17R6" [style=solid]
 "17R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl ';' .\l"]
  18 -> "18R14" [style=solid]
 "18R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l132 FunctionDecl: FUNC . FunctionName Signature FunctionBody\l133             | FUNC . FunctionName Signature\l"]
  19 -> 32 [style=solid label="ID"]
  19 -> 33 [style=dashed label="FunctionName"]
  20 [label="State 20\n\l 37 ConstDecl: CONST . ConstSpec\l 38          | CONST . '(' STAR_ConstSpec_SC ')'\l"]
  20 -> 34 [style=solid label="ID"]
  20 -> 35 [style=solid label="'('"]
  20 -> 36 [style=dashed label="ConstSpec"]
  20 -> 37 [style=dashed label="IdentifierList"]
  21 [label="State 21\n\l 47 VarDecl: VAR . VarSpec\l 48        | VAR . '(' STAR_VarSpec_SC ')'\l"]
  21 -> 34 [style=solid label="ID"]
  21 -> 38 [style=solid label="'('"]
  21 -> 39 [style=dashed label="IdentifierList"]
  21 -> 40 [style=dashed label="VarSpec"]
  22 [label="State 22\n\l 41 TypeDecl: TYPE_TOK . TypeSpec\l 42         | TYPE_TOK . '(' STAR_TypeSpec_SC ')'\l"]
  22 -> 41 [style=solid label="ID"]
  22 -> 42 [style=solid label="'('"]
  22 -> 43 [style=dashed label="TypeSpec"]
  22 -> 44 [style=dashed label="AliasDecl"]
  22 -> 45 [style=dashed label="TypeDef"]
  23 [label="State 23\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl . ';'\l"]
  23 -> 46 [style=solid label="';'"]
  24 [label="State 24\n\l 10 TopLevelDecl: Declaration .\l"]
  24 -> "24R10" [style=solid]
 "24R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 34 Declaration: ConstDecl .\l"]
  25 -> "25R34" [style=solid]
 "25R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 35 Declaration: TypeDecl .\l"]
  26 -> "26R35" [style=solid]
 "26R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 36 Declaration: VarDecl .\l"]
  27 -> "27R36" [style=solid]
 "27R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 11 TopLevelDecl: FunctionDecl .\l"]
  28 -> "28R11" [style=solid]
 "28R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC . ')'\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC . ImportSpec ';'\l"]
  29 -> 4 [style=solid label="ID"]
  29 -> 12 [style=solid label="STRING_LIT"]
  29 -> 47 [style=solid label="')'"]
  29 -> 14 [style=solid label="'.'"]
  29 -> 15 [style=dashed label="PackageName"]
  29 -> 48 [style=dashed label="ImportSpec"]
  29 -> 17 [style=dashed label="ImportPath"]
  30 [label="State 30\n\l  7 ImportSpec: '.' ImportPath .\l"]
  30 -> "30R7" [style=solid]
 "30R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l  8 ImportSpec: PackageName ImportPath .\l"]
  31 -> "31R8" [style=solid]
 "31R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l134 FunctionName: ID .\l"]
  32 -> "32R134" [style=solid]
 "32R134" [label="R134", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l132 FunctionDecl: FUNC FunctionName . Signature FunctionBody\l133             | FUNC FunctionName . Signature\l"]
  33 -> 49 [style=solid label="'('"]
  33 -> 50 [style=dashed label="Signature"]
  33 -> 51 [style=dashed label="Parameters"]
  34 [label="State 34\n\l 40 IdentifierList: ID . STAR_CM_ID\l"]
  34 -> 52 [style=dashed label="STAR_CM_ID"]
  34 -> "34R19" [style=solid]
 "34R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 38 ConstDecl: CONST '(' . STAR_ConstSpec_SC ')'\l"]
  35 -> 53 [style=dashed label="STAR_ConstSpec_SC"]
  35 -> "35R21" [style=solid]
 "35R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 37 ConstDecl: CONST ConstSpec .\l"]
  36 -> "36R37" [style=solid]
 "36R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 39 ConstSpec: IdentifierList .\l"]
  37 -> "37R39" [style=solid]
 "37R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 48 VarDecl: VAR '(' . STAR_VarSpec_SC ')'\l"]
  38 -> 54 [style=dashed label="STAR_VarSpec_SC"]
  38 -> "38R23" [style=solid]
 "38R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 49 VarSpec: IdentifierList . \"=\" ExpressionList\l"]
  39 -> 55 [style=solid label="\"=\""]
  40 [label="State 40\n\l 47 VarDecl: VAR VarSpec .\l"]
  40 -> "40R47" [style=solid]
 "40R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 45 AliasDecl: ID . '=' Type\l 46 TypeDef: ID . Type\l"]
  41 -> 56 [style=solid label="FUNC"]
  41 -> 57 [style=solid label="STRUCT"]
  41 -> 58 [style=solid label="ID"]
  41 -> 59 [style=solid label="'*'"]
  41 -> 60 [style=solid label="'('"]
  41 -> 61 [style=solid label="'='"]
  41 -> 62 [style=solid label="'['"]
  41 -> 63 [style=dashed label="PackageName"]
  41 -> 64 [style=dashed label="QualifiedIdent"]
  41 -> 65 [style=dashed label="Type"]
  41 -> 66 [style=dashed label="TypeName"]
  41 -> 67 [style=dashed label="TypeLit"]
  41 -> 68 [style=dashed label="ArrayType"]
  41 -> 69 [style=dashed label="StructType"]
  41 -> 70 [style=dashed label="PointerType"]
  41 -> 71 [style=dashed label="FunctionType"]
  42 [label="State 42\n\l 42 TypeDecl: TYPE_TOK '(' . STAR_TypeSpec_SC ')'\l"]
  42 -> 72 [style=dashed label="STAR_TypeSpec_SC"]
  42 -> "42R27" [style=solid]
 "42R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 41 TypeDecl: TYPE_TOK TypeSpec .\l"]
  43 -> "43R41" [style=solid]
 "43R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 43 TypeSpec: AliasDecl .\l"]
  44 -> "44R43" [style=solid]
 "44R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 44 TypeSpec: TypeDef .\l"]
  45 -> "45R44" [style=solid]
 "45R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl ';' .\l"]
  46 -> "46R12" [style=solid]
 "46R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC ')' .\l"]
  47 -> "47R5" [style=solid]
 "47R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec . ';'\l"]
  48 -> 73 [style=solid label="';'"]
  49 [label="State 49\n\l215 Parameters: '(' . ')'\l216           | '(' . ParameterList ')'\l217           | '(' . ParameterList ',' ')'\l"]
  49 -> 56 [style=solid label="FUNC"]
  49 -> 57 [style=solid label="STRUCT"]
  49 -> 74 [style=solid label="ID"]
  49 -> 75 [style=solid label="ELIPSIS"]
  49 -> 59 [style=solid label="'*'"]
  49 -> 60 [style=solid label="'('"]
  49 -> 76 [style=solid label="')'"]
  49 -> 62 [style=solid label="'['"]
  49 -> 63 [style=dashed label="PackageName"]
  49 -> 77 [style=dashed label="IdentifierList"]
  49 -> 64 [style=dashed label="QualifiedIdent"]
  49 -> 78 [style=dashed label="Type"]
  49 -> 66 [style=dashed label="TypeName"]
  49 -> 67 [style=dashed label="TypeLit"]
  49 -> 68 [style=dashed label="ArrayType"]
  49 -> 69 [style=dashed label="StructType"]
  49 -> 70 [style=dashed label="PointerType"]
  49 -> 71 [style=dashed label="FunctionType"]
  49 -> 79 [style=dashed label="ParameterList"]
  49 -> 80 [style=dashed label="ParameterDecl"]
  50 [label="State 50\n\l132 FunctionDecl: FUNC FunctionName Signature . FunctionBody\l133             | FUNC FunctionName Signature .\l"]
  50 -> 81 [style=solid label="'{'"]
  50 -> 82 [style=dashed label="FunctionBody"]
  50 -> 83 [style=dashed label="Block"]
  50 -> "50R133" [style=solid]
 "50R133" [label="R133", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l211 Signature: Parameters .\l212          | Parameters . Result\l"]
  51 -> 56 [style=solid label="FUNC"]
  51 -> 57 [style=solid label="STRUCT"]
  51 -> 58 [style=solid label="ID"]
  51 -> 59 [style=solid label="'*'"]
  51 -> 84 [style=solid label="'('"]
  51 -> 62 [style=solid label="'['"]
  51 -> 63 [style=dashed label="PackageName"]
  51 -> 64 [style=dashed label="QualifiedIdent"]
  51 -> 85 [style=dashed label="Type"]
  51 -> 66 [style=dashed label="TypeName"]
  51 -> 67 [style=dashed label="TypeLit"]
  51 -> 68 [style=dashed label="ArrayType"]
  51 -> 69 [style=dashed label="StructType"]
  51 -> 70 [style=dashed label="PointerType"]
  51 -> 71 [style=dashed label="FunctionType"]
  51 -> 86 [style=dashed label="Result"]
  51 -> 87 [style=dashed label="Parameters"]
  51 -> "51R211" [style=solid]
 "51R211" [label="R211", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 18 STAR_CM_ID: STAR_CM_ID . ',' ID\l 40 IdentifierList: ID STAR_CM_ID .\l"]
  52 -> 88 [style=solid label="','"]
  52 -> "52R40" [style=solid]
 "52R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC . ConstSpec ';'\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC . ')'\l"]
  53 -> 34 [style=solid label="ID"]
  53 -> 89 [style=solid label="')'"]
  53 -> 90 [style=dashed label="ConstSpec"]
  53 -> 37 [style=dashed label="IdentifierList"]
  54 [label="State 54\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC . VarSpec ';'\l 48 VarDecl: VAR '(' STAR_VarSpec_SC . ')'\l"]
  54 -> 34 [style=solid label="ID"]
  54 -> 91 [style=solid label="')'"]
  54 -> 39 [style=dashed label="IdentifierList"]
  54 -> 92 [style=dashed label="VarSpec"]
  55 [label="State 55\n\l 49 VarSpec: IdentifierList \"=\" . ExpressionList\l"]
  55 -> 93 [style=solid label="FUNC"]
  55 -> 57 [style=solid label="STRUCT"]
  55 -> 94 [style=solid label="ID"]
  55 -> 95 [style=solid label="STRING_LIT"]
  55 -> 96 [style=solid label="BINARY_LIT"]
  55 -> 97 [style=solid label="HEX_LIT"]
  55 -> 98 [style=solid label="FLOAT_LIT"]
  55 -> 99 [style=solid label="DEC_LIT"]
  55 -> 100 [style=solid label="'+'"]
  55 -> 101 [style=solid label="'-'"]
  55 -> 102 [style=solid label="'*'"]
  55 -> 103 [style=solid label="'^'"]
  55 -> 104 [style=solid label="'&'"]
  55 -> 105 [style=solid label="'!'"]
  55 -> 106 [style=solid label="'['"]
  55 -> 107 [style=solid label="\"(\""]
  55 -> 63 [style=dashed label="PackageName"]
  55 -> 108 [style=dashed label="ExpressionList"]
  55 -> 109 [style=dashed label="Expression"]
  55 -> 110 [style=dashed label="UnaryExpr"]
  55 -> 111 [style=dashed label="unary_op"]
  55 -> 112 [style=dashed label="PrimaryExpr"]
  55 -> 113 [style=dashed label="Operand"]
  55 -> 114 [style=dashed label="Literal"]
  55 -> 115 [style=dashed label="INT_LIT"]
  55 -> 116 [style=dashed label="BasicLit"]
  55 -> 117 [style=dashed label="OperandName"]
  55 -> 118 [style=dashed label="QualifiedIdent"]
  55 -> 119 [style=dashed label="CompositeLit"]
  55 -> 120 [style=dashed label="LiteralType"]
  55 -> 121 [style=dashed label="FunctionLit"]
  55 -> 122 [style=dashed label="TypeName"]
  55 -> 123 [style=dashed label="ArrayType"]
  55 -> 124 [style=dashed label="StructType"]
  56 [label="State 56\n\l210 FunctionType: FUNC . Signature\l"]
  56 -> 49 [style=solid label="'('"]
  56 -> 125 [style=dashed label="Signature"]
  56 -> 51 [style=dashed label="Parameters"]
  57 [label="State 57\n\l204 StructType: STRUCT . '{' STAR_FieldDecl_SC '}'\l"]
  57 -> 126 [style=solid label="'{'"]
  58 [label="State 58\n\l  3 PackageName: ID .\l195 TypeName: ID .\l"]
  58 -> "58R3" [label="['.']", style=solid]
 "58R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  58 -> "58R195" [style=solid]
 "58R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l208 PointerType: '*' . BaseType\l"]
  59 -> 56 [style=solid label="FUNC"]
  59 -> 57 [style=solid label="STRUCT"]
  59 -> 58 [style=solid label="ID"]
  59 -> 59 [style=solid label="'*'"]
  59 -> 60 [style=solid label="'('"]
  59 -> 62 [style=solid label="'['"]
  59 -> 63 [style=dashed label="PackageName"]
  59 -> 64 [style=dashed label="QualifiedIdent"]
  59 -> 127 [style=dashed label="Type"]
  59 -> 66 [style=dashed label="TypeName"]
  59 -> 67 [style=dashed label="TypeLit"]
  59 -> 68 [style=dashed label="ArrayType"]
  59 -> 69 [style=dashed label="StructType"]
  59 -> 70 [style=dashed label="PointerType"]
  59 -> 128 [style=dashed label="BaseType"]
  59 -> 71 [style=dashed label="FunctionType"]
  60 [label="State 60\n\l194 Type: '(' . Type ')'\l"]
  60 -> 56 [style=solid label="FUNC"]
  60 -> 57 [style=solid label="STRUCT"]
  60 -> 58 [style=solid label="ID"]
  60 -> 59 [style=solid label="'*'"]
  60 -> 60 [style=solid label="'('"]
  60 -> 62 [style=solid label="'['"]
  60 -> 63 [style=dashed label="PackageName"]
  60 -> 64 [style=dashed label="QualifiedIdent"]
  60 -> 129 [style=dashed label="Type"]
  60 -> 66 [style=dashed label="TypeName"]
  60 -> 67 [style=dashed label="TypeLit"]
  60 -> 68 [style=dashed label="ArrayType"]
  60 -> 69 [style=dashed label="StructType"]
  60 -> 70 [style=dashed label="PointerType"]
  60 -> 71 [style=dashed label="FunctionType"]
  61 [label="State 61\n\l 45 AliasDecl: ID '=' . Type\l"]
  61 -> 56 [style=solid label="FUNC"]
  61 -> 57 [style=solid label="STRUCT"]
  61 -> 58 [style=solid label="ID"]
  61 -> 59 [style=solid label="'*'"]
  61 -> 60 [style=solid label="'('"]
  61 -> 62 [style=solid label="'['"]
  61 -> 63 [style=dashed label="PackageName"]
  61 -> 64 [style=dashed label="QualifiedIdent"]
  61 -> 130 [style=dashed label="Type"]
  61 -> 66 [style=dashed label="TypeName"]
  61 -> 67 [style=dashed label="TypeLit"]
  61 -> 68 [style=dashed label="ArrayType"]
  61 -> 69 [style=dashed label="StructType"]
  61 -> 70 [style=dashed label="PointerType"]
  61 -> 71 [style=dashed label="FunctionType"]
  62 [label="State 62\n\l201 ArrayType: '[' . ArrayLength ']' ElementType\l"]
  62 -> 93 [style=solid label="FUNC"]
  62 -> 57 [style=solid label="STRUCT"]
  62 -> 94 [style=solid label="ID"]
  62 -> 95 [style=solid label="STRING_LIT"]
  62 -> 96 [style=solid label="BINARY_LIT"]
  62 -> 97 [style=solid label="HEX_LIT"]
  62 -> 98 [style=solid label="FLOAT_LIT"]
  62 -> 99 [style=solid label="DEC_LIT"]
  62 -> 100 [style=solid label="'+'"]
  62 -> 101 [style=solid label="'-'"]
  62 -> 102 [style=solid label="'*'"]
  62 -> 103 [style=solid label="'^'"]
  62 -> 104 [style=solid label="'&'"]
  62 -> 105 [style=solid label="'!'"]
  62 -> 106 [style=solid label="'['"]
  62 -> 107 [style=solid label="\"(\""]
  62 -> 63 [style=dashed label="PackageName"]
  62 -> 131 [style=dashed label="Expression"]
  62 -> 110 [style=dashed label="UnaryExpr"]
  62 -> 111 [style=dashed label="unary_op"]
  62 -> 112 [style=dashed label="PrimaryExpr"]
  62 -> 113 [style=dashed label="Operand"]
  62 -> 114 [style=dashed label="Literal"]
  62 -> 115 [style=dashed label="INT_LIT"]
  62 -> 116 [style=dashed label="BasicLit"]
  62 -> 117 [style=dashed label="OperandName"]
  62 -> 118 [style=dashed label="QualifiedIdent"]
  62 -> 119 [style=dashed label="CompositeLit"]
  62 -> 120 [style=dashed label="LiteralType"]
  62 -> 121 [style=dashed label="FunctionLit"]
  62 -> 122 [style=dashed label="TypeName"]
  62 -> 123 [style=dashed label="ArrayType"]
  62 -> 132 [style=dashed label="ArrayLength"]
  62 -> 124 [style=dashed label="StructType"]
  63 [label="State 63\n\l112 QualifiedIdent: PackageName . '.' ID\l"]
  63 -> 133 [style=solid label="'.'"]
  64 [label="State 64\n\l196 TypeName: QualifiedIdent .\l"]
  64 -> "64R196" [style=solid]
 "64R196" [label="R196", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 46 TypeDef: ID Type .\l"]
  65 -> "65R46" [style=solid]
 "65R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l192 Type: TypeName .\l"]
  66 -> "66R192" [style=solid]
 "66R192" [label="R192", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l193 Type: TypeLit .\l"]
  67 -> "67R193" [style=solid]
 "67R193" [label="R193", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l197 TypeLit: ArrayType .\l"]
  68 -> "68R197" [style=solid]
 "68R197" [label="R197", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l198 TypeLit: StructType .\l"]
  69 -> "69R198" [style=solid]
 "69R198" [label="R198", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l199 TypeLit: PointerType .\l"]
  70 -> "70R199" [style=solid]
 "70R199" [label="R199", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l200 TypeLit: FunctionType .\l"]
  71 -> "71R200" [style=solid]
 "71R200" [label="R200", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC . ';'\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC . ')'\l"]
  72 -> 134 [style=solid label="';'"]
  72 -> 135 [style=solid label="')'"]
  73 [label="State 73\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec ';' .\l"]
  73 -> "73R16" [style=solid]
 "73R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l  3 PackageName: ID .\l 40 IdentifierList: ID . STAR_CM_ID\l195 TypeName: ID .\l"]
  74 -> 52 [style=dashed label="STAR_CM_ID"]
  74 -> "74R3" [label="['.']", style=solid]
 "74R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  74 -> "74R19" [style=solid]
 "74R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  74 -> "74R195d" [label="[',']", style=solid]
 "74R195d" [label="R195", fillcolor=5, shape=diamond, style=filled]
  74 -> "74R195" [label="[')']", style=solid]
 "74R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l222 ParameterDecl: ELIPSIS . Type\l"]
  75 -> 56 [style=solid label="FUNC"]
  75 -> 57 [style=solid label="STRUCT"]
  75 -> 58 [style=solid label="ID"]
  75 -> 59 [style=solid label="'*'"]
  75 -> 60 [style=solid label="'('"]
  75 -> 62 [style=solid label="'['"]
  75 -> 63 [style=dashed label="PackageName"]
  75 -> 64 [style=dashed label="QualifiedIdent"]
  75 -> 136 [style=dashed label="Type"]
  75 -> 66 [style=dashed label="TypeName"]
  75 -> 67 [style=dashed label="TypeLit"]
  75 -> 68 [style=dashed label="ArrayType"]
  75 -> 69 [style=dashed label="StructType"]
  75 -> 70 [style=dashed label="PointerType"]
  75 -> 71 [style=dashed label="FunctionType"]
  76 [label="State 76\n\l215 Parameters: '(' ')' .\l"]
  76 -> "76R215" [style=solid]
 "76R215" [label="R215", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l220 ParameterDecl: IdentifierList . Type\l221              | IdentifierList . ELIPSIS Type\l"]
  77 -> 56 [style=solid label="FUNC"]
  77 -> 57 [style=solid label="STRUCT"]
  77 -> 58 [style=solid label="ID"]
  77 -> 137 [style=solid label="ELIPSIS"]
  77 -> 59 [style=solid label="'*'"]
  77 -> 60 [style=solid label="'('"]
  77 -> 62 [style=solid label="'['"]
  77 -> 63 [style=dashed label="PackageName"]
  77 -> 64 [style=dashed label="QualifiedIdent"]
  77 -> 138 [style=dashed label="Type"]
  77 -> 66 [style=dashed label="TypeName"]
  77 -> 67 [style=dashed label="TypeLit"]
  77 -> 68 [style=dashed label="ArrayType"]
  77 -> 69 [style=dashed label="StructType"]
  77 -> 70 [style=dashed label="PointerType"]
  77 -> 71 [style=dashed label="FunctionType"]
  78 [label="State 78\n\l219 ParameterDecl: Type .\l"]
  78 -> "78R219" [style=solid]
 "78R219" [label="R219", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l216 Parameters: '(' ParameterList . ')'\l217           | '(' ParameterList . ',' ')'\l"]
  79 -> 139 [style=solid label="')'"]
  79 -> 140 [style=solid label="','"]
  80 [label="State 80\n\l218 ParameterList: ParameterDecl . STAR_CM_ParameterDecl\l"]
  80 -> 141 [style=dashed label="STAR_CM_ParameterDecl"]
  80 -> "80R31" [style=solid]
 "80R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l136 Block: '{' . STAR_Statement_SC '}'\l"]
  81 -> 142 [style=dashed label="STAR_Statement_SC"]
  81 -> "81R29" [style=solid]
 "81R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l132 FunctionDecl: FUNC FunctionName Signature FunctionBody .\l"]
  82 -> "82R132" [style=solid]
 "82R132" [label="R132", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l135 FunctionBody: Block .\l"]
  83 -> "83R135" [style=solid]
 "83R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l194 Type: '(' . Type ')'\l215 Parameters: '(' . ')'\l216           | '(' . ParameterList ')'\l217           | '(' . ParameterList ',' ')'\l"]
  84 -> 56 [style=solid label="FUNC"]
  84 -> 57 [style=solid label="STRUCT"]
  84 -> 74 [style=solid label="ID"]
  84 -> 75 [style=solid label="ELIPSIS"]
  84 -> 59 [style=solid label="'*'"]
  84 -> 60 [style=solid label="'('"]
  84 -> 76 [style=solid label="')'"]
  84 -> 62 [style=solid label="'['"]
  84 -> 63 [style=dashed label="PackageName"]
  84 -> 77 [style=dashed label="IdentifierList"]
  84 -> 64 [style=dashed label="QualifiedIdent"]
  84 -> 143 [style=dashed label="Type"]
  84 -> 66 [style=dashed label="TypeName"]
  84 -> 67 [style=dashed label="TypeLit"]
  84 -> 68 [style=dashed label="ArrayType"]
  84 -> 69 [style=dashed label="StructType"]
  84 -> 70 [style=dashed label="PointerType"]
  84 -> 71 [style=dashed label="FunctionType"]
  84 -> 79 [style=dashed label="ParameterList"]
  84 -> 80 [style=dashed label="ParameterDecl"]
  85 [label="State 85\n\l214 Result: Type .\l"]
  85 -> "85R214" [style=solid]
 "85R214" [label="R214", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l212 Signature: Parameters Result .\l"]
  86 -> "86R212" [style=solid]
 "86R212" [label="R212", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l213 Result: Parameters .\l"]
  87 -> "87R213" [style=solid]
 "87R213" [label="R213", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 18 STAR_CM_ID: STAR_CM_ID ',' . ID\l"]
  88 -> 144 [style=solid label="ID"]
  89 [label="State 89\n\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC ')' .\l"]
  89 -> "89R38" [style=solid]
 "89R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec . ';'\l"]
  90 -> 145 [style=solid label="';'"]
  91 [label="State 91\n\l 48 VarDecl: VAR '(' STAR_VarSpec_SC ')' .\l"]
  91 -> "91R48" [style=solid]
 "91R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec . ';'\l"]
  92 -> 146 [style=solid label="';'"]
  93 [label="State 93\n\l131 FunctionLit: FUNC . Signature FunctionBody\l"]
  93 -> 49 [style=solid label="'('"]
  93 -> 147 [style=dashed label="Signature"]
  93 -> 51 [style=dashed label="Parameters"]
  94 [label="State 94\n\l  3 PackageName: ID .\l110 OperandName: ID .\l195 TypeName: ID .\l"]
  94 -> "94R3" [label="['.']", style=solid]
 "94R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  94 -> "94R110d" [label="['.']", style=solid]
 "94R110d" [label="R110", fillcolor=5, shape=diamond, style=filled]
  94 -> "94R110" [style=solid]
 "94R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  94 -> "94R195d" [label="[ELIPSIS, ')', ',', '{']", style=solid]
 "94R195d" [label="R195", fillcolor=5, shape=diamond, style=filled]
  95 [label="State 95\n\l109 BasicLit: STRING_LIT .\l"]
  95 -> "95R109" [style=solid]
 "95R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l105 INT_LIT: BINARY_LIT .\l"]
  96 -> "96R105" [style=solid]
 "96R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l106 INT_LIT: HEX_LIT .\l"]
  97 -> "97R106" [style=solid]
 "97R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l108 BasicLit: FLOAT_LIT .\l"]
  98 -> "98R108" [style=solid]
 "98R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l104 INT_LIT: DEC_LIT .\l"]
  99 -> "99R104" [style=solid]
 "99R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 76 unary_op: '+' .\l"]
  100 -> "100R76" [style=solid]
 "100R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 77 unary_op: '-' .\l"]
  101 -> "101R77" [style=solid]
 "101R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 80 unary_op: '*' .\l"]
  102 -> "102R80" [style=solid]
 "102R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 79 unary_op: '^' .\l"]
  103 -> "103R79" [style=solid]
 "103R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 81 unary_op: '&' .\l"]
  104 -> "104R81" [style=solid]
 "104R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 78 unary_op: '!' .\l"]
  105 -> "105R78" [style=solid]
 "105R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l116 LiteralType: '[' . ELIPSIS ']' ElementType\l201 ArrayType: '[' . ArrayLength ']' ElementType\l"]
  106 -> 93 [style=solid label="FUNC"]
  106 -> 57 [style=solid label="STRUCT"]
  106 -> 94 [style=solid label="ID"]
  106 -> 95 [style=solid label="STRING_LIT"]
  106 -> 96 [style=solid label="BINARY_LIT"]
  106 -> 97 [style=solid label="HEX_LIT"]
  106 -> 98 [style=solid label="FLOAT_LIT"]
  106 -> 99 [style=solid label="DEC_LIT"]
  106 -> 148 [style=solid label="ELIPSIS"]
  106 -> 100 [style=solid label="'+'"]
  106 -> 101 [style=solid label="'-'"]
  106 -> 102 [style=solid label="'*'"]
  106 -> 103 [style=solid label="'^'"]
  106 -> 104 [style=solid label="'&'"]
  106 -> 105 [style=solid label="'!'"]
  106 -> 106 [style=solid label="'['"]
  106 -> 107 [style=solid label="\"(\""]
  106 -> 63 [style=dashed label="PackageName"]
  106 -> 131 [style=dashed label="Expression"]
  106 -> 110 [style=dashed label="UnaryExpr"]
  106 -> 111 [style=dashed label="unary_op"]
  106 -> 112 [style=dashed label="PrimaryExpr"]
  106 -> 113 [style=dashed label="Operand"]
  106 -> 114 [style=dashed label="Literal"]
  106 -> 115 [style=dashed label="INT_LIT"]
  106 -> 116 [style=dashed label="BasicLit"]
  106 -> 117 [style=dashed label="OperandName"]
  106 -> 118 [style=dashed label="QualifiedIdent"]
  106 -> 119 [style=dashed label="CompositeLit"]
  106 -> 120 [style=dashed label="LiteralType"]
  106 -> 121 [style=dashed label="FunctionLit"]
  106 -> 122 [style=dashed label="TypeName"]
  106 -> 123 [style=dashed label="ArrayType"]
  106 -> 132 [style=dashed label="ArrayLength"]
  106 -> 124 [style=dashed label="StructType"]
  107 [label="State 107\n\l100 Operand: \"(\" . Expression \")\"\l"]
  107 -> 93 [style=solid label="FUNC"]
  107 -> 57 [style=solid label="STRUCT"]
  107 -> 94 [style=solid label="ID"]
  107 -> 95 [style=solid label="STRING_LIT"]
  107 -> 96 [style=solid label="BINARY_LIT"]
  107 -> 97 [style=solid label="HEX_LIT"]
  107 -> 98 [style=solid label="FLOAT_LIT"]
  107 -> 99 [style=solid label="DEC_LIT"]
  107 -> 100 [style=solid label="'+'"]
  107 -> 101 [style=solid label="'-'"]
  107 -> 102 [style=solid label="'*'"]
  107 -> 103 [style=solid label="'^'"]
  107 -> 104 [style=solid label="'&'"]
  107 -> 105 [style=solid label="'!'"]
  107 -> 106 [style=solid label="'['"]
  107 -> 107 [style=solid label="\"(\""]
  107 -> 63 [style=dashed label="PackageName"]
  107 -> 149 [style=dashed label="Expression"]
  107 -> 110 [style=dashed label="UnaryExpr"]
  107 -> 111 [style=dashed label="unary_op"]
  107 -> 112 [style=dashed label="PrimaryExpr"]
  107 -> 113 [style=dashed label="Operand"]
  107 -> 114 [style=dashed label="Literal"]
  107 -> 115 [style=dashed label="INT_LIT"]
  107 -> 116 [style=dashed label="BasicLit"]
  107 -> 117 [style=dashed label="OperandName"]
  107 -> 118 [style=dashed label="QualifiedIdent"]
  107 -> 119 [style=dashed label="CompositeLit"]
  107 -> 120 [style=dashed label="LiteralType"]
  107 -> 121 [style=dashed label="FunctionLit"]
  107 -> 122 [style=dashed label="TypeName"]
  107 -> 123 [style=dashed label="ArrayType"]
  107 -> 124 [style=dashed label="StructType"]
  108 [label="State 108\n\l 49 VarSpec: IdentifierList \"=\" ExpressionList .\l"]
  108 -> "108R49" [style=solid]
 "108R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l"]
  109 -> 150 [style=solid label="'+'"]
  109 -> 151 [style=solid label="'-'"]
  109 -> 152 [style=solid label="'*'"]
  109 -> 153 [style=solid label="'/'"]
  109 -> 154 [style=solid label="\"||\""]
  109 -> 155 [style=solid label="\"&&\""]
  109 -> 156 [style=solid label="\"==\""]
  109 -> 157 [style=solid label="\"!=\""]
  109 -> 158 [style=solid label="'<'"]
  109 -> 159 [style=solid label="\"<=\""]
  109 -> 160 [style=solid label="'>'"]
  109 -> 161 [style=solid label="\">=\""]
  109 -> 162 [style=solid label="'|'"]
  109 -> 163 [style=solid label="'^'"]
  109 -> 164 [style=solid label="'%'"]
  109 -> 165 [style=solid label="\"<<\""]
  109 -> 166 [style=solid label="\">>\""]
  109 -> 167 [style=solid label="'&'"]
  109 -> 168 [style=dashed label="STAR_CM_EXP"]
  109 -> 169 [style=dashed label="binary_op"]
  109 -> 170 [style=dashed label="rel_op"]
  109 -> 171 [style=dashed label="add_op"]
  109 -> 172 [style=dashed label="mul_op"]
  109 -> "109R25" [style=solid]
 "109R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 51 Expression: UnaryExpr .\l"]
  110 -> "110R51" [style=solid]
 "110R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 54 UnaryExpr: unary_op . UnaryExpr\l"]
  111 -> 93 [style=solid label="FUNC"]
  111 -> 57 [style=solid label="STRUCT"]
  111 -> 94 [style=solid label="ID"]
  111 -> 95 [style=solid label="STRING_LIT"]
  111 -> 96 [style=solid label="BINARY_LIT"]
  111 -> 97 [style=solid label="HEX_LIT"]
  111 -> 98 [style=solid label="FLOAT_LIT"]
  111 -> 99 [style=solid label="DEC_LIT"]
  111 -> 100 [style=solid label="'+'"]
  111 -> 101 [style=solid label="'-'"]
  111 -> 102 [style=solid label="'*'"]
  111 -> 103 [style=solid label="'^'"]
  111 -> 104 [style=solid label="'&'"]
  111 -> 105 [style=solid label="'!'"]
  111 -> 106 [style=solid label="'['"]
  111 -> 107 [style=solid label="\"(\""]
  111 -> 63 [style=dashed label="PackageName"]
  111 -> 173 [style=dashed label="UnaryExpr"]
  111 -> 111 [style=dashed label="unary_op"]
  111 -> 112 [style=dashed label="PrimaryExpr"]
  111 -> 113 [style=dashed label="Operand"]
  111 -> 114 [style=dashed label="Literal"]
  111 -> 115 [style=dashed label="INT_LIT"]
  111 -> 116 [style=dashed label="BasicLit"]
  111 -> 117 [style=dashed label="OperandName"]
  111 -> 118 [style=dashed label="QualifiedIdent"]
  111 -> 119 [style=dashed label="CompositeLit"]
  111 -> 120 [style=dashed label="LiteralType"]
  111 -> 121 [style=dashed label="FunctionLit"]
  111 -> 122 [style=dashed label="TypeName"]
  111 -> 123 [style=dashed label="ArrayType"]
  111 -> 124 [style=dashed label="StructType"]
  112 [label="State 112\n\l 53 UnaryExpr: PrimaryExpr .\l 83 PrimaryExpr: PrimaryExpr . Index\l 84            | PrimaryExpr . Selector\l 85            | PrimaryExpr . Arguments\l"]
  112 -> 174 [style=solid label="'('"]
  112 -> 175 [style=solid label="'.'"]
  112 -> 176 [style=solid label="'['"]
  112 -> 177 [style=dashed label="Selector"]
  112 -> 178 [style=dashed label="Index"]
  112 -> 179 [style=dashed label="Arguments"]
  112 -> "112R53" [style=solid]
 "112R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  113 [label="State 113\n\l 82 PrimaryExpr: Operand .\l"]
  113 -> "113R82" [style=solid]
 "113R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l 98 Operand: Literal .\l"]
  114 -> "114R98" [style=solid]
 "114R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l107 BasicLit: INT_LIT .\l"]
  115 -> "115R107" [style=solid]
 "115R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l101 Literal: BasicLit .\l"]
  116 -> "116R101" [style=solid]
 "116R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l 99 Operand: OperandName .\l"]
  117 -> "117R99" [style=solid]
 "117R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l111 OperandName: QualifiedIdent .\l196 TypeName: QualifiedIdent .\l"]
  118 -> "118R111" [style=solid]
 "118R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  118 -> "118R196d" [label="[ELIPSIS, ')', ',', '{']", style=solid]
 "118R196d" [label="R196", fillcolor=5, shape=diamond, style=filled]
  119 [label="State 119\n\l102 Literal: CompositeLit .\l"]
  119 -> "119R102" [style=solid]
 "119R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l113 CompositeLit: LiteralType . LiteralValue\l"]
  120 -> 180 [style=solid label="'{'"]
  120 -> 181 [style=dashed label="LiteralValue"]
  121 [label="State 121\n\l103 Literal: FunctionLit .\l"]
  121 -> "121R103" [style=solid]
 "121R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l117 LiteralType: TypeName .\l"]
  122 -> "122R117" [style=solid]
 "122R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l115 LiteralType: ArrayType .\l"]
  123 -> "123R115" [style=solid]
 "123R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l114 LiteralType: StructType .\l"]
  124 -> "124R114" [style=solid]
 "124R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l210 FunctionType: FUNC Signature .\l"]
  125 -> "125R210" [style=solid]
 "125R210" [label="R210", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l204 StructType: STRUCT '{' . STAR_FieldDecl_SC '}'\l"]
  126 -> 182 [style=dashed label="STAR_FieldDecl_SC"]
  126 -> "126R33" [style=solid]
 "126R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l209 BaseType: Type .\l"]
  127 -> "127R209" [style=solid]
 "127R209" [label="R209", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l208 PointerType: '*' BaseType .\l"]
  128 -> "128R208" [style=solid]
 "128R208" [label="R208", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l194 Type: '(' Type . ')'\l"]
  129 -> 183 [style=solid label="')'"]
  130 [label="State 130\n\l 45 AliasDecl: ID '=' Type .\l"]
  130 -> "130R45" [style=solid]
 "130R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 52 Expression: Expression . binary_op Expression\l202 ArrayLength: Expression .\l"]
  131 -> 150 [style=solid label="'+'"]
  131 -> 151 [style=solid label="'-'"]
  131 -> 152 [style=solid label="'*'"]
  131 -> 153 [style=solid label="'/'"]
  131 -> 154 [style=solid label="\"||\""]
  131 -> 155 [style=solid label="\"&&\""]
  131 -> 156 [style=solid label="\"==\""]
  131 -> 157 [style=solid label="\"!=\""]
  131 -> 158 [style=solid label="'<'"]
  131 -> 159 [style=solid label="\"<=\""]
  131 -> 160 [style=solid label="'>'"]
  131 -> 161 [style=solid label="\">=\""]
  131 -> 162 [style=solid label="'|'"]
  131 -> 163 [style=solid label="'^'"]
  131 -> 164 [style=solid label="'%'"]
  131 -> 165 [style=solid label="\"<<\""]
  131 -> 166 [style=solid label="\">>\""]
  131 -> 167 [style=solid label="'&'"]
  131 -> 169 [style=dashed label="binary_op"]
  131 -> 170 [style=dashed label="rel_op"]
  131 -> 171 [style=dashed label="add_op"]
  131 -> 172 [style=dashed label="mul_op"]
  131 -> "131R202" [style=solid]
 "131R202" [label="R202", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l201 ArrayType: '[' ArrayLength . ']' ElementType\l"]
  132 -> 184 [style=solid label="']'"]
  133 [label="State 133\n\l112 QualifiedIdent: PackageName '.' . ID\l"]
  133 -> 185 [style=solid label="ID"]
  134 [label="State 134\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC ';' .\l"]
  134 -> "134R26" [style=solid]
 "134R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC ')' .\l"]
  135 -> "135R42" [style=solid]
 "135R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l222 ParameterDecl: ELIPSIS Type .\l"]
  136 -> "136R222" [style=solid]
 "136R222" [label="R222", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l221 ParameterDecl: IdentifierList ELIPSIS . Type\l"]
  137 -> 56 [style=solid label="FUNC"]
  137 -> 57 [style=solid label="STRUCT"]
  137 -> 58 [style=solid label="ID"]
  137 -> 59 [style=solid label="'*'"]
  137 -> 60 [style=solid label="'('"]
  137 -> 62 [style=solid label="'['"]
  137 -> 63 [style=dashed label="PackageName"]
  137 -> 64 [style=dashed label="QualifiedIdent"]
  137 -> 186 [style=dashed label="Type"]
  137 -> 66 [style=dashed label="TypeName"]
  137 -> 67 [style=dashed label="TypeLit"]
  137 -> 68 [style=dashed label="ArrayType"]
  137 -> 69 [style=dashed label="StructType"]
  137 -> 70 [style=dashed label="PointerType"]
  137 -> 71 [style=dashed label="FunctionType"]
  138 [label="State 138\n\l220 ParameterDecl: IdentifierList Type .\l"]
  138 -> "138R220" [style=solid]
 "138R220" [label="R220", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l216 Parameters: '(' ParameterList ')' .\l"]
  139 -> "139R216" [style=solid]
 "139R216" [label="R216", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l217 Parameters: '(' ParameterList ',' . ')'\l"]
  140 -> 187 [style=solid label="')'"]
  141 [label="State 141\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl . ',' ParameterDecl\l218 ParameterList: ParameterDecl STAR_CM_ParameterDecl .\l"]
  141 -> 188 [style=solid label="','"]
  141 -> "141R218d" [label="[',']", style=solid]
 "141R218d" [label="R218", fillcolor=5, shape=diamond, style=filled]
  141 -> "141R218" [style=solid]
 "141R218" [label="R218", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 28 STAR_Statement_SC: STAR_Statement_SC . Statement ';'\l136 Block: '{' STAR_Statement_SC . '}'\l"]
  142 -> 189 [style=solid label="BREAK"]
  142 -> 93 [style=solid label="FUNC"]
  142 -> 57 [style=solid label="STRUCT"]
  142 -> 190 [style=solid label="RETURN"]
  142 -> 191 [style=solid label="GOTO"]
  142 -> 20 [style=solid label="CONST"]
  142 -> 192 [style=solid label="IF"]
  142 -> 193 [style=solid label="CONTINUE"]
  142 -> 194 [style=solid label="FOR"]
  142 -> 195 [style=solid label="ID"]
  142 -> 21 [style=solid label="VAR"]
  142 -> 95 [style=solid label="STRING_LIT"]
  142 -> 96 [style=solid label="BINARY_LIT"]
  142 -> 97 [style=solid label="HEX_LIT"]
  142 -> 98 [style=solid label="FLOAT_LIT"]
  142 -> 99 [style=solid label="DEC_LIT"]
  142 -> 196 [style=solid label="GO"]
  142 -> 197 [style=solid label="FALLTHROUGH"]
  142 -> 22 [style=solid label="TYPE_TOK"]
  142 -> 100 [style=solid label="'+'"]
  142 -> 101 [style=solid label="'-'"]
  142 -> 102 [style=solid label="'*'"]
  142 -> 103 [style=solid label="'^'"]
  142 -> 104 [style=solid label="'&'"]
  142 -> 105 [style=solid label="'!'"]
  142 -> 106 [style=solid label="'['"]
  142 -> 107 [style=solid label="\"(\""]
  142 -> 81 [style=solid label="'{'"]
  142 -> 198 [style=solid label="'}'"]
  142 -> 63 [style=dashed label="PackageName"]
  142 -> 199 [style=dashed label="Declaration"]
  142 -> 25 [style=dashed label="ConstDecl"]
  142 -> 26 [style=dashed label="TypeDecl"]
  142 -> 27 [style=dashed label="VarDecl"]
  142 -> 200 [style=dashed label="ExpressionList"]
  142 -> 201 [style=dashed label="Expression"]
  142 -> 110 [style=dashed label="UnaryExpr"]
  142 -> 111 [style=dashed label="unary_op"]
  142 -> 112 [style=dashed label="PrimaryExpr"]
  142 -> 113 [style=dashed label="Operand"]
  142 -> 114 [style=dashed label="Literal"]
  142 -> 115 [style=dashed label="INT_LIT"]
  142 -> 116 [style=dashed label="BasicLit"]
  142 -> 117 [style=dashed label="OperandName"]
  142 -> 118 [style=dashed label="QualifiedIdent"]
  142 -> 119 [style=dashed label="CompositeLit"]
  142 -> 120 [style=dashed label="LiteralType"]
  142 -> 121 [style=dashed label="FunctionLit"]
  142 -> 202 [style=dashed label="Block"]
  142 -> 203 [style=dashed label="Statement"]
  142 -> 204 [style=dashed label="LabeledStmt"]
  142 -> 205 [style=dashed label="Label"]
  142 -> 206 [style=dashed label="SimpleStmt"]
  142 -> 207 [style=dashed label="EmptyStmt"]
  142 -> 208 [style=dashed label="ExpressionStmt"]
  142 -> 209 [style=dashed label="IncDecStmt"]
  142 -> 210 [style=dashed label="Assignment"]
  142 -> 211 [style=dashed label="IfStmt"]
  142 -> 212 [style=dashed label="ForStmt"]
  142 -> 213 [style=dashed label="GoStmt"]
  142 -> 214 [style=dashed label="ReturnStmt"]
  142 -> 215 [style=dashed label="BreakStmt"]
  142 -> 216 [style=dashed label="ContinueStmt"]
  142 -> 217 [style=dashed label="GotoStmt"]
  142 -> 218 [style=dashed label="FallthroughStmt"]
  142 -> 122 [style=dashed label="TypeName"]
  142 -> 123 [style=dashed label="ArrayType"]
  142 -> 124 [style=dashed label="StructType"]
  142 -> "142R155" [style=solid]
 "142R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l194 Type: '(' Type . ')'\l219 ParameterDecl: Type .\l"]
  143 -> 183 [style=solid label="')'"]
  143 -> "143R219d" [label="[')']", style=solid]
 "143R219d" [label="R219", fillcolor=5, shape=diamond, style=filled]
  143 -> "143R219" [style=solid]
 "143R219" [label="R219", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 18 STAR_CM_ID: STAR_CM_ID ',' ID .\l"]
  144 -> "144R18" [style=solid]
 "144R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec ';' .\l"]
  145 -> "145R20" [style=solid]
 "145R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec ';' .\l"]
  146 -> "146R22" [style=solid]
 "146R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l131 FunctionLit: FUNC Signature . FunctionBody\l"]
  147 -> 81 [style=solid label="'{'"]
  147 -> 219 [style=dashed label="FunctionBody"]
  147 -> 83 [style=dashed label="Block"]
  148 [label="State 148\n\l116 LiteralType: '[' ELIPSIS . ']' ElementType\l"]
  148 -> 220 [style=solid label="']'"]
  149 [label="State 149\n\l 52 Expression: Expression . binary_op Expression\l100 Operand: \"(\" Expression . \")\"\l"]
  149 -> 150 [style=solid label="'+'"]
  149 -> 151 [style=solid label="'-'"]
  149 -> 152 [style=solid label="'*'"]
  149 -> 153 [style=solid label="'/'"]
  149 -> 154 [style=solid label="\"||\""]
  149 -> 155 [style=solid label="\"&&\""]
  149 -> 156 [style=solid label="\"==\""]
  149 -> 157 [style=solid label="\"!=\""]
  149 -> 158 [style=solid label="'<'"]
  149 -> 159 [style=solid label="\"<=\""]
  149 -> 160 [style=solid label="'>'"]
  149 -> 161 [style=solid label="\">=\""]
  149 -> 162 [style=solid label="'|'"]
  149 -> 163 [style=solid label="'^'"]
  149 -> 164 [style=solid label="'%'"]
  149 -> 165 [style=solid label="\"<<\""]
  149 -> 166 [style=solid label="\">>\""]
  149 -> 167 [style=solid label="'&'"]
  149 -> 221 [style=solid label="\")\""]
  149 -> 169 [style=dashed label="binary_op"]
  149 -> 170 [style=dashed label="rel_op"]
  149 -> 171 [style=dashed label="add_op"]
  149 -> 172 [style=dashed label="mul_op"]
  150 [label="State 150\n\l 66 add_op: '+' .\l"]
  150 -> "150R66" [style=solid]
 "150R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 67 add_op: '-' .\l"]
  151 -> "151R67" [style=solid]
 "151R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 70 mul_op: '*' .\l"]
  152 -> "152R70" [style=solid]
 "152R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 71 mul_op: '/' .\l"]
  153 -> "153R71" [style=solid]
 "153R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 55 binary_op: \"||\" .\l"]
  154 -> "154R55" [style=solid]
 "154R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 56 binary_op: \"&&\" .\l"]
  155 -> "155R56" [style=solid]
 "155R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 60 rel_op: \"==\" .\l"]
  156 -> "156R60" [style=solid]
 "156R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 61 rel_op: \"!=\" .\l"]
  157 -> "157R61" [style=solid]
 "157R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 62 rel_op: '<' .\l"]
  158 -> "158R62" [style=solid]
 "158R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 63 rel_op: \"<=\" .\l"]
  159 -> "159R63" [style=solid]
 "159R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 64 rel_op: '>' .\l"]
  160 -> "160R64" [style=solid]
 "160R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 65 rel_op: \">=\" .\l"]
  161 -> "161R65" [style=solid]
 "161R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 68 add_op: '|' .\l"]
  162 -> "162R68" [style=solid]
 "162R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 69 add_op: '^' .\l"]
  163 -> "163R69" [style=solid]
 "163R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 72 mul_op: '%' .\l"]
  164 -> "164R72" [style=solid]
 "164R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 73 mul_op: \"<<\" .\l"]
  165 -> "165R73" [style=solid]
 "165R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l 74 mul_op: \">>\" .\l"]
  166 -> "166R74" [style=solid]
 "166R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 75 mul_op: '&' .\l"]
  167 -> "167R75" [style=solid]
 "167R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l 24 STAR_CM_EXP: STAR_CM_EXP . ',' Expression\l 50 ExpressionList: Expression STAR_CM_EXP .\l"]
  168 -> 222 [style=solid label="','"]
  168 -> "168R50d" [label="[',']", style=solid]
 "168R50d" [label="R50", fillcolor=5, shape=diamond, style=filled]
  168 -> "168R50" [style=solid]
 "168R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 52 Expression: Expression binary_op . Expression\l"]
  169 -> 93 [style=solid label="FUNC"]
  169 -> 57 [style=solid label="STRUCT"]
  169 -> 94 [style=solid label="ID"]
  169 -> 95 [style=solid label="STRING_LIT"]
  169 -> 96 [style=solid label="BINARY_LIT"]
  169 -> 97 [style=solid label="HEX_LIT"]
  169 -> 98 [style=solid label="FLOAT_LIT"]
  169 -> 99 [style=solid label="DEC_LIT"]
  169 -> 100 [style=solid label="'+'"]
  169 -> 101 [style=solid label="'-'"]
  169 -> 102 [style=solid label="'*'"]
  169 -> 103 [style=solid label="'^'"]
  169 -> 104 [style=solid label="'&'"]
  169 -> 105 [style=solid label="'!'"]
  169 -> 106 [style=solid label="'['"]
  169 -> 107 [style=solid label="\"(\""]
  169 -> 63 [style=dashed label="PackageName"]
  169 -> 223 [style=dashed label="Expression"]
  169 -> 110 [style=dashed label="UnaryExpr"]
  169 -> 111 [style=dashed label="unary_op"]
  169 -> 112 [style=dashed label="PrimaryExpr"]
  169 -> 113 [style=dashed label="Operand"]
  169 -> 114 [style=dashed label="Literal"]
  169 -> 115 [style=dashed label="INT_LIT"]
  169 -> 116 [style=dashed label="BasicLit"]
  169 -> 117 [style=dashed label="OperandName"]
  169 -> 118 [style=dashed label="QualifiedIdent"]
  169 -> 119 [style=dashed label="CompositeLit"]
  169 -> 120 [style=dashed label="LiteralType"]
  169 -> 121 [style=dashed label="FunctionLit"]
  169 -> 122 [style=dashed label="TypeName"]
  169 -> 123 [style=dashed label="ArrayType"]
  169 -> 124 [style=dashed label="StructType"]
  170 [label="State 170\n\l 57 binary_op: rel_op .\l"]
  170 -> "170R57" [style=solid]
 "170R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  171 [label="State 171\n\l 58 binary_op: add_op .\l"]
  171 -> "171R58" [style=solid]
 "171R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 59 binary_op: mul_op .\l"]
  172 -> "172R59" [style=solid]
 "172R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  173 [label="State 173\n\l 54 UnaryExpr: unary_op UnaryExpr .\l"]
  173 -> "173R54" [style=solid]
 "173R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  174 [label="State 174\n\l 88 Arguments: '(' . ')'\l 89          | '(' . ArgumentInBracket ')'\l"]
  174 -> 224 [style=solid label="FUNC"]
  174 -> 57 [style=solid label="STRUCT"]
  174 -> 94 [style=solid label="ID"]
  174 -> 95 [style=solid label="STRING_LIT"]
  174 -> 96 [style=solid label="BINARY_LIT"]
  174 -> 97 [style=solid label="HEX_LIT"]
  174 -> 98 [style=solid label="FLOAT_LIT"]
  174 -> 99 [style=solid label="DEC_LIT"]
  174 -> 100 [style=solid label="'+'"]
  174 -> 101 [style=solid label="'-'"]
  174 -> 225 [style=solid label="'*'"]
  174 -> 60 [style=solid label="'('"]
  174 -> 226 [style=solid label="')'"]
  174 -> 103 [style=solid label="'^'"]
  174 -> 104 [style=solid label="'&'"]
  174 -> 105 [style=solid label="'!'"]
  174 -> 106 [style=solid label="'['"]
  174 -> 107 [style=solid label="\"(\""]
  174 -> 63 [style=dashed label="PackageName"]
  174 -> 227 [style=dashed label="ExpressionList"]
  174 -> 109 [style=dashed label="Expression"]
  174 -> 110 [style=dashed label="UnaryExpr"]
  174 -> 111 [style=dashed label="unary_op"]
  174 -> 112 [style=dashed label="PrimaryExpr"]
  174 -> 228 [style=dashed label="ArgumentInBracket"]
  174 -> 229 [style=dashed label="ArgumentInBracketFirst"]
  174 -> 113 [style=dashed label="Operand"]
  174 -> 114 [style=dashed label="Literal"]
  174 -> 115 [style=dashed label="INT_LIT"]
  174 -> 116 [style=dashed label="BasicLit"]
  174 -> 117 [style=dashed label="OperandName"]
  174 -> 118 [style=dashed label="QualifiedIdent"]
  174 -> 119 [style=dashed label="CompositeLit"]
  174 -> 120 [style=dashed label="LiteralType"]
  174 -> 121 [style=dashed label="FunctionLit"]
  174 -> 230 [style=dashed label="Type"]
  174 -> 231 [style=dashed label="TypeName"]
  174 -> 67 [style=dashed label="TypeLit"]
  174 -> 232 [style=dashed label="ArrayType"]
  174 -> 233 [style=dashed label="StructType"]
  174 -> 70 [style=dashed label="PointerType"]
  174 -> 71 [style=dashed label="FunctionType"]
  175 [label="State 175\n\l 86 Selector: '.' . ID\l"]
  175 -> 234 [style=solid label="ID"]
  176 [label="State 176\n\l 87 Index: '[' . Expression ']'\l"]
  176 -> 93 [style=solid label="FUNC"]
  176 -> 57 [style=solid label="STRUCT"]
  176 -> 94 [style=solid label="ID"]
  176 -> 95 [style=solid label="STRING_LIT"]
  176 -> 96 [style=solid label="BINARY_LIT"]
  176 -> 97 [style=solid label="HEX_LIT"]
  176 -> 98 [style=solid label="FLOAT_LIT"]
  176 -> 99 [style=solid label="DEC_LIT"]
  176 -> 100 [style=solid label="'+'"]
  176 -> 101 [style=solid label="'-'"]
  176 -> 102 [style=solid label="'*'"]
  176 -> 103 [style=solid label="'^'"]
  176 -> 104 [style=solid label="'&'"]
  176 -> 105 [style=solid label="'!'"]
  176 -> 106 [style=solid label="'['"]
  176 -> 107 [style=solid label="\"(\""]
  176 -> 63 [style=dashed label="PackageName"]
  176 -> 235 [style=dashed label="Expression"]
  176 -> 110 [style=dashed label="UnaryExpr"]
  176 -> 111 [style=dashed label="unary_op"]
  176 -> 112 [style=dashed label="PrimaryExpr"]
  176 -> 113 [style=dashed label="Operand"]
  176 -> 114 [style=dashed label="Literal"]
  176 -> 115 [style=dashed label="INT_LIT"]
  176 -> 116 [style=dashed label="BasicLit"]
  176 -> 117 [style=dashed label="OperandName"]
  176 -> 118 [style=dashed label="QualifiedIdent"]
  176 -> 119 [style=dashed label="CompositeLit"]
  176 -> 120 [style=dashed label="LiteralType"]
  176 -> 121 [style=dashed label="FunctionLit"]
  176 -> 122 [style=dashed label="TypeName"]
  176 -> 123 [style=dashed label="ArrayType"]
  176 -> 124 [style=dashed label="StructType"]
  177 [label="State 177\n\l 84 PrimaryExpr: PrimaryExpr Selector .\l"]
  177 -> "177R84" [style=solid]
 "177R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 83 PrimaryExpr: PrimaryExpr Index .\l"]
  178 -> "178R83" [style=solid]
 "178R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  179 [label="State 179\n\l 85 PrimaryExpr: PrimaryExpr Arguments .\l"]
  179 -> "179R85" [style=solid]
 "179R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l118 LiteralValue: '{' . '}'\l119             | '{' . ElementList '}'\l120             | '{' . ElementList ',' '}'\l"]
  180 -> 93 [style=solid label="FUNC"]
  180 -> 57 [style=solid label="STRUCT"]
  180 -> 236 [style=solid label="ID"]
  180 -> 95 [style=solid label="STRING_LIT"]
  180 -> 96 [style=solid label="BINARY_LIT"]
  180 -> 97 [style=solid label="HEX_LIT"]
  180 -> 98 [style=solid label="FLOAT_LIT"]
  180 -> 99 [style=solid label="DEC_LIT"]
  180 -> 100 [style=solid label="'+'"]
  180 -> 101 [style=solid label="'-'"]
  180 -> 102 [style=solid label="'*'"]
  180 -> 103 [style=solid label="'^'"]
  180 -> 104 [style=solid label="'&'"]
  180 -> 105 [style=solid label="'!'"]
  180 -> 106 [style=solid label="'['"]
  180 -> 107 [style=solid label="\"(\""]
  180 -> 180 [style=solid label="'{'"]
  180 -> 237 [style=solid label="'}'"]
  180 -> 63 [style=dashed label="PackageName"]
  180 -> 238 [style=dashed label="Expression"]
  180 -> 110 [style=dashed label="UnaryExpr"]
  180 -> 111 [style=dashed label="unary_op"]
  180 -> 112 [style=dashed label="PrimaryExpr"]
  180 -> 113 [style=dashed label="Operand"]
  180 -> 114 [style=dashed label="Literal"]
  180 -> 115 [style=dashed label="INT_LIT"]
  180 -> 116 [style=dashed label="BasicLit"]
  180 -> 117 [style=dashed label="OperandName"]
  180 -> 118 [style=dashed label="QualifiedIdent"]
  180 -> 119 [style=dashed label="CompositeLit"]
  180 -> 120 [style=dashed label="LiteralType"]
  180 -> 239 [style=dashed label="LiteralValue"]
  180 -> 240 [style=dashed label="ElementList"]
  180 -> 241 [style=dashed label="KeyedElement"]
  180 -> 242 [style=dashed label="Key"]
  180 -> 243 [style=dashed label="Element"]
  180 -> 121 [style=dashed label="FunctionLit"]
  180 -> 122 [style=dashed label="TypeName"]
  180 -> 123 [style=dashed label="ArrayType"]
  180 -> 124 [style=dashed label="StructType"]
  181 [label="State 181\n\l113 CompositeLit: LiteralType LiteralValue .\l"]
  181 -> "181R113" [style=solid]
 "181R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC . FieldDecl ';'\l204 StructType: STRUCT '{' STAR_FieldDecl_SC . '}'\l"]
  182 -> 34 [style=solid label="ID"]
  182 -> 244 [style=solid label="'}'"]
  182 -> 245 [style=dashed label="IdentifierList"]
  182 -> 246 [style=dashed label="FieldDecl"]
  183 [label="State 183\n\l194 Type: '(' Type ')' .\l"]
  183 -> "183R194" [style=solid]
 "183R194" [label="R194", fillcolor=3, shape=diamond, style=filled]
  184 [label="State 184\n\l201 ArrayType: '[' ArrayLength ']' . ElementType\l"]
  184 -> 56 [style=solid label="FUNC"]
  184 -> 57 [style=solid label="STRUCT"]
  184 -> 58 [style=solid label="ID"]
  184 -> 59 [style=solid label="'*'"]
  184 -> 60 [style=solid label="'('"]
  184 -> 62 [style=solid label="'['"]
  184 -> 63 [style=dashed label="PackageName"]
  184 -> 64 [style=dashed label="QualifiedIdent"]
  184 -> 247 [style=dashed label="Type"]
  184 -> 66 [style=dashed label="TypeName"]
  184 -> 67 [style=dashed label="TypeLit"]
  184 -> 68 [style=dashed label="ArrayType"]
  184 -> 248 [style=dashed label="ElementType"]
  184 -> 69 [style=dashed label="StructType"]
  184 -> 70 [style=dashed label="PointerType"]
  184 -> 71 [style=dashed label="FunctionType"]
  185 [label="State 185\n\l112 QualifiedIdent: PackageName '.' ID .\l"]
  185 -> "185R112" [style=solid]
 "185R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l221 ParameterDecl: IdentifierList ELIPSIS Type .\l"]
  186 -> "186R221" [style=solid]
 "186R221" [label="R221", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l217 Parameters: '(' ParameterList ',' ')' .\l"]
  187 -> "187R217" [style=solid]
 "187R217" [label="R217", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' . ParameterDecl\l"]
  188 -> 56 [style=solid label="FUNC"]
  188 -> 57 [style=solid label="STRUCT"]
  188 -> 74 [style=solid label="ID"]
  188 -> 75 [style=solid label="ELIPSIS"]
  188 -> 59 [style=solid label="'*'"]
  188 -> 60 [style=solid label="'('"]
  188 -> 62 [style=solid label="'['"]
  188 -> 63 [style=dashed label="PackageName"]
  188 -> 77 [style=dashed label="IdentifierList"]
  188 -> 64 [style=dashed label="QualifiedIdent"]
  188 -> 78 [style=dashed label="Type"]
  188 -> 66 [style=dashed label="TypeName"]
  188 -> 67 [style=dashed label="TypeLit"]
  188 -> 68 [style=dashed label="ArrayType"]
  188 -> 69 [style=dashed label="StructType"]
  188 -> 70 [style=dashed label="PointerType"]
  188 -> 71 [style=dashed label="FunctionType"]
  188 -> 249 [style=dashed label="ParameterDecl"]
  189 [label="State 189\n\l186 BreakStmt: BREAK . Label\l187          | BREAK .\l"]
  189 -> 250 [style=solid label="ID"]
  189 -> 251 [style=dashed label="Label"]
  189 -> "189R187" [style=solid]
 "189R187" [label="R187", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l184 ReturnStmt: RETURN . ExpressionList\l185           | RETURN .\l"]
  190 -> 93 [style=solid label="FUNC"]
  190 -> 57 [style=solid label="STRUCT"]
  190 -> 94 [style=solid label="ID"]
  190 -> 95 [style=solid label="STRING_LIT"]
  190 -> 96 [style=solid label="BINARY_LIT"]
  190 -> 97 [style=solid label="HEX_LIT"]
  190 -> 98 [style=solid label="FLOAT_LIT"]
  190 -> 99 [style=solid label="DEC_LIT"]
  190 -> 100 [style=solid label="'+'"]
  190 -> 101 [style=solid label="'-'"]
  190 -> 102 [style=solid label="'*'"]
  190 -> 103 [style=solid label="'^'"]
  190 -> 104 [style=solid label="'&'"]
  190 -> 105 [style=solid label="'!'"]
  190 -> 106 [style=solid label="'['"]
  190 -> 107 [style=solid label="\"(\""]
  190 -> 63 [style=dashed label="PackageName"]
  190 -> 252 [style=dashed label="ExpressionList"]
  190 -> 109 [style=dashed label="Expression"]
  190 -> 110 [style=dashed label="UnaryExpr"]
  190 -> 111 [style=dashed label="unary_op"]
  190 -> 112 [style=dashed label="PrimaryExpr"]
  190 -> 113 [style=dashed label="Operand"]
  190 -> 114 [style=dashed label="Literal"]
  190 -> 115 [style=dashed label="INT_LIT"]
  190 -> 116 [style=dashed label="BasicLit"]
  190 -> 117 [style=dashed label="OperandName"]
  190 -> 118 [style=dashed label="QualifiedIdent"]
  190 -> 119 [style=dashed label="CompositeLit"]
  190 -> 120 [style=dashed label="LiteralType"]
  190 -> 121 [style=dashed label="FunctionLit"]
  190 -> 122 [style=dashed label="TypeName"]
  190 -> 123 [style=dashed label="ArrayType"]
  190 -> 124 [style=dashed label="StructType"]
  190 -> "190R185" [style=solid]
 "190R185" [label="R185", fillcolor=3, shape=diamond, style=filled]
  191 [label="State 191\n\l190 GotoStmt: GOTO . Label\l"]
  191 -> 250 [style=solid label="ID"]
  191 -> 253 [style=dashed label="Label"]
  192 [label="State 192\n\l162 IfStmt: IF . Expression Block\l163       | IF . SimpleStmt ';' Expression Block\l164       | IF . SimpleStmt ';' Expression Block ELSE Block\l165       | IF . SimpleStmt ';' Expression Block ELSE IfStmt\l"]
  192 -> 93 [style=solid label="FUNC"]
  192 -> 57 [style=solid label="STRUCT"]
  192 -> 94 [style=solid label="ID"]
  192 -> 95 [style=solid label="STRING_LIT"]
  192 -> 96 [style=solid label="BINARY_LIT"]
  192 -> 97 [style=solid label="HEX_LIT"]
  192 -> 98 [style=solid label="FLOAT_LIT"]
  192 -> 99 [style=solid label="DEC_LIT"]
  192 -> 100 [style=solid label="'+'"]
  192 -> 101 [style=solid label="'-'"]
  192 -> 102 [style=solid label="'*'"]
  192 -> 103 [style=solid label="'^'"]
  192 -> 104 [style=solid label="'&'"]
  192 -> 105 [style=solid label="'!'"]
  192 -> 106 [style=solid label="'['"]
  192 -> 107 [style=solid label="\"(\""]
  192 -> 63 [style=dashed label="PackageName"]
  192 -> 200 [style=dashed label="ExpressionList"]
  192 -> 254 [style=dashed label="Expression"]
  192 -> 110 [style=dashed label="UnaryExpr"]
  192 -> 111 [style=dashed label="unary_op"]
  192 -> 112 [style=dashed label="PrimaryExpr"]
  192 -> 113 [style=dashed label="Operand"]
  192 -> 114 [style=dashed label="Literal"]
  192 -> 115 [style=dashed label="INT_LIT"]
  192 -> 116 [style=dashed label="BasicLit"]
  192 -> 117 [style=dashed label="OperandName"]
  192 -> 118 [style=dashed label="QualifiedIdent"]
  192 -> 119 [style=dashed label="CompositeLit"]
  192 -> 120 [style=dashed label="LiteralType"]
  192 -> 121 [style=dashed label="FunctionLit"]
  192 -> 255 [style=dashed label="SimpleStmt"]
  192 -> 207 [style=dashed label="EmptyStmt"]
  192 -> 208 [style=dashed label="ExpressionStmt"]
  192 -> 209 [style=dashed label="IncDecStmt"]
  192 -> 210 [style=dashed label="Assignment"]
  192 -> 122 [style=dashed label="TypeName"]
  192 -> 123 [style=dashed label="ArrayType"]
  192 -> 124 [style=dashed label="StructType"]
  192 -> "192R155" [style=solid]
 "192R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l188 ContinueStmt: CONTINUE . Label\l189             | CONTINUE .\l"]
  193 -> 250 [style=solid label="ID"]
  193 -> 256 [style=dashed label="Label"]
  193 -> "193R189" [style=solid]
 "193R189" [label="R189", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l166 ForStmt: FOR . Block\l167        | FOR . ForStmtAfter Block\l"]
  194 -> 93 [style=solid label="FUNC"]
  194 -> 57 [style=solid label="STRUCT"]
  194 -> 257 [style=solid label="RANGE"]
  194 -> 94 [style=solid label="ID"]
  194 -> 95 [style=solid label="STRING_LIT"]
  194 -> 96 [style=solid label="BINARY_LIT"]
  194 -> 97 [style=solid label="HEX_LIT"]
  194 -> 98 [style=solid label="FLOAT_LIT"]
  194 -> 99 [style=solid label="DEC_LIT"]
  194 -> 100 [style=solid label="'+'"]
  194 -> 101 [style=solid label="'-'"]
  194 -> 102 [style=solid label="'*'"]
  194 -> 103 [style=solid label="'^'"]
  194 -> 104 [style=solid label="'&'"]
  194 -> 105 [style=solid label="'!'"]
  194 -> 106 [style=solid label="'['"]
  194 -> 107 [style=solid label="\"(\""]
  194 -> 81 [style=solid label="'{'"]
  194 -> 63 [style=dashed label="PackageName"]
  194 -> 258 [style=dashed label="ExpressionList"]
  194 -> 259 [style=dashed label="Expression"]
  194 -> 110 [style=dashed label="UnaryExpr"]
  194 -> 111 [style=dashed label="unary_op"]
  194 -> 112 [style=dashed label="PrimaryExpr"]
  194 -> 113 [style=dashed label="Operand"]
  194 -> 114 [style=dashed label="Literal"]
  194 -> 115 [style=dashed label="INT_LIT"]
  194 -> 116 [style=dashed label="BasicLit"]
  194 -> 117 [style=dashed label="OperandName"]
  194 -> 118 [style=dashed label="QualifiedIdent"]
  194 -> 119 [style=dashed label="CompositeLit"]
  194 -> 120 [style=dashed label="LiteralType"]
  194 -> 121 [style=dashed label="FunctionLit"]
  194 -> 260 [style=dashed label="Block"]
  194 -> 261 [style=dashed label="SimpleStmt"]
  194 -> 207 [style=dashed label="EmptyStmt"]
  194 -> 208 [style=dashed label="ExpressionStmt"]
  194 -> 209 [style=dashed label="IncDecStmt"]
  194 -> 210 [style=dashed label="Assignment"]
  194 -> 262 [style=dashed label="ForStmtAfter"]
  194 -> 263 [style=dashed label="Condition"]
  194 -> 264 [style=dashed label="ForClause"]
  194 -> 265 [style=dashed label="OPT_InitStmt"]
  194 -> 266 [style=dashed label="InitStmt"]
  194 -> 267 [style=dashed label="RangeClause"]
  194 -> 122 [style=dashed label="TypeName"]
  194 -> 123 [style=dashed label="ArrayType"]
  194 -> 124 [style=dashed label="StructType"]
  194 -> "194R155" [style=solid]
 "194R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  194 -> "194R174d" [label="[';']", style=solid]
 "194R174d" [label="R174", fillcolor=5, shape=diamond, style=filled]
  195 [label="State 195\n\l  3 PackageName: ID .\l110 OperandName: ID .\l150 Label: ID .\l195 TypeName: ID .\l"]
  195 -> "195R3" [label="['.']", style=solid]
 "195R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  195 -> "195R110d" [label="['.']", style=solid]
 "195R110d" [label="R110", fillcolor=5, shape=diamond, style=filled]
  195 -> "195R110" [style=solid]
 "195R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  195 -> "195R150" [label="[':']", style=solid]
 "195R150" [label="R150", fillcolor=3, shape=diamond, style=filled]
  195 -> "195R195" [label="['{']", style=solid]
 "195R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l183 GoStmt: GO . Expression\l"]
  196 -> 93 [style=solid label="FUNC"]
  196 -> 57 [style=solid label="STRUCT"]
  196 -> 94 [style=solid label="ID"]
  196 -> 95 [style=solid label="STRING_LIT"]
  196 -> 96 [style=solid label="BINARY_LIT"]
  196 -> 97 [style=solid label="HEX_LIT"]
  196 -> 98 [style=solid label="FLOAT_LIT"]
  196 -> 99 [style=solid label="DEC_LIT"]
  196 -> 100 [style=solid label="'+'"]
  196 -> 101 [style=solid label="'-'"]
  196 -> 102 [style=solid label="'*'"]
  196 -> 103 [style=solid label="'^'"]
  196 -> 104 [style=solid label="'&'"]
  196 -> 105 [style=solid label="'!'"]
  196 -> 106 [style=solid label="'['"]
  196 -> 107 [style=solid label="\"(\""]
  196 -> 63 [style=dashed label="PackageName"]
  196 -> 268 [style=dashed label="Expression"]
  196 -> 110 [style=dashed label="UnaryExpr"]
  196 -> 111 [style=dashed label="unary_op"]
  196 -> 112 [style=dashed label="PrimaryExpr"]
  196 -> 113 [style=dashed label="Operand"]
  196 -> 114 [style=dashed label="Literal"]
  196 -> 115 [style=dashed label="INT_LIT"]
  196 -> 116 [style=dashed label="BasicLit"]
  196 -> 117 [style=dashed label="OperandName"]
  196 -> 118 [style=dashed label="QualifiedIdent"]
  196 -> 119 [style=dashed label="CompositeLit"]
  196 -> 120 [style=dashed label="LiteralType"]
  196 -> 121 [style=dashed label="FunctionLit"]
  196 -> 122 [style=dashed label="TypeName"]
  196 -> 123 [style=dashed label="ArrayType"]
  196 -> 124 [style=dashed label="StructType"]
  197 [label="State 197\n\l191 FallthroughStmt: FALLTHROUGH .\l"]
  197 -> "197R191" [style=solid]
 "197R191" [label="R191", fillcolor=3, shape=diamond, style=filled]
  198 [label="State 198\n\l136 Block: '{' STAR_Statement_SC '}' .\l"]
  198 -> "198R136" [style=solid]
 "198R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  199 [label="State 199\n\l137 Statement: Declaration .\l"]
  199 -> "199R137" [style=solid]
 "199R137" [label="R137", fillcolor=3, shape=diamond, style=filled]
  200 [label="State 200\n\l159 Assignment: ExpressionList . assign_op ExpressionList\l"]
  200 -> 150 [style=solid label="'+'"]
  200 -> 151 [style=solid label="'-'"]
  200 -> 152 [style=solid label="'*'"]
  200 -> 153 [style=solid label="'/'"]
  200 -> 162 [style=solid label="'|'"]
  200 -> 163 [style=solid label="'^'"]
  200 -> 164 [style=solid label="'%'"]
  200 -> 165 [style=solid label="\"<<\""]
  200 -> 166 [style=solid label="\">>\""]
  200 -> 167 [style=solid label="'&'"]
  200 -> 269 [style=dashed label="add_op"]
  200 -> 270 [style=dashed label="mul_op"]
  200 -> 271 [style=dashed label="assign_op"]
  201 [label="State 201\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l156 ExpressionStmt: Expression .\l157 IncDecStmt: Expression . \"++\"\l158           | Expression . \"--\"\l"]
  201 -> 150 [style=solid label="'+'"]
  201 -> 151 [style=solid label="'-'"]
  201 -> 152 [style=solid label="'*'"]
  201 -> 153 [style=solid label="'/'"]
  201 -> 154 [style=solid label="\"||\""]
  201 -> 155 [style=solid label="\"&&\""]
  201 -> 156 [style=solid label="\"==\""]
  201 -> 157 [style=solid label="\"!=\""]
  201 -> 158 [style=solid label="'<'"]
  201 -> 159 [style=solid label="\"<=\""]
  201 -> 160 [style=solid label="'>'"]
  201 -> 161 [style=solid label="\">=\""]
  201 -> 162 [style=solid label="'|'"]
  201 -> 163 [style=solid label="'^'"]
  201 -> 164 [style=solid label="'%'"]
  201 -> 165 [style=solid label="\"<<\""]
  201 -> 166 [style=solid label="\">>\""]
  201 -> 167 [style=solid label="'&'"]
  201 -> 272 [style=solid label="\"++\""]
  201 -> 273 [style=solid label="\"--\""]
  201 -> 168 [style=dashed label="STAR_CM_EXP"]
  201 -> 169 [style=dashed label="binary_op"]
  201 -> 170 [style=dashed label="rel_op"]
  201 -> 171 [style=dashed label="add_op"]
  201 -> 172 [style=dashed label="mul_op"]
  201 -> "201R25d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "201R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  201 -> "201R25" [label="[',']", style=solid]
 "201R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  201 -> "201R156" [style=solid]
 "201R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l146 Statement: Block .\l"]
  202 -> "202R146" [style=solid]
 "202R146" [label="R146", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement . ';'\l"]
  203 -> 274 [style=solid label="';'"]
  204 [label="State 204\n\l138 Statement: LabeledStmt .\l"]
  204 -> "204R138" [style=solid]
 "204R138" [label="R138", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l149 LabeledStmt: Label . ':' Statement\l"]
  205 -> 275 [style=solid label="':'"]
  206 [label="State 206\n\l139 Statement: SimpleStmt .\l"]
  206 -> "206R139" [style=solid]
 "206R139" [label="R139", fillcolor=3, shape=diamond, style=filled]
  207 [label="State 207\n\l151 SimpleStmt: EmptyStmt .\l"]
  207 -> "207R151" [style=solid]
 "207R151" [label="R151", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l152 SimpleStmt: ExpressionStmt .\l"]
  208 -> "208R152" [style=solid]
 "208R152" [label="R152", fillcolor=3, shape=diamond, style=filled]
  209 [label="State 209\n\l153 SimpleStmt: IncDecStmt .\l"]
  209 -> "209R153" [style=solid]
 "209R153" [label="R153", fillcolor=3, shape=diamond, style=filled]
  210 [label="State 210\n\l154 SimpleStmt: Assignment .\l"]
  210 -> "210R154" [style=solid]
 "210R154" [label="R154", fillcolor=3, shape=diamond, style=filled]
  211 [label="State 211\n\l147 Statement: IfStmt .\l"]
  211 -> "211R147" [style=solid]
 "211R147" [label="R147", fillcolor=3, shape=diamond, style=filled]
  212 [label="State 212\n\l148 Statement: ForStmt .\l"]
  212 -> "212R148" [style=solid]
 "212R148" [label="R148", fillcolor=3, shape=diamond, style=filled]
  213 [label="State 213\n\l140 Statement: GoStmt .\l"]
  213 -> "213R140" [style=solid]
 "213R140" [label="R140", fillcolor=3, shape=diamond, style=filled]
  214 [label="State 214\n\l141 Statement: ReturnStmt .\l"]
  214 -> "214R141" [style=solid]
 "214R141" [label="R141", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l142 Statement: BreakStmt .\l"]
  215 -> "215R142" [style=solid]
 "215R142" [label="R142", fillcolor=3, shape=diamond, style=filled]
  216 [label="State 216\n\l143 Statement: ContinueStmt .\l"]
  216 -> "216R143" [style=solid]
 "216R143" [label="R143", fillcolor=3, shape=diamond, style=filled]
  217 [label="State 217\n\l144 Statement: GotoStmt .\l"]
  217 -> "217R144" [style=solid]
 "217R144" [label="R144", fillcolor=3, shape=diamond, style=filled]
  218 [label="State 218\n\l145 Statement: FallthroughStmt .\l"]
  218 -> "218R145" [style=solid]
 "218R145" [label="R145", fillcolor=3, shape=diamond, style=filled]
  219 [label="State 219\n\l131 FunctionLit: FUNC Signature FunctionBody .\l"]
  219 -> "219R131" [style=solid]
 "219R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  220 [label="State 220\n\l116 LiteralType: '[' ELIPSIS ']' . ElementType\l"]
  220 -> 56 [style=solid label="FUNC"]
  220 -> 57 [style=solid label="STRUCT"]
  220 -> 58 [style=solid label="ID"]
  220 -> 59 [style=solid label="'*'"]
  220 -> 60 [style=solid label="'('"]
  220 -> 62 [style=solid label="'['"]
  220 -> 63 [style=dashed label="PackageName"]
  220 -> 64 [style=dashed label="QualifiedIdent"]
  220 -> 247 [style=dashed label="Type"]
  220 -> 66 [style=dashed label="TypeName"]
  220 -> 67 [style=dashed label="TypeLit"]
  220 -> 68 [style=dashed label="ArrayType"]
  220 -> 276 [style=dashed label="ElementType"]
  220 -> 69 [style=dashed label="StructType"]
  220 -> 70 [style=dashed label="PointerType"]
  220 -> 71 [style=dashed label="FunctionType"]
  221 [label="State 221\n\l100 Operand: \"(\" Expression \")\" .\l"]
  221 -> "221R100" [style=solid]
 "221R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  222 [label="State 222\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' . Expression\l"]
  222 -> 93 [style=solid label="FUNC"]
  222 -> 57 [style=solid label="STRUCT"]
  222 -> 94 [style=solid label="ID"]
  222 -> 95 [style=solid label="STRING_LIT"]
  222 -> 96 [style=solid label="BINARY_LIT"]
  222 -> 97 [style=solid label="HEX_LIT"]
  222 -> 98 [style=solid label="FLOAT_LIT"]
  222 -> 99 [style=solid label="DEC_LIT"]
  222 -> 100 [style=solid label="'+'"]
  222 -> 101 [style=solid label="'-'"]
  222 -> 102 [style=solid label="'*'"]
  222 -> 103 [style=solid label="'^'"]
  222 -> 104 [style=solid label="'&'"]
  222 -> 105 [style=solid label="'!'"]
  222 -> 106 [style=solid label="'['"]
  222 -> 107 [style=solid label="\"(\""]
  222 -> 63 [style=dashed label="PackageName"]
  222 -> 277 [style=dashed label="Expression"]
  222 -> 110 [style=dashed label="UnaryExpr"]
  222 -> 111 [style=dashed label="unary_op"]
  222 -> 112 [style=dashed label="PrimaryExpr"]
  222 -> 113 [style=dashed label="Operand"]
  222 -> 114 [style=dashed label="Literal"]
  222 -> 115 [style=dashed label="INT_LIT"]
  222 -> 116 [style=dashed label="BasicLit"]
  222 -> 117 [style=dashed label="OperandName"]
  222 -> 118 [style=dashed label="QualifiedIdent"]
  222 -> 119 [style=dashed label="CompositeLit"]
  222 -> 120 [style=dashed label="LiteralType"]
  222 -> 121 [style=dashed label="FunctionLit"]
  222 -> 122 [style=dashed label="TypeName"]
  222 -> 123 [style=dashed label="ArrayType"]
  222 -> 124 [style=dashed label="StructType"]
  223 [label="State 223\n\l 52 Expression: Expression . binary_op Expression\l 52           | Expression binary_op Expression .\l"]
  223 -> 150 [style=solid label="'+'"]
  223 -> 151 [style=solid label="'-'"]
  223 -> 152 [style=solid label="'*'"]
  223 -> 153 [style=solid label="'/'"]
  223 -> 154 [style=solid label="\"||\""]
  223 -> 155 [style=solid label="\"&&\""]
  223 -> 156 [style=solid label="\"==\""]
  223 -> 157 [style=solid label="\"!=\""]
  223 -> 158 [style=solid label="'<'"]
  223 -> 159 [style=solid label="\"<=\""]
  223 -> 160 [style=solid label="'>'"]
  223 -> 161 [style=solid label="\">=\""]
  223 -> 162 [style=solid label="'|'"]
  223 -> 163 [style=solid label="'^'"]
  223 -> 164 [style=solid label="'%'"]
  223 -> 165 [style=solid label="\"<<\""]
  223 -> 166 [style=solid label="\">>\""]
  223 -> 167 [style=solid label="'&'"]
  223 -> 169 [style=dashed label="binary_op"]
  223 -> 170 [style=dashed label="rel_op"]
  223 -> 171 [style=dashed label="add_op"]
  223 -> 172 [style=dashed label="mul_op"]
  223 -> "223R52d" [label="['+', '-', '*', '/', \"||\", \"&&\", \"==\", \"!=\", '<', \"<=\", '>', \">=\", '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "223R52d" [label="R52", fillcolor=5, shape=diamond, style=filled]
  223 -> "223R52" [style=solid]
 "223R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  224 [label="State 224\n\l131 FunctionLit: FUNC . Signature FunctionBody\l210 FunctionType: FUNC . Signature\l"]
  224 -> 49 [style=solid label="'('"]
  224 -> 278 [style=dashed label="Signature"]
  224 -> 51 [style=dashed label="Parameters"]
  225 [label="State 225\n\l 80 unary_op: '*' .\l208 PointerType: '*' . BaseType\l"]
  225 -> 56 [style=solid label="FUNC"]
  225 -> 57 [style=solid label="STRUCT"]
  225 -> 58 [style=solid label="ID"]
  225 -> 60 [style=solid label="'('"]
  225 -> 62 [style=solid label="'['"]
  225 -> 63 [style=dashed label="PackageName"]
  225 -> 64 [style=dashed label="QualifiedIdent"]
  225 -> 127 [style=dashed label="Type"]
  225 -> 66 [style=dashed label="TypeName"]
  225 -> 67 [style=dashed label="TypeLit"]
  225 -> 68 [style=dashed label="ArrayType"]
  225 -> 69 [style=dashed label="StructType"]
  225 -> 70 [style=dashed label="PointerType"]
  225 -> 128 [style=dashed label="BaseType"]
  225 -> 71 [style=dashed label="FunctionType"]
  225 -> "225R80d" [label="[FUNC, STRUCT, ID, '[']", style=solid]
 "225R80d" [label="R80", fillcolor=5, shape=diamond, style=filled]
  225 -> "225R80" [style=solid]
 "225R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  226 [label="State 226\n\l 88 Arguments: '(' ')' .\l"]
  226 -> "226R88" [style=solid]
 "226R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  227 [label="State 227\n\l 91 ArgumentInBracketFirst: ExpressionList .\l"]
  227 -> "227R91" [style=solid]
 "227R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  228 [label="State 228\n\l 89 Arguments: '(' ArgumentInBracket . ')'\l"]
  228 -> 279 [style=solid label="')'"]
  229 [label="State 229\n\l 90 ArgumentInBracket: ArgumentInBracketFirst . ArgumentInBracketEnd\l"]
  229 -> 280 [style=solid label="ELIPSIS"]
  229 -> 281 [style=solid label="','"]
  229 -> 282 [style=dashed label="ArgumentInBracketEnd"]
  229 -> "229R97" [style=solid]
 "229R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  230 [label="State 230\n\l 92 ArgumentInBracketFirst: Type .\l 93                       | Type . ',' ExpressionList\l"]
  230 -> 283 [style=solid label="','"]
  230 -> "230R92d" [label="[',']", style=solid]
 "230R92d" [label="R92", fillcolor=5, shape=diamond, style=filled]
  230 -> "230R92" [style=solid]
 "230R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  231 [label="State 231\n\l117 LiteralType: TypeName .\l192 Type: TypeName .\l"]
  231 -> "231R117" [label="['{']", style=solid]
 "231R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  231 -> "231R192" [style=solid]
 "231R192" [label="R192", fillcolor=3, shape=diamond, style=filled]
  232 [label="State 232\n\l115 LiteralType: ArrayType .\l197 TypeLit: ArrayType .\l"]
  232 -> "232R115" [label="['{']", style=solid]
 "232R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  232 -> "232R197" [style=solid]
 "232R197" [label="R197", fillcolor=3, shape=diamond, style=filled]
  233 [label="State 233\n\l114 LiteralType: StructType .\l198 TypeLit: StructType .\l"]
  233 -> "233R114" [label="['{']", style=solid]
 "233R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  233 -> "233R198" [style=solid]
 "233R198" [label="R198", fillcolor=3, shape=diamond, style=filled]
  234 [label="State 234\n\l 86 Selector: '.' ID .\l"]
  234 -> "234R86" [style=solid]
 "234R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  235 [label="State 235\n\l 52 Expression: Expression . binary_op Expression\l 87 Index: '[' Expression . ']'\l"]
  235 -> 150 [style=solid label="'+'"]
  235 -> 151 [style=solid label="'-'"]
  235 -> 152 [style=solid label="'*'"]
  235 -> 153 [style=solid label="'/'"]
  235 -> 154 [style=solid label="\"||\""]
  235 -> 155 [style=solid label="\"&&\""]
  235 -> 156 [style=solid label="\"==\""]
  235 -> 157 [style=solid label="\"!=\""]
  235 -> 158 [style=solid label="'<'"]
  235 -> 159 [style=solid label="\"<=\""]
  235 -> 160 [style=solid label="'>'"]
  235 -> 161 [style=solid label="\">=\""]
  235 -> 162 [style=solid label="'|'"]
  235 -> 163 [style=solid label="'^'"]
  235 -> 164 [style=solid label="'%'"]
  235 -> 165 [style=solid label="\"<<\""]
  235 -> 166 [style=solid label="\">>\""]
  235 -> 167 [style=solid label="'&'"]
  235 -> 284 [style=solid label="']'"]
  235 -> 169 [style=dashed label="binary_op"]
  235 -> 170 [style=dashed label="rel_op"]
  235 -> 171 [style=dashed label="add_op"]
  235 -> 172 [style=dashed label="mul_op"]
  236 [label="State 236\n\l  3 PackageName: ID .\l110 OperandName: ID .\l126 Key: ID .\l195 TypeName: ID .\l"]
  236 -> "236R3" [label="['.']", style=solid]
 "236R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  236 -> "236R110d" [label="['.']", style=solid]
 "236R110d" [label="R110", fillcolor=5, shape=diamond, style=filled]
  236 -> "236R110" [style=solid]
 "236R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  236 -> "236R126d" [label="[':']", style=solid]
 "236R126d" [label="R126", fillcolor=5, shape=diamond, style=filled]
  236 -> "236R195" [label="['{']", style=solid]
 "236R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  237 [label="State 237\n\l118 LiteralValue: '{' '}' .\l"]
  237 -> "237R118" [style=solid]
 "237R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  238 [label="State 238\n\l 52 Expression: Expression . binary_op Expression\l127 Key: Expression .\l129 Element: Expression .\l"]
  238 -> 150 [style=solid label="'+'"]
  238 -> 151 [style=solid label="'-'"]
  238 -> 152 [style=solid label="'*'"]
  238 -> 153 [style=solid label="'/'"]
  238 -> 154 [style=solid label="\"||\""]
  238 -> 155 [style=solid label="\"&&\""]
  238 -> 156 [style=solid label="\"==\""]
  238 -> 157 [style=solid label="\"!=\""]
  238 -> 158 [style=solid label="'<'"]
  238 -> 159 [style=solid label="\"<=\""]
  238 -> 160 [style=solid label="'>'"]
  238 -> 161 [style=solid label="\">=\""]
  238 -> 162 [style=solid label="'|'"]
  238 -> 163 [style=solid label="'^'"]
  238 -> 164 [style=solid label="'%'"]
  238 -> 165 [style=solid label="\"<<\""]
  238 -> 166 [style=solid label="\">>\""]
  238 -> 167 [style=solid label="'&'"]
  238 -> 169 [style=dashed label="binary_op"]
  238 -> 170 [style=dashed label="rel_op"]
  238 -> 171 [style=dashed label="add_op"]
  238 -> 172 [style=dashed label="mul_op"]
  238 -> "238R127" [label="[':']", style=solid]
 "238R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  238 -> "238R129" [style=solid]
 "238R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  239 [label="State 239\n\l128 Key: LiteralValue .\l130 Element: LiteralValue .\l"]
  239 -> "239R128" [label="[':']", style=solid]
 "239R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  239 -> "239R130" [style=solid]
 "239R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  240 [label="State 240\n\l119 LiteralValue: '{' ElementList . '}'\l120             | '{' ElementList . ',' '}'\l"]
  240 -> 285 [style=solid label="','"]
  240 -> 286 [style=solid label="'}'"]
  241 [label="State 241\n\l121 ElementList: KeyedElement . STAR_CM_KeyedElement\l"]
  241 -> 287 [style=dashed label="STAR_CM_KeyedElement"]
  241 -> "241R123" [style=solid]
 "241R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  242 [label="State 242\n\l124 KeyedElement: Key . ':' Element\l"]
  242 -> 288 [style=solid label="':'"]
  243 [label="State 243\n\l125 KeyedElement: Element .\l"]
  243 -> "243R125" [style=solid]
 "243R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  244 [label="State 244\n\l204 StructType: STRUCT '{' STAR_FieldDecl_SC '}' .\l"]
  244 -> "244R204" [style=solid]
 "244R204" [label="R204", fillcolor=3, shape=diamond, style=filled]
  245 [label="State 245\n\l205 FieldDecl: IdentifierList . Type Tag\l206          | IdentifierList . Type\l"]
  245 -> 56 [style=solid label="FUNC"]
  245 -> 57 [style=solid label="STRUCT"]
  245 -> 58 [style=solid label="ID"]
  245 -> 59 [style=solid label="'*'"]
  245 -> 60 [style=solid label="'('"]
  245 -> 62 [style=solid label="'['"]
  245 -> 63 [style=dashed label="PackageName"]
  245 -> 64 [style=dashed label="QualifiedIdent"]
  245 -> 289 [style=dashed label="Type"]
  245 -> 66 [style=dashed label="TypeName"]
  245 -> 67 [style=dashed label="TypeLit"]
  245 -> 68 [style=dashed label="ArrayType"]
  245 -> 69 [style=dashed label="StructType"]
  245 -> 70 [style=dashed label="PointerType"]
  245 -> 71 [style=dashed label="FunctionType"]
  246 [label="State 246\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl . ';'\l"]
  246 -> 290 [style=solid label="';'"]
  247 [label="State 247\n\l203 ElementType: Type .\l"]
  247 -> "247R203" [style=solid]
 "247R203" [label="R203", fillcolor=3, shape=diamond, style=filled]
  248 [label="State 248\n\l201 ArrayType: '[' ArrayLength ']' ElementType .\l"]
  248 -> "248R201" [style=solid]
 "248R201" [label="R201", fillcolor=3, shape=diamond, style=filled]
  249 [label="State 249\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' ParameterDecl .\l"]
  249 -> "249R30" [style=solid]
 "249R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  250 [label="State 250\n\l150 Label: ID .\l"]
  250 -> "250R150" [style=solid]
 "250R150" [label="R150", fillcolor=3, shape=diamond, style=filled]
  251 [label="State 251\n\l186 BreakStmt: BREAK Label .\l"]
  251 -> "251R186" [style=solid]
 "251R186" [label="R186", fillcolor=3, shape=diamond, style=filled]
  252 [label="State 252\n\l184 ReturnStmt: RETURN ExpressionList .\l"]
  252 -> "252R184" [style=solid]
 "252R184" [label="R184", fillcolor=3, shape=diamond, style=filled]
  253 [label="State 253\n\l190 GotoStmt: GOTO Label .\l"]
  253 -> "253R190" [style=solid]
 "253R190" [label="R190", fillcolor=3, shape=diamond, style=filled]
  254 [label="State 254\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l156 ExpressionStmt: Expression .\l157 IncDecStmt: Expression . \"++\"\l158           | Expression . \"--\"\l162 IfStmt: IF Expression . Block\l"]
  254 -> 150 [style=solid label="'+'"]
  254 -> 151 [style=solid label="'-'"]
  254 -> 152 [style=solid label="'*'"]
  254 -> 153 [style=solid label="'/'"]
  254 -> 154 [style=solid label="\"||\""]
  254 -> 155 [style=solid label="\"&&\""]
  254 -> 156 [style=solid label="\"==\""]
  254 -> 157 [style=solid label="\"!=\""]
  254 -> 158 [style=solid label="'<'"]
  254 -> 159 [style=solid label="\"<=\""]
  254 -> 160 [style=solid label="'>'"]
  254 -> 161 [style=solid label="\">=\""]
  254 -> 162 [style=solid label="'|'"]
  254 -> 163 [style=solid label="'^'"]
  254 -> 164 [style=solid label="'%'"]
  254 -> 165 [style=solid label="\"<<\""]
  254 -> 166 [style=solid label="\">>\""]
  254 -> 167 [style=solid label="'&'"]
  254 -> 81 [style=solid label="'{'"]
  254 -> 272 [style=solid label="\"++\""]
  254 -> 273 [style=solid label="\"--\""]
  254 -> 168 [style=dashed label="STAR_CM_EXP"]
  254 -> 169 [style=dashed label="binary_op"]
  254 -> 170 [style=dashed label="rel_op"]
  254 -> 171 [style=dashed label="add_op"]
  254 -> 172 [style=dashed label="mul_op"]
  254 -> 291 [style=dashed label="Block"]
  254 -> "254R25d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "254R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  254 -> "254R25" [style=solid]
 "254R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  254 -> "254R156" [label="[';']", style=solid]
 "254R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  255 [label="State 255\n\l163 IfStmt: IF SimpleStmt . ';' Expression Block\l164       | IF SimpleStmt . ';' Expression Block ELSE Block\l165       | IF SimpleStmt . ';' Expression Block ELSE IfStmt\l"]
  255 -> 292 [style=solid label="';'"]
  256 [label="State 256\n\l188 ContinueStmt: CONTINUE Label .\l"]
  256 -> "256R188" [style=solid]
 "256R188" [label="R188", fillcolor=3, shape=diamond, style=filled]
  257 [label="State 257\n\l181 RangeClause: RANGE . Expression\l"]
  257 -> 93 [style=solid label="FUNC"]
  257 -> 57 [style=solid label="STRUCT"]
  257 -> 94 [style=solid label="ID"]
  257 -> 95 [style=solid label="STRING_LIT"]
  257 -> 96 [style=solid label="BINARY_LIT"]
  257 -> 97 [style=solid label="HEX_LIT"]
  257 -> 98 [style=solid label="FLOAT_LIT"]
  257 -> 99 [style=solid label="DEC_LIT"]
  257 -> 100 [style=solid label="'+'"]
  257 -> 101 [style=solid label="'-'"]
  257 -> 102 [style=solid label="'*'"]
  257 -> 103 [style=solid label="'^'"]
  257 -> 104 [style=solid label="'&'"]
  257 -> 105 [style=solid label="'!'"]
  257 -> 106 [style=solid label="'['"]
  257 -> 107 [style=solid label="\"(\""]
  257 -> 63 [style=dashed label="PackageName"]
  257 -> 293 [style=dashed label="Expression"]
  257 -> 110 [style=dashed label="UnaryExpr"]
  257 -> 111 [style=dashed label="unary_op"]
  257 -> 112 [style=dashed label="PrimaryExpr"]
  257 -> 113 [style=dashed label="Operand"]
  257 -> 114 [style=dashed label="Literal"]
  257 -> 115 [style=dashed label="INT_LIT"]
  257 -> 116 [style=dashed label="BasicLit"]
  257 -> 117 [style=dashed label="OperandName"]
  257 -> 118 [style=dashed label="QualifiedIdent"]
  257 -> 119 [style=dashed label="CompositeLit"]
  257 -> 120 [style=dashed label="LiteralType"]
  257 -> 121 [style=dashed label="FunctionLit"]
  257 -> 122 [style=dashed label="TypeName"]
  257 -> 123 [style=dashed label="ArrayType"]
  257 -> 124 [style=dashed label="StructType"]
  258 [label="State 258\n\l159 Assignment: ExpressionList . assign_op ExpressionList\l182 RangeClause: ExpressionList . '=' RANGE Expression\l"]
  258 -> 150 [style=solid label="'+'"]
  258 -> 151 [style=solid label="'-'"]
  258 -> 152 [style=solid label="'*'"]
  258 -> 153 [style=solid label="'/'"]
  258 -> 294 [style=solid label="'='"]
  258 -> 162 [style=solid label="'|'"]
  258 -> 163 [style=solid label="'^'"]
  258 -> 164 [style=solid label="'%'"]
  258 -> 165 [style=solid label="\"<<\""]
  258 -> 166 [style=solid label="\">>\""]
  258 -> 167 [style=solid label="'&'"]
  258 -> 269 [style=dashed label="add_op"]
  258 -> 270 [style=dashed label="mul_op"]
  258 -> 271 [style=dashed label="assign_op"]
  259 [label="State 259\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l156 ExpressionStmt: Expression .\l157 IncDecStmt: Expression . \"++\"\l158           | Expression . \"--\"\l171 Condition: Expression .\l"]
  259 -> 150 [style=solid label="'+'"]
  259 -> 151 [style=solid label="'-'"]
  259 -> 152 [style=solid label="'*'"]
  259 -> 153 [style=solid label="'/'"]
  259 -> 154 [style=solid label="\"||\""]
  259 -> 155 [style=solid label="\"&&\""]
  259 -> 156 [style=solid label="\"==\""]
  259 -> 157 [style=solid label="\"!=\""]
  259 -> 158 [style=solid label="'<'"]
  259 -> 159 [style=solid label="\"<=\""]
  259 -> 160 [style=solid label="'>'"]
  259 -> 161 [style=solid label="\">=\""]
  259 -> 162 [style=solid label="'|'"]
  259 -> 163 [style=solid label="'^'"]
  259 -> 164 [style=solid label="'%'"]
  259 -> 165 [style=solid label="\"<<\""]
  259 -> 166 [style=solid label="\">>\""]
  259 -> 167 [style=solid label="'&'"]
  259 -> 272 [style=solid label="\"++\""]
  259 -> 273 [style=solid label="\"--\""]
  259 -> 168 [style=dashed label="STAR_CM_EXP"]
  259 -> 169 [style=dashed label="binary_op"]
  259 -> 170 [style=dashed label="rel_op"]
  259 -> 171 [style=dashed label="add_op"]
  259 -> 172 [style=dashed label="mul_op"]
  259 -> "259R25d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "259R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  259 -> "259R25" [style=solid]
 "259R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  259 -> "259R156" [label="[';']", style=solid]
 "259R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  259 -> "259R171" [label="['{']", style=solid]
 "259R171" [label="R171", fillcolor=3, shape=diamond, style=filled]
  260 [label="State 260\n\l166 ForStmt: FOR Block .\l"]
  260 -> "260R166" [style=solid]
 "260R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  261 [label="State 261\n\l179 InitStmt: SimpleStmt .\l"]
  261 -> "261R179" [style=solid]
 "261R179" [label="R179", fillcolor=3, shape=diamond, style=filled]
  262 [label="State 262\n\l167 ForStmt: FOR ForStmtAfter . Block\l"]
  262 -> 81 [style=solid label="'{'"]
  262 -> 295 [style=dashed label="Block"]
  263 [label="State 263\n\l168 ForStmtAfter: Condition .\l"]
  263 -> "263R168" [style=solid]
 "263R168" [label="R168", fillcolor=3, shape=diamond, style=filled]
  264 [label="State 264\n\l169 ForStmtAfter: ForClause .\l"]
  264 -> "264R169" [style=solid]
 "264R169" [label="R169", fillcolor=3, shape=diamond, style=filled]
  265 [label="State 265\n\l172 ForClause: OPT_InitStmt . ';' OPT_Condition ';' OPT_PostStmt\l"]
  265 -> 296 [style=solid label="';'"]
  266 [label="State 266\n\l173 OPT_InitStmt: InitStmt .\l"]
  266 -> "266R173" [style=solid]
 "266R173" [label="R173", fillcolor=3, shape=diamond, style=filled]
  267 [label="State 267\n\l170 ForStmtAfter: RangeClause .\l"]
  267 -> "267R170" [style=solid]
 "267R170" [label="R170", fillcolor=3, shape=diamond, style=filled]
  268 [label="State 268\n\l 52 Expression: Expression . binary_op Expression\l183 GoStmt: GO Expression .\l"]
  268 -> 150 [style=solid label="'+'"]
  268 -> 151 [style=solid label="'-'"]
  268 -> 152 [style=solid label="'*'"]
  268 -> 153 [style=solid label="'/'"]
  268 -> 154 [style=solid label="\"||\""]
  268 -> 155 [style=solid label="\"&&\""]
  268 -> 156 [style=solid label="\"==\""]
  268 -> 157 [style=solid label="\"!=\""]
  268 -> 158 [style=solid label="'<'"]
  268 -> 159 [style=solid label="\"<=\""]
  268 -> 160 [style=solid label="'>'"]
  268 -> 161 [style=solid label="\">=\""]
  268 -> 162 [style=solid label="'|'"]
  268 -> 163 [style=solid label="'^'"]
  268 -> 164 [style=solid label="'%'"]
  268 -> 165 [style=solid label="\"<<\""]
  268 -> 166 [style=solid label="\">>\""]
  268 -> 167 [style=solid label="'&'"]
  268 -> 169 [style=dashed label="binary_op"]
  268 -> 170 [style=dashed label="rel_op"]
  268 -> 171 [style=dashed label="add_op"]
  268 -> 172 [style=dashed label="mul_op"]
  268 -> "268R183" [style=solid]
 "268R183" [label="R183", fillcolor=3, shape=diamond, style=filled]
  269 [label="State 269\n\l160 assign_op: add_op . '='\l"]
  269 -> 297 [style=solid label="'='"]
  270 [label="State 270\n\l161 assign_op: mul_op . '='\l"]
  270 -> 298 [style=solid label="'='"]
  271 [label="State 271\n\l159 Assignment: ExpressionList assign_op . ExpressionList\l"]
  271 -> 93 [style=solid label="FUNC"]
  271 -> 57 [style=solid label="STRUCT"]
  271 -> 94 [style=solid label="ID"]
  271 -> 95 [style=solid label="STRING_LIT"]
  271 -> 96 [style=solid label="BINARY_LIT"]
  271 -> 97 [style=solid label="HEX_LIT"]
  271 -> 98 [style=solid label="FLOAT_LIT"]
  271 -> 99 [style=solid label="DEC_LIT"]
  271 -> 100 [style=solid label="'+'"]
  271 -> 101 [style=solid label="'-'"]
  271 -> 102 [style=solid label="'*'"]
  271 -> 103 [style=solid label="'^'"]
  271 -> 104 [style=solid label="'&'"]
  271 -> 105 [style=solid label="'!'"]
  271 -> 106 [style=solid label="'['"]
  271 -> 107 [style=solid label="\"(\""]
  271 -> 63 [style=dashed label="PackageName"]
  271 -> 299 [style=dashed label="ExpressionList"]
  271 -> 109 [style=dashed label="Expression"]
  271 -> 110 [style=dashed label="UnaryExpr"]
  271 -> 111 [style=dashed label="unary_op"]
  271 -> 112 [style=dashed label="PrimaryExpr"]
  271 -> 113 [style=dashed label="Operand"]
  271 -> 114 [style=dashed label="Literal"]
  271 -> 115 [style=dashed label="INT_LIT"]
  271 -> 116 [style=dashed label="BasicLit"]
  271 -> 117 [style=dashed label="OperandName"]
  271 -> 118 [style=dashed label="QualifiedIdent"]
  271 -> 119 [style=dashed label="CompositeLit"]
  271 -> 120 [style=dashed label="LiteralType"]
  271 -> 121 [style=dashed label="FunctionLit"]
  271 -> 122 [style=dashed label="TypeName"]
  271 -> 123 [style=dashed label="ArrayType"]
  271 -> 124 [style=dashed label="StructType"]
  272 [label="State 272\n\l157 IncDecStmt: Expression \"++\" .\l"]
  272 -> "272R157" [style=solid]
 "272R157" [label="R157", fillcolor=3, shape=diamond, style=filled]
  273 [label="State 273\n\l158 IncDecStmt: Expression \"--\" .\l"]
  273 -> "273R158" [style=solid]
 "273R158" [label="R158", fillcolor=3, shape=diamond, style=filled]
  274 [label="State 274\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement ';' .\l"]
  274 -> "274R28" [style=solid]
 "274R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  275 [label="State 275\n\l149 LabeledStmt: Label ':' . Statement\l"]
  275 -> 189 [style=solid label="BREAK"]
  275 -> 93 [style=solid label="FUNC"]
  275 -> 57 [style=solid label="STRUCT"]
  275 -> 190 [style=solid label="RETURN"]
  275 -> 191 [style=solid label="GOTO"]
  275 -> 20 [style=solid label="CONST"]
  275 -> 192 [style=solid label="IF"]
  275 -> 193 [style=solid label="CONTINUE"]
  275 -> 194 [style=solid label="FOR"]
  275 -> 195 [style=solid label="ID"]
  275 -> 21 [style=solid label="VAR"]
  275 -> 95 [style=solid label="STRING_LIT"]
  275 -> 96 [style=solid label="BINARY_LIT"]
  275 -> 97 [style=solid label="HEX_LIT"]
  275 -> 98 [style=solid label="FLOAT_LIT"]
  275 -> 99 [style=solid label="DEC_LIT"]
  275 -> 196 [style=solid label="GO"]
  275 -> 197 [style=solid label="FALLTHROUGH"]
  275 -> 22 [style=solid label="TYPE_TOK"]
  275 -> 100 [style=solid label="'+'"]
  275 -> 101 [style=solid label="'-'"]
  275 -> 102 [style=solid label="'*'"]
  275 -> 103 [style=solid label="'^'"]
  275 -> 104 [style=solid label="'&'"]
  275 -> 105 [style=solid label="'!'"]
  275 -> 106 [style=solid label="'['"]
  275 -> 107 [style=solid label="\"(\""]
  275 -> 81 [style=solid label="'{'"]
  275 -> 63 [style=dashed label="PackageName"]
  275 -> 199 [style=dashed label="Declaration"]
  275 -> 25 [style=dashed label="ConstDecl"]
  275 -> 26 [style=dashed label="TypeDecl"]
  275 -> 27 [style=dashed label="VarDecl"]
  275 -> 200 [style=dashed label="ExpressionList"]
  275 -> 201 [style=dashed label="Expression"]
  275 -> 110 [style=dashed label="UnaryExpr"]
  275 -> 111 [style=dashed label="unary_op"]
  275 -> 112 [style=dashed label="PrimaryExpr"]
  275 -> 113 [style=dashed label="Operand"]
  275 -> 114 [style=dashed label="Literal"]
  275 -> 115 [style=dashed label="INT_LIT"]
  275 -> 116 [style=dashed label="BasicLit"]
  275 -> 117 [style=dashed label="OperandName"]
  275 -> 118 [style=dashed label="QualifiedIdent"]
  275 -> 119 [style=dashed label="CompositeLit"]
  275 -> 120 [style=dashed label="LiteralType"]
  275 -> 121 [style=dashed label="FunctionLit"]
  275 -> 202 [style=dashed label="Block"]
  275 -> 300 [style=dashed label="Statement"]
  275 -> 204 [style=dashed label="LabeledStmt"]
  275 -> 205 [style=dashed label="Label"]
  275 -> 206 [style=dashed label="SimpleStmt"]
  275 -> 207 [style=dashed label="EmptyStmt"]
  275 -> 208 [style=dashed label="ExpressionStmt"]
  275 -> 209 [style=dashed label="IncDecStmt"]
  275 -> 210 [style=dashed label="Assignment"]
  275 -> 211 [style=dashed label="IfStmt"]
  275 -> 212 [style=dashed label="ForStmt"]
  275 -> 213 [style=dashed label="GoStmt"]
  275 -> 214 [style=dashed label="ReturnStmt"]
  275 -> 215 [style=dashed label="BreakStmt"]
  275 -> 216 [style=dashed label="ContinueStmt"]
  275 -> 217 [style=dashed label="GotoStmt"]
  275 -> 218 [style=dashed label="FallthroughStmt"]
  275 -> 122 [style=dashed label="TypeName"]
  275 -> 123 [style=dashed label="ArrayType"]
  275 -> 124 [style=dashed label="StructType"]
  275 -> "275R155" [style=solid]
 "275R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  276 [label="State 276\n\l116 LiteralType: '[' ELIPSIS ']' ElementType .\l"]
  276 -> "276R116" [style=solid]
 "276R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  277 [label="State 277\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' Expression .\l 52 Expression: Expression . binary_op Expression\l"]
  277 -> 150 [style=solid label="'+'"]
  277 -> 151 [style=solid label="'-'"]
  277 -> 152 [style=solid label="'*'"]
  277 -> 153 [style=solid label="'/'"]
  277 -> 154 [style=solid label="\"||\""]
  277 -> 155 [style=solid label="\"&&\""]
  277 -> 156 [style=solid label="\"==\""]
  277 -> 157 [style=solid label="\"!=\""]
  277 -> 158 [style=solid label="'<'"]
  277 -> 159 [style=solid label="\"<=\""]
  277 -> 160 [style=solid label="'>'"]
  277 -> 161 [style=solid label="\">=\""]
  277 -> 162 [style=solid label="'|'"]
  277 -> 163 [style=solid label="'^'"]
  277 -> 164 [style=solid label="'%'"]
  277 -> 165 [style=solid label="\"<<\""]
  277 -> 166 [style=solid label="\">>\""]
  277 -> 167 [style=solid label="'&'"]
  277 -> 169 [style=dashed label="binary_op"]
  277 -> 170 [style=dashed label="rel_op"]
  277 -> 171 [style=dashed label="add_op"]
  277 -> 172 [style=dashed label="mul_op"]
  277 -> "277R24d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "277R24d" [label="R24", fillcolor=5, shape=diamond, style=filled]
  277 -> "277R24" [style=solid]
 "277R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  278 [label="State 278\n\l131 FunctionLit: FUNC Signature . FunctionBody\l210 FunctionType: FUNC Signature .\l"]
  278 -> 81 [style=solid label="'{'"]
  278 -> 219 [style=dashed label="FunctionBody"]
  278 -> 83 [style=dashed label="Block"]
  278 -> "278R210" [style=solid]
 "278R210" [label="R210", fillcolor=3, shape=diamond, style=filled]
  279 [label="State 279\n\l 89 Arguments: '(' ArgumentInBracket ')' .\l"]
  279 -> "279R89" [style=solid]
 "279R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  280 [label="State 280\n\l 94 ArgumentInBracketEnd: ELIPSIS . ','\l 95                     | ELIPSIS .\l"]
  280 -> 301 [style=solid label="','"]
  280 -> "280R95" [style=solid]
 "280R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  281 [label="State 281\n\l 96 ArgumentInBracketEnd: ',' .\l"]
  281 -> "281R96" [style=solid]
 "281R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  282 [label="State 282\n\l 90 ArgumentInBracket: ArgumentInBracketFirst ArgumentInBracketEnd .\l"]
  282 -> "282R90" [style=solid]
 "282R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  283 [label="State 283\n\l 93 ArgumentInBracketFirst: Type ',' . ExpressionList\l"]
  283 -> 93 [style=solid label="FUNC"]
  283 -> 57 [style=solid label="STRUCT"]
  283 -> 94 [style=solid label="ID"]
  283 -> 95 [style=solid label="STRING_LIT"]
  283 -> 96 [style=solid label="BINARY_LIT"]
  283 -> 97 [style=solid label="HEX_LIT"]
  283 -> 98 [style=solid label="FLOAT_LIT"]
  283 -> 99 [style=solid label="DEC_LIT"]
  283 -> 100 [style=solid label="'+'"]
  283 -> 101 [style=solid label="'-'"]
  283 -> 102 [style=solid label="'*'"]
  283 -> 103 [style=solid label="'^'"]
  283 -> 104 [style=solid label="'&'"]
  283 -> 105 [style=solid label="'!'"]
  283 -> 106 [style=solid label="'['"]
  283 -> 107 [style=solid label="\"(\""]
  283 -> 63 [style=dashed label="PackageName"]
  283 -> 302 [style=dashed label="ExpressionList"]
  283 -> 109 [style=dashed label="Expression"]
  283 -> 110 [style=dashed label="UnaryExpr"]
  283 -> 111 [style=dashed label="unary_op"]
  283 -> 112 [style=dashed label="PrimaryExpr"]
  283 -> 113 [style=dashed label="Operand"]
  283 -> 114 [style=dashed label="Literal"]
  283 -> 115 [style=dashed label="INT_LIT"]
  283 -> 116 [style=dashed label="BasicLit"]
  283 -> 117 [style=dashed label="OperandName"]
  283 -> 118 [style=dashed label="QualifiedIdent"]
  283 -> 119 [style=dashed label="CompositeLit"]
  283 -> 120 [style=dashed label="LiteralType"]
  283 -> 121 [style=dashed label="FunctionLit"]
  283 -> 122 [style=dashed label="TypeName"]
  283 -> 123 [style=dashed label="ArrayType"]
  283 -> 124 [style=dashed label="StructType"]
  284 [label="State 284\n\l 87 Index: '[' Expression ']' .\l"]
  284 -> "284R87" [style=solid]
 "284R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  285 [label="State 285\n\l120 LiteralValue: '{' ElementList ',' . '}'\l"]
  285 -> 303 [style=solid label="'}'"]
  286 [label="State 286\n\l119 LiteralValue: '{' ElementList '}' .\l"]
  286 -> "286R119" [style=solid]
 "286R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  287 [label="State 287\n\l121 ElementList: KeyedElement STAR_CM_KeyedElement .\l122 STAR_CM_KeyedElement: STAR_CM_KeyedElement . ',' KeyedElement\l"]
  287 -> 304 [style=solid label="','"]
  287 -> "287R121d" [label="[',']", style=solid]
 "287R121d" [label="R121", fillcolor=5, shape=diamond, style=filled]
  287 -> "287R121" [style=solid]
 "287R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  288 [label="State 288\n\l124 KeyedElement: Key ':' . Element\l"]
  288 -> 93 [style=solid label="FUNC"]
  288 -> 57 [style=solid label="STRUCT"]
  288 -> 94 [style=solid label="ID"]
  288 -> 95 [style=solid label="STRING_LIT"]
  288 -> 96 [style=solid label="BINARY_LIT"]
  288 -> 97 [style=solid label="HEX_LIT"]
  288 -> 98 [style=solid label="FLOAT_LIT"]
  288 -> 99 [style=solid label="DEC_LIT"]
  288 -> 100 [style=solid label="'+'"]
  288 -> 101 [style=solid label="'-'"]
  288 -> 102 [style=solid label="'*'"]
  288 -> 103 [style=solid label="'^'"]
  288 -> 104 [style=solid label="'&'"]
  288 -> 105 [style=solid label="'!'"]
  288 -> 106 [style=solid label="'['"]
  288 -> 107 [style=solid label="\"(\""]
  288 -> 180 [style=solid label="'{'"]
  288 -> 63 [style=dashed label="PackageName"]
  288 -> 305 [style=dashed label="Expression"]
  288 -> 110 [style=dashed label="UnaryExpr"]
  288 -> 111 [style=dashed label="unary_op"]
  288 -> 112 [style=dashed label="PrimaryExpr"]
  288 -> 113 [style=dashed label="Operand"]
  288 -> 114 [style=dashed label="Literal"]
  288 -> 115 [style=dashed label="INT_LIT"]
  288 -> 116 [style=dashed label="BasicLit"]
  288 -> 117 [style=dashed label="OperandName"]
  288 -> 118 [style=dashed label="QualifiedIdent"]
  288 -> 119 [style=dashed label="CompositeLit"]
  288 -> 120 [style=dashed label="LiteralType"]
  288 -> 306 [style=dashed label="LiteralValue"]
  288 -> 307 [style=dashed label="Element"]
  288 -> 121 [style=dashed label="FunctionLit"]
  288 -> 122 [style=dashed label="TypeName"]
  288 -> 123 [style=dashed label="ArrayType"]
  288 -> 124 [style=dashed label="StructType"]
  289 [label="State 289\n\l205 FieldDecl: IdentifierList Type . Tag\l206          | IdentifierList Type .\l"]
  289 -> 308 [style=solid label="STRING_LIT"]
  289 -> 309 [style=dashed label="Tag"]
  289 -> "289R206" [style=solid]
 "289R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  290 [label="State 290\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl ';' .\l"]
  290 -> "290R32" [style=solid]
 "290R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  291 [label="State 291\n\l162 IfStmt: IF Expression Block .\l"]
  291 -> "291R162" [style=solid]
 "291R162" [label="R162", fillcolor=3, shape=diamond, style=filled]
  292 [label="State 292\n\l163 IfStmt: IF SimpleStmt ';' . Expression Block\l164       | IF SimpleStmt ';' . Expression Block ELSE Block\l165       | IF SimpleStmt ';' . Expression Block ELSE IfStmt\l"]
  292 -> 93 [style=solid label="FUNC"]
  292 -> 57 [style=solid label="STRUCT"]
  292 -> 94 [style=solid label="ID"]
  292 -> 95 [style=solid label="STRING_LIT"]
  292 -> 96 [style=solid label="BINARY_LIT"]
  292 -> 97 [style=solid label="HEX_LIT"]
  292 -> 98 [style=solid label="FLOAT_LIT"]
  292 -> 99 [style=solid label="DEC_LIT"]
  292 -> 100 [style=solid label="'+'"]
  292 -> 101 [style=solid label="'-'"]
  292 -> 102 [style=solid label="'*'"]
  292 -> 103 [style=solid label="'^'"]
  292 -> 104 [style=solid label="'&'"]
  292 -> 105 [style=solid label="'!'"]
  292 -> 106 [style=solid label="'['"]
  292 -> 107 [style=solid label="\"(\""]
  292 -> 63 [style=dashed label="PackageName"]
  292 -> 310 [style=dashed label="Expression"]
  292 -> 110 [style=dashed label="UnaryExpr"]
  292 -> 111 [style=dashed label="unary_op"]
  292 -> 112 [style=dashed label="PrimaryExpr"]
  292 -> 113 [style=dashed label="Operand"]
  292 -> 114 [style=dashed label="Literal"]
  292 -> 115 [style=dashed label="INT_LIT"]
  292 -> 116 [style=dashed label="BasicLit"]
  292 -> 117 [style=dashed label="OperandName"]
  292 -> 118 [style=dashed label="QualifiedIdent"]
  292 -> 119 [style=dashed label="CompositeLit"]
  292 -> 120 [style=dashed label="LiteralType"]
  292 -> 121 [style=dashed label="FunctionLit"]
  292 -> 122 [style=dashed label="TypeName"]
  292 -> 123 [style=dashed label="ArrayType"]
  292 -> 124 [style=dashed label="StructType"]
  293 [label="State 293\n\l 52 Expression: Expression . binary_op Expression\l181 RangeClause: RANGE Expression .\l"]
  293 -> 150 [style=solid label="'+'"]
  293 -> 151 [style=solid label="'-'"]
  293 -> 152 [style=solid label="'*'"]
  293 -> 153 [style=solid label="'/'"]
  293 -> 154 [style=solid label="\"||\""]
  293 -> 155 [style=solid label="\"&&\""]
  293 -> 156 [style=solid label="\"==\""]
  293 -> 157 [style=solid label="\"!=\""]
  293 -> 158 [style=solid label="'<'"]
  293 -> 159 [style=solid label="\"<=\""]
  293 -> 160 [style=solid label="'>'"]
  293 -> 161 [style=solid label="\">=\""]
  293 -> 162 [style=solid label="'|'"]
  293 -> 163 [style=solid label="'^'"]
  293 -> 164 [style=solid label="'%'"]
  293 -> 165 [style=solid label="\"<<\""]
  293 -> 166 [style=solid label="\">>\""]
  293 -> 167 [style=solid label="'&'"]
  293 -> 169 [style=dashed label="binary_op"]
  293 -> 170 [style=dashed label="rel_op"]
  293 -> 171 [style=dashed label="add_op"]
  293 -> 172 [style=dashed label="mul_op"]
  293 -> "293R181" [style=solid]
 "293R181" [label="R181", fillcolor=3, shape=diamond, style=filled]
  294 [label="State 294\n\l182 RangeClause: ExpressionList '=' . RANGE Expression\l"]
  294 -> 311 [style=solid label="RANGE"]
  295 [label="State 295\n\l167 ForStmt: FOR ForStmtAfter Block .\l"]
  295 -> "295R167" [style=solid]
 "295R167" [label="R167", fillcolor=3, shape=diamond, style=filled]
  296 [label="State 296\n\l172 ForClause: OPT_InitStmt ';' . OPT_Condition ';' OPT_PostStmt\l"]
  296 -> 93 [style=solid label="FUNC"]
  296 -> 57 [style=solid label="STRUCT"]
  296 -> 94 [style=solid label="ID"]
  296 -> 95 [style=solid label="STRING_LIT"]
  296 -> 96 [style=solid label="BINARY_LIT"]
  296 -> 97 [style=solid label="HEX_LIT"]
  296 -> 98 [style=solid label="FLOAT_LIT"]
  296 -> 99 [style=solid label="DEC_LIT"]
  296 -> 100 [style=solid label="'+'"]
  296 -> 101 [style=solid label="'-'"]
  296 -> 102 [style=solid label="'*'"]
  296 -> 103 [style=solid label="'^'"]
  296 -> 104 [style=solid label="'&'"]
  296 -> 105 [style=solid label="'!'"]
  296 -> 106 [style=solid label="'['"]
  296 -> 107 [style=solid label="\"(\""]
  296 -> 63 [style=dashed label="PackageName"]
  296 -> 312 [style=dashed label="Expression"]
  296 -> 110 [style=dashed label="UnaryExpr"]
  296 -> 111 [style=dashed label="unary_op"]
  296 -> 112 [style=dashed label="PrimaryExpr"]
  296 -> 113 [style=dashed label="Operand"]
  296 -> 114 [style=dashed label="Literal"]
  296 -> 115 [style=dashed label="INT_LIT"]
  296 -> 116 [style=dashed label="BasicLit"]
  296 -> 117 [style=dashed label="OperandName"]
  296 -> 118 [style=dashed label="QualifiedIdent"]
  296 -> 119 [style=dashed label="CompositeLit"]
  296 -> 120 [style=dashed label="LiteralType"]
  296 -> 121 [style=dashed label="FunctionLit"]
  296 -> 313 [style=dashed label="Condition"]
  296 -> 314 [style=dashed label="OPT_Condition"]
  296 -> 122 [style=dashed label="TypeName"]
  296 -> 123 [style=dashed label="ArrayType"]
  296 -> 124 [style=dashed label="StructType"]
  296 -> "296R176" [style=solid]
 "296R176" [label="R176", fillcolor=3, shape=diamond, style=filled]
  297 [label="State 297\n\l160 assign_op: add_op '=' .\l"]
  297 -> "297R160" [style=solid]
 "297R160" [label="R160", fillcolor=3, shape=diamond, style=filled]
  298 [label="State 298\n\l161 assign_op: mul_op '=' .\l"]
  298 -> "298R161" [style=solid]
 "298R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  299 [label="State 299\n\l159 Assignment: ExpressionList assign_op ExpressionList .\l"]
  299 -> "299R159" [style=solid]
 "299R159" [label="R159", fillcolor=3, shape=diamond, style=filled]
  300 [label="State 300\n\l149 LabeledStmt: Label ':' Statement .\l"]
  300 -> "300R149" [style=solid]
 "300R149" [label="R149", fillcolor=3, shape=diamond, style=filled]
  301 [label="State 301\n\l 94 ArgumentInBracketEnd: ELIPSIS ',' .\l"]
  301 -> "301R94" [style=solid]
 "301R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  302 [label="State 302\n\l 93 ArgumentInBracketFirst: Type ',' ExpressionList .\l"]
  302 -> "302R93" [style=solid]
 "302R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  303 [label="State 303\n\l120 LiteralValue: '{' ElementList ',' '}' .\l"]
  303 -> "303R120" [style=solid]
 "303R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  304 [label="State 304\n\l122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' . KeyedElement\l"]
  304 -> 93 [style=solid label="FUNC"]
  304 -> 57 [style=solid label="STRUCT"]
  304 -> 236 [style=solid label="ID"]
  304 -> 95 [style=solid label="STRING_LIT"]
  304 -> 96 [style=solid label="BINARY_LIT"]
  304 -> 97 [style=solid label="HEX_LIT"]
  304 -> 98 [style=solid label="FLOAT_LIT"]
  304 -> 99 [style=solid label="DEC_LIT"]
  304 -> 100 [style=solid label="'+'"]
  304 -> 101 [style=solid label="'-'"]
  304 -> 102 [style=solid label="'*'"]
  304 -> 103 [style=solid label="'^'"]
  304 -> 104 [style=solid label="'&'"]
  304 -> 105 [style=solid label="'!'"]
  304 -> 106 [style=solid label="'['"]
  304 -> 107 [style=solid label="\"(\""]
  304 -> 180 [style=solid label="'{'"]
  304 -> 63 [style=dashed label="PackageName"]
  304 -> 238 [style=dashed label="Expression"]
  304 -> 110 [style=dashed label="UnaryExpr"]
  304 -> 111 [style=dashed label="unary_op"]
  304 -> 112 [style=dashed label="PrimaryExpr"]
  304 -> 113 [style=dashed label="Operand"]
  304 -> 114 [style=dashed label="Literal"]
  304 -> 115 [style=dashed label="INT_LIT"]
  304 -> 116 [style=dashed label="BasicLit"]
  304 -> 117 [style=dashed label="OperandName"]
  304 -> 118 [style=dashed label="QualifiedIdent"]
  304 -> 119 [style=dashed label="CompositeLit"]
  304 -> 120 [style=dashed label="LiteralType"]
  304 -> 239 [style=dashed label="LiteralValue"]
  304 -> 315 [style=dashed label="KeyedElement"]
  304 -> 242 [style=dashed label="Key"]
  304 -> 243 [style=dashed label="Element"]
  304 -> 121 [style=dashed label="FunctionLit"]
  304 -> 122 [style=dashed label="TypeName"]
  304 -> 123 [style=dashed label="ArrayType"]
  304 -> 124 [style=dashed label="StructType"]
  305 [label="State 305\n\l 52 Expression: Expression . binary_op Expression\l129 Element: Expression .\l"]
  305 -> 150 [style=solid label="'+'"]
  305 -> 151 [style=solid label="'-'"]
  305 -> 152 [style=solid label="'*'"]
  305 -> 153 [style=solid label="'/'"]
  305 -> 154 [style=solid label="\"||\""]
  305 -> 155 [style=solid label="\"&&\""]
  305 -> 156 [style=solid label="\"==\""]
  305 -> 157 [style=solid label="\"!=\""]
  305 -> 158 [style=solid label="'<'"]
  305 -> 159 [style=solid label="\"<=\""]
  305 -> 160 [style=solid label="'>'"]
  305 -> 161 [style=solid label="\">=\""]
  305 -> 162 [style=solid label="'|'"]
  305 -> 163 [style=solid label="'^'"]
  305 -> 164 [style=solid label="'%'"]
  305 -> 165 [style=solid label="\"<<\""]
  305 -> 166 [style=solid label="\">>\""]
  305 -> 167 [style=solid label="'&'"]
  305 -> 169 [style=dashed label="binary_op"]
  305 -> 170 [style=dashed label="rel_op"]
  305 -> 171 [style=dashed label="add_op"]
  305 -> 172 [style=dashed label="mul_op"]
  305 -> "305R129" [style=solid]
 "305R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  306 [label="State 306\n\l130 Element: LiteralValue .\l"]
  306 -> "306R130" [style=solid]
 "306R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  307 [label="State 307\n\l124 KeyedElement: Key ':' Element .\l"]
  307 -> "307R124" [style=solid]
 "307R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  308 [label="State 308\n\l207 Tag: STRING_LIT .\l"]
  308 -> "308R207" [style=solid]
 "308R207" [label="R207", fillcolor=3, shape=diamond, style=filled]
  309 [label="State 309\n\l205 FieldDecl: IdentifierList Type Tag .\l"]
  309 -> "309R205" [style=solid]
 "309R205" [label="R205", fillcolor=3, shape=diamond, style=filled]
  310 [label="State 310\n\l 52 Expression: Expression . binary_op Expression\l163 IfStmt: IF SimpleStmt ';' Expression . Block\l164       | IF SimpleStmt ';' Expression . Block ELSE Block\l165       | IF SimpleStmt ';' Expression . Block ELSE IfStmt\l"]
  310 -> 150 [style=solid label="'+'"]
  310 -> 151 [style=solid label="'-'"]
  310 -> 152 [style=solid label="'*'"]
  310 -> 153 [style=solid label="'/'"]
  310 -> 154 [style=solid label="\"||\""]
  310 -> 155 [style=solid label="\"&&\""]
  310 -> 156 [style=solid label="\"==\""]
  310 -> 157 [style=solid label="\"!=\""]
  310 -> 158 [style=solid label="'<'"]
  310 -> 159 [style=solid label="\"<=\""]
  310 -> 160 [style=solid label="'>'"]
  310 -> 161 [style=solid label="\">=\""]
  310 -> 162 [style=solid label="'|'"]
  310 -> 163 [style=solid label="'^'"]
  310 -> 164 [style=solid label="'%'"]
  310 -> 165 [style=solid label="\"<<\""]
  310 -> 166 [style=solid label="\">>\""]
  310 -> 167 [style=solid label="'&'"]
  310 -> 81 [style=solid label="'{'"]
  310 -> 169 [style=dashed label="binary_op"]
  310 -> 170 [style=dashed label="rel_op"]
  310 -> 171 [style=dashed label="add_op"]
  310 -> 172 [style=dashed label="mul_op"]
  310 -> 316 [style=dashed label="Block"]
  311 [label="State 311\n\l182 RangeClause: ExpressionList '=' RANGE . Expression\l"]
  311 -> 93 [style=solid label="FUNC"]
  311 -> 57 [style=solid label="STRUCT"]
  311 -> 94 [style=solid label="ID"]
  311 -> 95 [style=solid label="STRING_LIT"]
  311 -> 96 [style=solid label="BINARY_LIT"]
  311 -> 97 [style=solid label="HEX_LIT"]
  311 -> 98 [style=solid label="FLOAT_LIT"]
  311 -> 99 [style=solid label="DEC_LIT"]
  311 -> 100 [style=solid label="'+'"]
  311 -> 101 [style=solid label="'-'"]
  311 -> 102 [style=solid label="'*'"]
  311 -> 103 [style=solid label="'^'"]
  311 -> 104 [style=solid label="'&'"]
  311 -> 105 [style=solid label="'!'"]
  311 -> 106 [style=solid label="'['"]
  311 -> 107 [style=solid label="\"(\""]
  311 -> 63 [style=dashed label="PackageName"]
  311 -> 317 [style=dashed label="Expression"]
  311 -> 110 [style=dashed label="UnaryExpr"]
  311 -> 111 [style=dashed label="unary_op"]
  311 -> 112 [style=dashed label="PrimaryExpr"]
  311 -> 113 [style=dashed label="Operand"]
  311 -> 114 [style=dashed label="Literal"]
  311 -> 115 [style=dashed label="INT_LIT"]
  311 -> 116 [style=dashed label="BasicLit"]
  311 -> 117 [style=dashed label="OperandName"]
  311 -> 118 [style=dashed label="QualifiedIdent"]
  311 -> 119 [style=dashed label="CompositeLit"]
  311 -> 120 [style=dashed label="LiteralType"]
  311 -> 121 [style=dashed label="FunctionLit"]
  311 -> 122 [style=dashed label="TypeName"]
  311 -> 123 [style=dashed label="ArrayType"]
  311 -> 124 [style=dashed label="StructType"]
  312 [label="State 312\n\l 52 Expression: Expression . binary_op Expression\l171 Condition: Expression .\l"]
  312 -> 150 [style=solid label="'+'"]
  312 -> 151 [style=solid label="'-'"]
  312 -> 152 [style=solid label="'*'"]
  312 -> 153 [style=solid label="'/'"]
  312 -> 154 [style=solid label="\"||\""]
  312 -> 155 [style=solid label="\"&&\""]
  312 -> 156 [style=solid label="\"==\""]
  312 -> 157 [style=solid label="\"!=\""]
  312 -> 158 [style=solid label="'<'"]
  312 -> 159 [style=solid label="\"<=\""]
  312 -> 160 [style=solid label="'>'"]
  312 -> 161 [style=solid label="\">=\""]
  312 -> 162 [style=solid label="'|'"]
  312 -> 163 [style=solid label="'^'"]
  312 -> 164 [style=solid label="'%'"]
  312 -> 165 [style=solid label="\"<<\""]
  312 -> 166 [style=solid label="\">>\""]
  312 -> 167 [style=solid label="'&'"]
  312 -> 169 [style=dashed label="binary_op"]
  312 -> 170 [style=dashed label="rel_op"]
  312 -> 171 [style=dashed label="add_op"]
  312 -> 172 [style=dashed label="mul_op"]
  312 -> "312R171" [style=solid]
 "312R171" [label="R171", fillcolor=3, shape=diamond, style=filled]
  313 [label="State 313\n\l175 OPT_Condition: Condition .\l"]
  313 -> "313R175" [style=solid]
 "313R175" [label="R175", fillcolor=3, shape=diamond, style=filled]
  314 [label="State 314\n\l172 ForClause: OPT_InitStmt ';' OPT_Condition . ';' OPT_PostStmt\l"]
  314 -> 318 [style=solid label="';'"]
  315 [label="State 315\n\l122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' KeyedElement .\l"]
  315 -> "315R122" [style=solid]
 "315R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  316 [label="State 316\n\l163 IfStmt: IF SimpleStmt ';' Expression Block .\l164       | IF SimpleStmt ';' Expression Block . ELSE Block\l165       | IF SimpleStmt ';' Expression Block . ELSE IfStmt\l"]
  316 -> 319 [style=solid label="ELSE"]
  316 -> "316R163" [style=solid]
 "316R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  317 [label="State 317\n\l 52 Expression: Expression . binary_op Expression\l182 RangeClause: ExpressionList '=' RANGE Expression .\l"]
  317 -> 150 [style=solid label="'+'"]
  317 -> 151 [style=solid label="'-'"]
  317 -> 152 [style=solid label="'*'"]
  317 -> 153 [style=solid label="'/'"]
  317 -> 154 [style=solid label="\"||\""]
  317 -> 155 [style=solid label="\"&&\""]
  317 -> 156 [style=solid label="\"==\""]
  317 -> 157 [style=solid label="\"!=\""]
  317 -> 158 [style=solid label="'<'"]
  317 -> 159 [style=solid label="\"<=\""]
  317 -> 160 [style=solid label="'>'"]
  317 -> 161 [style=solid label="\">=\""]
  317 -> 162 [style=solid label="'|'"]
  317 -> 163 [style=solid label="'^'"]
  317 -> 164 [style=solid label="'%'"]
  317 -> 165 [style=solid label="\"<<\""]
  317 -> 166 [style=solid label="\">>\""]
  317 -> 167 [style=solid label="'&'"]
  317 -> 169 [style=dashed label="binary_op"]
  317 -> 170 [style=dashed label="rel_op"]
  317 -> 171 [style=dashed label="add_op"]
  317 -> 172 [style=dashed label="mul_op"]
  317 -> "317R182" [style=solid]
 "317R182" [label="R182", fillcolor=3, shape=diamond, style=filled]
  318 [label="State 318\n\l172 ForClause: OPT_InitStmt ';' OPT_Condition ';' . OPT_PostStmt\l"]
  318 -> 93 [style=solid label="FUNC"]
  318 -> 57 [style=solid label="STRUCT"]
  318 -> 94 [style=solid label="ID"]
  318 -> 95 [style=solid label="STRING_LIT"]
  318 -> 96 [style=solid label="BINARY_LIT"]
  318 -> 97 [style=solid label="HEX_LIT"]
  318 -> 98 [style=solid label="FLOAT_LIT"]
  318 -> 99 [style=solid label="DEC_LIT"]
  318 -> 100 [style=solid label="'+'"]
  318 -> 101 [style=solid label="'-'"]
  318 -> 102 [style=solid label="'*'"]
  318 -> 103 [style=solid label="'^'"]
  318 -> 104 [style=solid label="'&'"]
  318 -> 105 [style=solid label="'!'"]
  318 -> 106 [style=solid label="'['"]
  318 -> 107 [style=solid label="\"(\""]
  318 -> 63 [style=dashed label="PackageName"]
  318 -> 200 [style=dashed label="ExpressionList"]
  318 -> 201 [style=dashed label="Expression"]
  318 -> 110 [style=dashed label="UnaryExpr"]
  318 -> 111 [style=dashed label="unary_op"]
  318 -> 112 [style=dashed label="PrimaryExpr"]
  318 -> 113 [style=dashed label="Operand"]
  318 -> 114 [style=dashed label="Literal"]
  318 -> 115 [style=dashed label="INT_LIT"]
  318 -> 116 [style=dashed label="BasicLit"]
  318 -> 117 [style=dashed label="OperandName"]
  318 -> 118 [style=dashed label="QualifiedIdent"]
  318 -> 119 [style=dashed label="CompositeLit"]
  318 -> 120 [style=dashed label="LiteralType"]
  318 -> 121 [style=dashed label="FunctionLit"]
  318 -> 320 [style=dashed label="SimpleStmt"]
  318 -> 207 [style=dashed label="EmptyStmt"]
  318 -> 208 [style=dashed label="ExpressionStmt"]
  318 -> 209 [style=dashed label="IncDecStmt"]
  318 -> 210 [style=dashed label="Assignment"]
  318 -> 321 [style=dashed label="OPT_PostStmt"]
  318 -> 322 [style=dashed label="PostStmt"]
  318 -> 122 [style=dashed label="TypeName"]
  318 -> 123 [style=dashed label="ArrayType"]
  318 -> 124 [style=dashed label="StructType"]
  318 -> "318R155" [style=solid]
 "318R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  318 -> "318R178d" [label="['{']", style=solid]
 "318R178d" [label="R178", fillcolor=5, shape=diamond, style=filled]
  319 [label="State 319\n\l164 IfStmt: IF SimpleStmt ';' Expression Block ELSE . Block\l165       | IF SimpleStmt ';' Expression Block ELSE . IfStmt\l"]
  319 -> 192 [style=solid label="IF"]
  319 -> 81 [style=solid label="'{'"]
  319 -> 323 [style=dashed label="Block"]
  319 -> 324 [style=dashed label="IfStmt"]
  320 [label="State 320\n\l180 PostStmt: SimpleStmt .\l"]
  320 -> "320R180" [style=solid]
 "320R180" [label="R180", fillcolor=3, shape=diamond, style=filled]
  321 [label="State 321\n\l172 ForClause: OPT_InitStmt ';' OPT_Condition ';' OPT_PostStmt .\l"]
  321 -> "321R172" [style=solid]
 "321R172" [label="R172", fillcolor=3, shape=diamond, style=filled]
  322 [label="State 322\n\l177 OPT_PostStmt: PostStmt .\l"]
  322 -> "322R177" [style=solid]
 "322R177" [label="R177", fillcolor=3, shape=diamond, style=filled]
  323 [label="State 323\n\l164 IfStmt: IF SimpleStmt ';' Expression Block ELSE Block .\l"]
  323 -> "323R164" [style=solid]
 "323R164" [label="R164", fillcolor=3, shape=diamond, style=filled]
  324 [label="State 324\n\l165 IfStmt: IF SimpleStmt ';' Expression Block ELSE IfStmt .\l"]
  324 -> "324R165" [style=solid]
 "324R165" [label="R165", fillcolor=3, shape=diamond, style=filled]
}
