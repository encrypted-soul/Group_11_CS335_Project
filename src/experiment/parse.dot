// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parse.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . SourceFile $end\l"]
  0 -> 1 [style=solid label="PACKAGE"]
  0 -> 2 [style=dashed label="SourceFile"]
  0 -> 3 [style=dashed label="PackageClause"]
  1 [label="State 1\n\l  2 PackageClause: PACKAGE . PackageName\l"]
  1 -> 4 [style=solid label="ID"]
  1 -> 5 [style=dashed label="PackageName"]
  2 [label="State 2\n\l  0 $accept: SourceFile . $end\l"]
  2 -> 6 [style=solid label="$end"]
  3 [label="State 3\n\l  1 SourceFile: PackageClause . ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  3 -> 7 [style=solid label="';'"]
  4 [label="State 4\n\l  3 PackageName: ID .\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  2 PackageClause: PACKAGE PackageName .\l"]
  5 -> "5R2" [style=solid]
 "5R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  0 $accept: SourceFile $end .\l"]
  6 -> "6R0" [style=solid]
 "6R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  7 [label="State 7\n\l  1 SourceFile: PackageClause ';' . STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  7 -> 8 [style=dashed label="STAR_ImportDecl_SC"]
  7 -> "7R15" [style=solid]
 "7R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC . STAR_TopLevelDecl_SC\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC . ImportDecl ';'\l"]
  8 -> 9 [style=solid label="IMPORT"]
  8 -> 10 [style=dashed label="ImportDecl"]
  8 -> 11 [style=dashed label="STAR_TopLevelDecl_SC"]
  8 -> "8R13" [style=solid]
 "8R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  4 ImportDecl: IMPORT . ImportSpec\l  5           | IMPORT . '(' STAR_ImportSpec_SC ')'\l"]
  9 -> 4 [style=solid label="ID"]
  9 -> 12 [style=solid label="STRING_LIT"]
  9 -> 13 [style=solid label="'('"]
  9 -> 14 [style=solid label="'.'"]
  9 -> 15 [style=dashed label="PackageName"]
  9 -> 16 [style=dashed label="ImportSpec"]
  9 -> 17 [style=dashed label="ImportPath"]
  10 [label="State 10\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl . ';'\l"]
  10 -> 18 [style=solid label="';'"]
  11 [label="State 11\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC .\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC . TopLevelDecl ';'\l"]
  11 -> 19 [style=solid label="FUNC"]
  11 -> 20 [style=solid label="CONST"]
  11 -> 21 [style=solid label="VAR"]
  11 -> 22 [style=solid label="TYPE_TOK"]
  11 -> 23 [style=dashed label="TopLevelDecl"]
  11 -> 24 [style=dashed label="Declaration"]
  11 -> 25 [style=dashed label="ConstDecl"]
  11 -> 26 [style=dashed label="TypeDecl"]
  11 -> 27 [style=dashed label="VarDecl"]
  11 -> 28 [style=dashed label="FunctionDecl"]
  11 -> "11R1" [style=solid]
 "11R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  9 ImportPath: STRING_LIT .\l"]
  12 -> "12R9" [style=solid]
 "12R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  5 ImportDecl: IMPORT '(' . STAR_ImportSpec_SC ')'\l"]
  13 -> 29 [style=dashed label="STAR_ImportSpec_SC"]
  13 -> "13R17" [style=solid]
 "13R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  7 ImportSpec: '.' . ImportPath\l"]
  14 -> 12 [style=solid label="STRING_LIT"]
  14 -> 30 [style=dashed label="ImportPath"]
  15 [label="State 15\n\l  8 ImportSpec: PackageName . ImportPath\l"]
  15 -> 12 [style=solid label="STRING_LIT"]
  15 -> 31 [style=dashed label="ImportPath"]
  16 [label="State 16\n\l  4 ImportDecl: IMPORT ImportSpec .\l"]
  16 -> "16R4" [style=solid]
 "16R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  6 ImportSpec: ImportPath .\l"]
  17 -> "17R6" [style=solid]
 "17R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl ';' .\l"]
  18 -> "18R14" [style=solid]
 "18R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l133 FunctionDecl: FUNC . FunctionName Signature FunctionBody\l134             | FUNC . FunctionName Signature\l"]
  19 -> 32 [style=solid label="ID"]
  19 -> 33 [style=dashed label="FunctionName"]
  20 [label="State 20\n\l 37 ConstDecl: CONST . ConstSpec\l 38          | CONST . '(' STAR_ConstSpec_SC ')'\l"]
  20 -> 34 [style=solid label="ID"]
  20 -> 35 [style=solid label="'('"]
  20 -> 36 [style=dashed label="ConstSpec"]
  20 -> 37 [style=dashed label="IdentifierList"]
  21 [label="State 21\n\l 47 VarDecl: VAR . VarSpec\l 48        | VAR . '(' STAR_VarSpec_SC ')'\l"]
  21 -> 34 [style=solid label="ID"]
  21 -> 38 [style=solid label="'('"]
  21 -> 39 [style=dashed label="IdentifierList"]
  21 -> 40 [style=dashed label="VarSpec"]
  22 [label="State 22\n\l 41 TypeDecl: TYPE_TOK . TypeSpec\l 42         | TYPE_TOK . '(' STAR_TypeSpec_SC ')'\l"]
  22 -> 41 [style=solid label="ID"]
  22 -> 42 [style=solid label="'('"]
  22 -> 43 [style=dashed label="TypeSpec"]
  22 -> 44 [style=dashed label="AliasDecl"]
  22 -> 45 [style=dashed label="TypeDef"]
  23 [label="State 23\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl . ';'\l"]
  23 -> 46 [style=solid label="';'"]
  24 [label="State 24\n\l 10 TopLevelDecl: Declaration .\l"]
  24 -> "24R10" [style=solid]
 "24R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 34 Declaration: ConstDecl .\l"]
  25 -> "25R34" [style=solid]
 "25R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 35 Declaration: TypeDecl .\l"]
  26 -> "26R35" [style=solid]
 "26R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 36 Declaration: VarDecl .\l"]
  27 -> "27R36" [style=solid]
 "27R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 11 TopLevelDecl: FunctionDecl .\l"]
  28 -> "28R11" [style=solid]
 "28R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC . ')'\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC . ImportSpec ';'\l"]
  29 -> 4 [style=solid label="ID"]
  29 -> 12 [style=solid label="STRING_LIT"]
  29 -> 47 [style=solid label="')'"]
  29 -> 14 [style=solid label="'.'"]
  29 -> 15 [style=dashed label="PackageName"]
  29 -> 48 [style=dashed label="ImportSpec"]
  29 -> 17 [style=dashed label="ImportPath"]
  30 [label="State 30\n\l  7 ImportSpec: '.' ImportPath .\l"]
  30 -> "30R7" [style=solid]
 "30R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l  8 ImportSpec: PackageName ImportPath .\l"]
  31 -> "31R8" [style=solid]
 "31R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l135 FunctionName: ID .\l"]
  32 -> "32R135" [style=solid]
 "32R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l133 FunctionDecl: FUNC FunctionName . Signature FunctionBody\l134             | FUNC FunctionName . Signature\l"]
  33 -> 49 [style=solid label="FUNC"]
  33 -> 50 [style=solid label="STRUCT"]
  33 -> 51 [style=solid label="ID"]
  33 -> 52 [style=solid label="ELIPSIS"]
  33 -> 53 [style=solid label="'*'"]
  33 -> 54 [style=solid label="'('"]
  33 -> 55 [style=solid label="'['"]
  33 -> 56 [style=dashed label="PackageName"]
  33 -> 57 [style=dashed label="IdentifierList"]
  33 -> 58 [style=dashed label="QualifiedIdent"]
  33 -> 59 [style=dashed label="Signature"]
  33 -> 60 [style=dashed label="Parameters"]
  33 -> 61 [style=dashed label="ParameterList"]
  33 -> 62 [style=dashed label="ParameterDecl"]
  33 -> 63 [style=dashed label="Type"]
  33 -> 64 [style=dashed label="TypeName"]
  33 -> 65 [style=dashed label="TypeLit"]
  33 -> 66 [style=dashed label="ArrayType"]
  33 -> 67 [style=dashed label="StructType"]
  33 -> 68 [style=dashed label="PointerType"]
  33 -> 69 [style=dashed label="FunctionType"]
  34 [label="State 34\n\l 40 IdentifierList: ID . STAR_CM_ID\l"]
  34 -> 70 [style=dashed label="STAR_CM_ID"]
  34 -> "34R19" [style=solid]
 "34R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 38 ConstDecl: CONST '(' . STAR_ConstSpec_SC ')'\l"]
  35 -> 71 [style=dashed label="STAR_ConstSpec_SC"]
  35 -> "35R21" [style=solid]
 "35R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 37 ConstDecl: CONST ConstSpec .\l"]
  36 -> "36R37" [style=solid]
 "36R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 39 ConstSpec: IdentifierList .\l"]
  37 -> "37R39" [style=solid]
 "37R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 48 VarDecl: VAR '(' . STAR_VarSpec_SC ')'\l"]
  38 -> 72 [style=dashed label="STAR_VarSpec_SC"]
  38 -> "38R23" [style=solid]
 "38R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 49 VarSpec: IdentifierList . \"=\" ExpressionList\l"]
  39 -> 73 [style=solid label="\"=\""]
  40 [label="State 40\n\l 47 VarDecl: VAR VarSpec .\l"]
  40 -> "40R47" [style=solid]
 "40R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 45 AliasDecl: ID . '=' Type\l 46 TypeDef: ID . Type\l"]
  41 -> 49 [style=solid label="FUNC"]
  41 -> 50 [style=solid label="STRUCT"]
  41 -> 74 [style=solid label="ID"]
  41 -> 53 [style=solid label="'*'"]
  41 -> 75 [style=solid label="'('"]
  41 -> 76 [style=solid label="'='"]
  41 -> 55 [style=solid label="'['"]
  41 -> 56 [style=dashed label="PackageName"]
  41 -> 58 [style=dashed label="QualifiedIdent"]
  41 -> 77 [style=dashed label="Type"]
  41 -> 64 [style=dashed label="TypeName"]
  41 -> 65 [style=dashed label="TypeLit"]
  41 -> 66 [style=dashed label="ArrayType"]
  41 -> 67 [style=dashed label="StructType"]
  41 -> 68 [style=dashed label="PointerType"]
  41 -> 69 [style=dashed label="FunctionType"]
  42 [label="State 42\n\l 42 TypeDecl: TYPE_TOK '(' . STAR_TypeSpec_SC ')'\l"]
  42 -> 78 [style=dashed label="STAR_TypeSpec_SC"]
  42 -> "42R27" [style=solid]
 "42R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 41 TypeDecl: TYPE_TOK TypeSpec .\l"]
  43 -> "43R41" [style=solid]
 "43R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 43 TypeSpec: AliasDecl .\l"]
  44 -> "44R43" [style=solid]
 "44R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 44 TypeSpec: TypeDef .\l"]
  45 -> "45R44" [style=solid]
 "45R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl ';' .\l"]
  46 -> "46R12" [style=solid]
 "46R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC ')' .\l"]
  47 -> "47R5" [style=solid]
 "47R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec . ';'\l"]
  48 -> 79 [style=solid label="';'"]
  49 [label="State 49\n\l221 FunctionType: FUNC . Signature\l"]
  49 -> 49 [style=solid label="FUNC"]
  49 -> 50 [style=solid label="STRUCT"]
  49 -> 51 [style=solid label="ID"]
  49 -> 52 [style=solid label="ELIPSIS"]
  49 -> 53 [style=solid label="'*'"]
  49 -> 54 [style=solid label="'('"]
  49 -> 55 [style=solid label="'['"]
  49 -> 56 [style=dashed label="PackageName"]
  49 -> 57 [style=dashed label="IdentifierList"]
  49 -> 58 [style=dashed label="QualifiedIdent"]
  49 -> 80 [style=dashed label="Signature"]
  49 -> 60 [style=dashed label="Parameters"]
  49 -> 61 [style=dashed label="ParameterList"]
  49 -> 62 [style=dashed label="ParameterDecl"]
  49 -> 63 [style=dashed label="Type"]
  49 -> 64 [style=dashed label="TypeName"]
  49 -> 65 [style=dashed label="TypeLit"]
  49 -> 66 [style=dashed label="ArrayType"]
  49 -> 67 [style=dashed label="StructType"]
  49 -> 68 [style=dashed label="PointerType"]
  49 -> 69 [style=dashed label="FunctionType"]
  50 [label="State 50\n\l215 StructType: STRUCT . '{' STAR_FieldDecl_SC '}'\l"]
  50 -> 81 [style=solid label="'{'"]
  51 [label="State 51\n\l  3 PackageName: ID .\l 40 IdentifierList: ID . STAR_CM_ID\l206 TypeName: ID .\l"]
  51 -> 70 [style=dashed label="STAR_CM_ID"]
  51 -> "51R3" [label="['.']", style=solid]
 "51R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  51 -> "51R19" [style=solid]
 "51R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  51 -> "51R206d" [label="[FUNC, STRUCT, ID, ELIPSIS, '*', '(', ',', '[']", style=solid]
 "51R206d" [label="R206", fillcolor=5, shape=diamond, style=filled]
  51 -> "51R206" [label="[STRING_LIT, ';', ')', '{']", style=solid]
 "51R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l233 ParameterDecl: ELIPSIS . Type\l"]
  52 -> 49 [style=solid label="FUNC"]
  52 -> 50 [style=solid label="STRUCT"]
  52 -> 74 [style=solid label="ID"]
  52 -> 53 [style=solid label="'*'"]
  52 -> 75 [style=solid label="'('"]
  52 -> 55 [style=solid label="'['"]
  52 -> 56 [style=dashed label="PackageName"]
  52 -> 58 [style=dashed label="QualifiedIdent"]
  52 -> 82 [style=dashed label="Type"]
  52 -> 64 [style=dashed label="TypeName"]
  52 -> 65 [style=dashed label="TypeLit"]
  52 -> 66 [style=dashed label="ArrayType"]
  52 -> 67 [style=dashed label="StructType"]
  52 -> 68 [style=dashed label="PointerType"]
  52 -> 69 [style=dashed label="FunctionType"]
  53 [label="State 53\n\l219 PointerType: '*' . BaseType\l"]
  53 -> 49 [style=solid label="FUNC"]
  53 -> 50 [style=solid label="STRUCT"]
  53 -> 74 [style=solid label="ID"]
  53 -> 53 [style=solid label="'*'"]
  53 -> 75 [style=solid label="'('"]
  53 -> 55 [style=solid label="'['"]
  53 -> 56 [style=dashed label="PackageName"]
  53 -> 58 [style=dashed label="QualifiedIdent"]
  53 -> 83 [style=dashed label="Type"]
  53 -> 64 [style=dashed label="TypeName"]
  53 -> 65 [style=dashed label="TypeLit"]
  53 -> 66 [style=dashed label="ArrayType"]
  53 -> 67 [style=dashed label="StructType"]
  53 -> 68 [style=dashed label="PointerType"]
  53 -> 84 [style=dashed label="BaseType"]
  53 -> 69 [style=dashed label="FunctionType"]
  54 [label="State 54\n\l142 Parameters: '(' . ')'\l143           | '(' . ParameterList ')'\l144           | '(' . ParameterList ',' ')'\l205 Type: '(' . Type ')'\l226 Parameters: '(' . ')'\l"]
  54 -> 49 [style=solid label="FUNC"]
  54 -> 50 [style=solid label="STRUCT"]
  54 -> 51 [style=solid label="ID"]
  54 -> 52 [style=solid label="ELIPSIS"]
  54 -> 53 [style=solid label="'*'"]
  54 -> 75 [style=solid label="'('"]
  54 -> 85 [style=solid label="')'"]
  54 -> 55 [style=solid label="'['"]
  54 -> 56 [style=dashed label="PackageName"]
  54 -> 57 [style=dashed label="IdentifierList"]
  54 -> 58 [style=dashed label="QualifiedIdent"]
  54 -> 86 [style=dashed label="ParameterList"]
  54 -> 62 [style=dashed label="ParameterDecl"]
  54 -> 87 [style=dashed label="Type"]
  54 -> 64 [style=dashed label="TypeName"]
  54 -> 65 [style=dashed label="TypeLit"]
  54 -> 66 [style=dashed label="ArrayType"]
  54 -> 67 [style=dashed label="StructType"]
  54 -> 68 [style=dashed label="PointerType"]
  54 -> 69 [style=dashed label="FunctionType"]
  55 [label="State 55\n\l212 ArrayType: '[' . ArrayLength ']' ElementType\l"]
  55 -> 88 [style=solid label="FUNC"]
  55 -> 50 [style=solid label="STRUCT"]
  55 -> 89 [style=solid label="ID"]
  55 -> 90 [style=solid label="STRING_LIT"]
  55 -> 91 [style=solid label="BINARY_LIT"]
  55 -> 92 [style=solid label="HEX_LIT"]
  55 -> 93 [style=solid label="FLOAT_LIT"]
  55 -> 94 [style=solid label="DEC_LIT"]
  55 -> 95 [style=solid label="'+'"]
  55 -> 96 [style=solid label="'-'"]
  55 -> 97 [style=solid label="'*'"]
  55 -> 98 [style=solid label="'^'"]
  55 -> 99 [style=solid label="'&'"]
  55 -> 100 [style=solid label="'!'"]
  55 -> 101 [style=solid label="'['"]
  55 -> 102 [style=solid label="\"(\""]
  55 -> 56 [style=dashed label="PackageName"]
  55 -> 103 [style=dashed label="Expression"]
  55 -> 104 [style=dashed label="UnaryExpr"]
  55 -> 105 [style=dashed label="unary_op"]
  55 -> 106 [style=dashed label="PrimaryExpr"]
  55 -> 107 [style=dashed label="Operand"]
  55 -> 108 [style=dashed label="Literal"]
  55 -> 109 [style=dashed label="INT_LIT"]
  55 -> 110 [style=dashed label="BasicLit"]
  55 -> 111 [style=dashed label="OperandName"]
  55 -> 112 [style=dashed label="QualifiedIdent"]
  55 -> 113 [style=dashed label="CompositeLit"]
  55 -> 114 [style=dashed label="LiteralType"]
  55 -> 115 [style=dashed label="FunctionLit"]
  55 -> 116 [style=dashed label="TypeName"]
  55 -> 117 [style=dashed label="ArrayType"]
  55 -> 118 [style=dashed label="ArrayLength"]
  55 -> 119 [style=dashed label="StructType"]
  56 [label="State 56\n\l112 QualifiedIdent: PackageName . '.' ID\l"]
  56 -> 120 [style=solid label="'.'"]
  57 [label="State 57\n\l147 ParameterDecl: IdentifierList . Type\l231              | IdentifierList . Type\l232              | IdentifierList . ELIPSIS Type\l"]
  57 -> 49 [style=solid label="FUNC"]
  57 -> 50 [style=solid label="STRUCT"]
  57 -> 74 [style=solid label="ID"]
  57 -> 121 [style=solid label="ELIPSIS"]
  57 -> 53 [style=solid label="'*'"]
  57 -> 75 [style=solid label="'('"]
  57 -> 55 [style=solid label="'['"]
  57 -> 56 [style=dashed label="PackageName"]
  57 -> 58 [style=dashed label="QualifiedIdent"]
  57 -> 122 [style=dashed label="Type"]
  57 -> 64 [style=dashed label="TypeName"]
  57 -> 65 [style=dashed label="TypeLit"]
  57 -> 66 [style=dashed label="ArrayType"]
  57 -> 67 [style=dashed label="StructType"]
  57 -> 68 [style=dashed label="PointerType"]
  57 -> 69 [style=dashed label="FunctionType"]
  58 [label="State 58\n\l207 TypeName: QualifiedIdent .\l"]
  58 -> "58R207" [style=solid]
 "58R207" [label="R207", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l133 FunctionDecl: FUNC FunctionName Signature . FunctionBody\l134             | FUNC FunctionName Signature .\l"]
  59 -> 123 [style=solid label="'{'"]
  59 -> 124 [style=dashed label="FunctionBody"]
  59 -> 125 [style=dashed label="Block"]
  59 -> "59R134" [style=solid]
 "59R134" [label="R134", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l138 Signature: Parameters .\l139          | Parameters . Result\l222          | Parameters .\l223          | Parameters . Result\l"]
  60 -> 49 [style=solid label="FUNC"]
  60 -> 50 [style=solid label="STRUCT"]
  60 -> 51 [style=solid label="ID"]
  60 -> 52 [style=solid label="ELIPSIS"]
  60 -> 53 [style=solid label="'*'"]
  60 -> 54 [style=solid label="'('"]
  60 -> 55 [style=solid label="'['"]
  60 -> 56 [style=dashed label="PackageName"]
  60 -> 57 [style=dashed label="IdentifierList"]
  60 -> 58 [style=dashed label="QualifiedIdent"]
  60 -> 126 [style=dashed label="Result"]
  60 -> 127 [style=dashed label="Parameters"]
  60 -> 61 [style=dashed label="ParameterList"]
  60 -> 62 [style=dashed label="ParameterDecl"]
  60 -> 128 [style=dashed label="Type"]
  60 -> 64 [style=dashed label="TypeName"]
  60 -> 65 [style=dashed label="TypeLit"]
  60 -> 66 [style=dashed label="ArrayType"]
  60 -> 67 [style=dashed label="StructType"]
  60 -> 68 [style=dashed label="PointerType"]
  60 -> 69 [style=dashed label="FunctionType"]
  60 -> "60R138d" [label="[FUNC, STRUCT, ID, ELIPSIS, '*', '(', '[']", style=solid]
 "60R138d" [label="R138", fillcolor=5, shape=diamond, style=filled]
  60 -> "60R138" [style=solid]
 "60R138" [label="R138", fillcolor=3, shape=diamond, style=filled]
  60 -> "60R222d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "60R222d" [label="R222", fillcolor=5, shape=diamond, style=filled]
  61 [label="State 61\n\l227 Parameters: ParameterList . ','\l228           | ParameterList .\l"]
  61 -> 129 [style=solid label="','"]
  61 -> "61R228d" [label="[',']", style=solid]
 "61R228d" [label="R228", fillcolor=5, shape=diamond, style=filled]
  61 -> "61R228" [style=solid]
 "61R228" [label="R228", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l145 ParameterList: ParameterDecl . STAR_CM_ParameterDecl\l229              | ParameterDecl . STAR_CM_ParameterDecl\l"]
  62 -> 130 [style=dashed label="STAR_CM_ParameterDecl"]
  62 -> "62R31" [style=solid]
 "62R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l146 ParameterDecl: Type .\l230              | Type .\l"]
  63 -> "63R146" [style=solid]
 "63R146" [label="R146", fillcolor=3, shape=diamond, style=filled]
  63 -> "63R230d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "63R230d" [label="R230", fillcolor=5, shape=diamond, style=filled]
  64 [label="State 64\n\l203 Type: TypeName .\l"]
  64 -> "64R203" [style=solid]
 "64R203" [label="R203", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l204 Type: TypeLit .\l"]
  65 -> "65R204" [style=solid]
 "65R204" [label="R204", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l208 TypeLit: ArrayType .\l"]
  66 -> "66R208" [style=solid]
 "66R208" [label="R208", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l209 TypeLit: StructType .\l"]
  67 -> "67R209" [style=solid]
 "67R209" [label="R209", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l210 TypeLit: PointerType .\l"]
  68 -> "68R210" [style=solid]
 "68R210" [label="R210", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l211 TypeLit: FunctionType .\l"]
  69 -> "69R211" [style=solid]
 "69R211" [label="R211", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 18 STAR_CM_ID: STAR_CM_ID . ',' ID\l 40 IdentifierList: ID STAR_CM_ID .\l"]
  70 -> 131 [style=solid label="','"]
  70 -> "70R40" [style=solid]
 "70R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC . ConstSpec ';'\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC . ')'\l"]
  71 -> 34 [style=solid label="ID"]
  71 -> 132 [style=solid label="')'"]
  71 -> 133 [style=dashed label="ConstSpec"]
  71 -> 37 [style=dashed label="IdentifierList"]
  72 [label="State 72\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC . VarSpec ';'\l 48 VarDecl: VAR '(' STAR_VarSpec_SC . ')'\l"]
  72 -> 34 [style=solid label="ID"]
  72 -> 134 [style=solid label="')'"]
  72 -> 39 [style=dashed label="IdentifierList"]
  72 -> 135 [style=dashed label="VarSpec"]
  73 [label="State 73\n\l 49 VarSpec: IdentifierList \"=\" . ExpressionList\l"]
  73 -> 88 [style=solid label="FUNC"]
  73 -> 50 [style=solid label="STRUCT"]
  73 -> 89 [style=solid label="ID"]
  73 -> 90 [style=solid label="STRING_LIT"]
  73 -> 91 [style=solid label="BINARY_LIT"]
  73 -> 92 [style=solid label="HEX_LIT"]
  73 -> 93 [style=solid label="FLOAT_LIT"]
  73 -> 94 [style=solid label="DEC_LIT"]
  73 -> 95 [style=solid label="'+'"]
  73 -> 96 [style=solid label="'-'"]
  73 -> 97 [style=solid label="'*'"]
  73 -> 98 [style=solid label="'^'"]
  73 -> 99 [style=solid label="'&'"]
  73 -> 100 [style=solid label="'!'"]
  73 -> 101 [style=solid label="'['"]
  73 -> 102 [style=solid label="\"(\""]
  73 -> 56 [style=dashed label="PackageName"]
  73 -> 136 [style=dashed label="ExpressionList"]
  73 -> 137 [style=dashed label="Expression"]
  73 -> 104 [style=dashed label="UnaryExpr"]
  73 -> 105 [style=dashed label="unary_op"]
  73 -> 106 [style=dashed label="PrimaryExpr"]
  73 -> 107 [style=dashed label="Operand"]
  73 -> 108 [style=dashed label="Literal"]
  73 -> 109 [style=dashed label="INT_LIT"]
  73 -> 110 [style=dashed label="BasicLit"]
  73 -> 111 [style=dashed label="OperandName"]
  73 -> 112 [style=dashed label="QualifiedIdent"]
  73 -> 113 [style=dashed label="CompositeLit"]
  73 -> 114 [style=dashed label="LiteralType"]
  73 -> 115 [style=dashed label="FunctionLit"]
  73 -> 116 [style=dashed label="TypeName"]
  73 -> 117 [style=dashed label="ArrayType"]
  73 -> 119 [style=dashed label="StructType"]
  74 [label="State 74\n\l  3 PackageName: ID .\l206 TypeName: ID .\l"]
  74 -> "74R3" [label="['.']", style=solid]
 "74R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  74 -> "74R206" [style=solid]
 "74R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l205 Type: '(' . Type ')'\l"]
  75 -> 49 [style=solid label="FUNC"]
  75 -> 50 [style=solid label="STRUCT"]
  75 -> 74 [style=solid label="ID"]
  75 -> 53 [style=solid label="'*'"]
  75 -> 75 [style=solid label="'('"]
  75 -> 55 [style=solid label="'['"]
  75 -> 56 [style=dashed label="PackageName"]
  75 -> 58 [style=dashed label="QualifiedIdent"]
  75 -> 138 [style=dashed label="Type"]
  75 -> 64 [style=dashed label="TypeName"]
  75 -> 65 [style=dashed label="TypeLit"]
  75 -> 66 [style=dashed label="ArrayType"]
  75 -> 67 [style=dashed label="StructType"]
  75 -> 68 [style=dashed label="PointerType"]
  75 -> 69 [style=dashed label="FunctionType"]
  76 [label="State 76\n\l 45 AliasDecl: ID '=' . Type\l"]
  76 -> 49 [style=solid label="FUNC"]
  76 -> 50 [style=solid label="STRUCT"]
  76 -> 74 [style=solid label="ID"]
  76 -> 53 [style=solid label="'*'"]
  76 -> 75 [style=solid label="'('"]
  76 -> 55 [style=solid label="'['"]
  76 -> 56 [style=dashed label="PackageName"]
  76 -> 58 [style=dashed label="QualifiedIdent"]
  76 -> 139 [style=dashed label="Type"]
  76 -> 64 [style=dashed label="TypeName"]
  76 -> 65 [style=dashed label="TypeLit"]
  76 -> 66 [style=dashed label="ArrayType"]
  76 -> 67 [style=dashed label="StructType"]
  76 -> 68 [style=dashed label="PointerType"]
  76 -> 69 [style=dashed label="FunctionType"]
  77 [label="State 77\n\l 46 TypeDef: ID Type .\l"]
  77 -> "77R46" [style=solid]
 "77R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC . ';'\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC . ')'\l"]
  78 -> 140 [style=solid label="';'"]
  78 -> 141 [style=solid label="')'"]
  79 [label="State 79\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec ';' .\l"]
  79 -> "79R16" [style=solid]
 "79R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l221 FunctionType: FUNC Signature .\l"]
  80 -> "80R221" [style=solid]
 "80R221" [label="R221", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l215 StructType: STRUCT '{' . STAR_FieldDecl_SC '}'\l"]
  81 -> 142 [style=dashed label="STAR_FieldDecl_SC"]
  81 -> "81R33" [style=solid]
 "81R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l233 ParameterDecl: ELIPSIS Type .\l"]
  82 -> "82R233" [style=solid]
 "82R233" [label="R233", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l220 BaseType: Type .\l"]
  83 -> "83R220" [style=solid]
 "83R220" [label="R220", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l219 PointerType: '*' BaseType .\l"]
  84 -> "84R219" [style=solid]
 "84R219" [label="R219", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l142 Parameters: '(' ')' .\l226           | '(' ')' .\l"]
  85 -> "85R142" [style=solid]
 "85R142" [label="R142", fillcolor=3, shape=diamond, style=filled]
  85 -> "85R226d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "85R226d" [label="R226", fillcolor=5, shape=diamond, style=filled]
  86 [label="State 86\n\l143 Parameters: '(' ParameterList . ')'\l144           | '(' ParameterList . ',' ')'\l"]
  86 -> 143 [style=solid label="')'"]
  86 -> 144 [style=solid label="','"]
  87 [label="State 87\n\l146 ParameterDecl: Type .\l205 Type: '(' Type . ')'\l230 ParameterDecl: Type .\l"]
  87 -> 145 [style=solid label="')'"]
  87 -> "87R146d" [label="[')']", style=solid]
 "87R146d" [label="R146", fillcolor=5, shape=diamond, style=filled]
  87 -> "87R146" [style=solid]
 "87R146" [label="R146", fillcolor=3, shape=diamond, style=filled]
  87 -> "87R230d" [label="[')', ',']", style=solid]
 "87R230d" [label="R230", fillcolor=5, shape=diamond, style=filled]
  88 [label="State 88\n\l132 FunctionLit: FUNC . Signature FunctionBody\l"]
  88 -> 49 [style=solid label="FUNC"]
  88 -> 50 [style=solid label="STRUCT"]
  88 -> 51 [style=solid label="ID"]
  88 -> 52 [style=solid label="ELIPSIS"]
  88 -> 53 [style=solid label="'*'"]
  88 -> 54 [style=solid label="'('"]
  88 -> 55 [style=solid label="'['"]
  88 -> 56 [style=dashed label="PackageName"]
  88 -> 57 [style=dashed label="IdentifierList"]
  88 -> 58 [style=dashed label="QualifiedIdent"]
  88 -> 146 [style=dashed label="Signature"]
  88 -> 60 [style=dashed label="Parameters"]
  88 -> 61 [style=dashed label="ParameterList"]
  88 -> 62 [style=dashed label="ParameterDecl"]
  88 -> 63 [style=dashed label="Type"]
  88 -> 64 [style=dashed label="TypeName"]
  88 -> 65 [style=dashed label="TypeLit"]
  88 -> 66 [style=dashed label="ArrayType"]
  88 -> 67 [style=dashed label="StructType"]
  88 -> 68 [style=dashed label="PointerType"]
  88 -> 69 [style=dashed label="FunctionType"]
  89 [label="State 89\n\l  3 PackageName: ID .\l110 OperandName: ID .\l206 TypeName: ID .\l"]
  89 -> "89R3" [label="['.']", style=solid]
 "89R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  89 -> "89R110d" [label="['.']", style=solid]
 "89R110d" [label="R110", fillcolor=5, shape=diamond, style=filled]
  89 -> "89R110" [style=solid]
 "89R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  89 -> "89R206d" [label="[ELIPSIS, ')', ',', '{']", style=solid]
 "89R206d" [label="R206", fillcolor=5, shape=diamond, style=filled]
  90 [label="State 90\n\l109 BasicLit: STRING_LIT .\l"]
  90 -> "90R109" [style=solid]
 "90R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l105 INT_LIT: BINARY_LIT .\l"]
  91 -> "91R105" [style=solid]
 "91R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l106 INT_LIT: HEX_LIT .\l"]
  92 -> "92R106" [style=solid]
 "92R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l108 BasicLit: FLOAT_LIT .\l"]
  93 -> "93R108" [style=solid]
 "93R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l104 INT_LIT: DEC_LIT .\l"]
  94 -> "94R104" [style=solid]
 "94R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 76 unary_op: '+' .\l"]
  95 -> "95R76" [style=solid]
 "95R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 77 unary_op: '-' .\l"]
  96 -> "96R77" [style=solid]
 "96R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 80 unary_op: '*' .\l"]
  97 -> "97R80" [style=solid]
 "97R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 79 unary_op: '^' .\l"]
  98 -> "98R79" [style=solid]
 "98R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 81 unary_op: '&' .\l"]
  99 -> "99R81" [style=solid]
 "99R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 78 unary_op: '!' .\l"]
  100 -> "100R78" [style=solid]
 "100R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l116 LiteralType: '[' . ELIPSIS ']' ElementType\l212 ArrayType: '[' . ArrayLength ']' ElementType\l"]
  101 -> 88 [style=solid label="FUNC"]
  101 -> 50 [style=solid label="STRUCT"]
  101 -> 89 [style=solid label="ID"]
  101 -> 90 [style=solid label="STRING_LIT"]
  101 -> 91 [style=solid label="BINARY_LIT"]
  101 -> 92 [style=solid label="HEX_LIT"]
  101 -> 93 [style=solid label="FLOAT_LIT"]
  101 -> 94 [style=solid label="DEC_LIT"]
  101 -> 147 [style=solid label="ELIPSIS"]
  101 -> 95 [style=solid label="'+'"]
  101 -> 96 [style=solid label="'-'"]
  101 -> 97 [style=solid label="'*'"]
  101 -> 98 [style=solid label="'^'"]
  101 -> 99 [style=solid label="'&'"]
  101 -> 100 [style=solid label="'!'"]
  101 -> 101 [style=solid label="'['"]
  101 -> 102 [style=solid label="\"(\""]
  101 -> 56 [style=dashed label="PackageName"]
  101 -> 103 [style=dashed label="Expression"]
  101 -> 104 [style=dashed label="UnaryExpr"]
  101 -> 105 [style=dashed label="unary_op"]
  101 -> 106 [style=dashed label="PrimaryExpr"]
  101 -> 107 [style=dashed label="Operand"]
  101 -> 108 [style=dashed label="Literal"]
  101 -> 109 [style=dashed label="INT_LIT"]
  101 -> 110 [style=dashed label="BasicLit"]
  101 -> 111 [style=dashed label="OperandName"]
  101 -> 112 [style=dashed label="QualifiedIdent"]
  101 -> 113 [style=dashed label="CompositeLit"]
  101 -> 114 [style=dashed label="LiteralType"]
  101 -> 115 [style=dashed label="FunctionLit"]
  101 -> 116 [style=dashed label="TypeName"]
  101 -> 117 [style=dashed label="ArrayType"]
  101 -> 118 [style=dashed label="ArrayLength"]
  101 -> 119 [style=dashed label="StructType"]
  102 [label="State 102\n\l100 Operand: \"(\" . Expression \")\"\l"]
  102 -> 88 [style=solid label="FUNC"]
  102 -> 50 [style=solid label="STRUCT"]
  102 -> 89 [style=solid label="ID"]
  102 -> 90 [style=solid label="STRING_LIT"]
  102 -> 91 [style=solid label="BINARY_LIT"]
  102 -> 92 [style=solid label="HEX_LIT"]
  102 -> 93 [style=solid label="FLOAT_LIT"]
  102 -> 94 [style=solid label="DEC_LIT"]
  102 -> 95 [style=solid label="'+'"]
  102 -> 96 [style=solid label="'-'"]
  102 -> 97 [style=solid label="'*'"]
  102 -> 98 [style=solid label="'^'"]
  102 -> 99 [style=solid label="'&'"]
  102 -> 100 [style=solid label="'!'"]
  102 -> 101 [style=solid label="'['"]
  102 -> 102 [style=solid label="\"(\""]
  102 -> 56 [style=dashed label="PackageName"]
  102 -> 148 [style=dashed label="Expression"]
  102 -> 104 [style=dashed label="UnaryExpr"]
  102 -> 105 [style=dashed label="unary_op"]
  102 -> 106 [style=dashed label="PrimaryExpr"]
  102 -> 107 [style=dashed label="Operand"]
  102 -> 108 [style=dashed label="Literal"]
  102 -> 109 [style=dashed label="INT_LIT"]
  102 -> 110 [style=dashed label="BasicLit"]
  102 -> 111 [style=dashed label="OperandName"]
  102 -> 112 [style=dashed label="QualifiedIdent"]
  102 -> 113 [style=dashed label="CompositeLit"]
  102 -> 114 [style=dashed label="LiteralType"]
  102 -> 115 [style=dashed label="FunctionLit"]
  102 -> 116 [style=dashed label="TypeName"]
  102 -> 117 [style=dashed label="ArrayType"]
  102 -> 119 [style=dashed label="StructType"]
  103 [label="State 103\n\l 52 Expression: Expression . binary_op Expression\l213 ArrayLength: Expression .\l"]
  103 -> 149 [style=solid label="'+'"]
  103 -> 150 [style=solid label="'-'"]
  103 -> 151 [style=solid label="'*'"]
  103 -> 152 [style=solid label="'/'"]
  103 -> 153 [style=solid label="\"||\""]
  103 -> 154 [style=solid label="\"&&\""]
  103 -> 155 [style=solid label="\"==\""]
  103 -> 156 [style=solid label="\"!=\""]
  103 -> 157 [style=solid label="'<'"]
  103 -> 158 [style=solid label="\"<=\""]
  103 -> 159 [style=solid label="'>'"]
  103 -> 160 [style=solid label="\">=\""]
  103 -> 161 [style=solid label="'|'"]
  103 -> 162 [style=solid label="'^'"]
  103 -> 163 [style=solid label="'%'"]
  103 -> 164 [style=solid label="\"<<\""]
  103 -> 165 [style=solid label="\">>\""]
  103 -> 166 [style=solid label="'&'"]
  103 -> 167 [style=dashed label="binary_op"]
  103 -> 168 [style=dashed label="rel_op"]
  103 -> 169 [style=dashed label="add_op"]
  103 -> 170 [style=dashed label="mul_op"]
  103 -> "103R213" [style=solid]
 "103R213" [label="R213", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 51 Expression: UnaryExpr .\l"]
  104 -> "104R51" [style=solid]
 "104R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 54 UnaryExpr: unary_op . UnaryExpr\l"]
  105 -> 88 [style=solid label="FUNC"]
  105 -> 50 [style=solid label="STRUCT"]
  105 -> 89 [style=solid label="ID"]
  105 -> 90 [style=solid label="STRING_LIT"]
  105 -> 91 [style=solid label="BINARY_LIT"]
  105 -> 92 [style=solid label="HEX_LIT"]
  105 -> 93 [style=solid label="FLOAT_LIT"]
  105 -> 94 [style=solid label="DEC_LIT"]
  105 -> 95 [style=solid label="'+'"]
  105 -> 96 [style=solid label="'-'"]
  105 -> 97 [style=solid label="'*'"]
  105 -> 98 [style=solid label="'^'"]
  105 -> 99 [style=solid label="'&'"]
  105 -> 100 [style=solid label="'!'"]
  105 -> 101 [style=solid label="'['"]
  105 -> 102 [style=solid label="\"(\""]
  105 -> 56 [style=dashed label="PackageName"]
  105 -> 171 [style=dashed label="UnaryExpr"]
  105 -> 105 [style=dashed label="unary_op"]
  105 -> 106 [style=dashed label="PrimaryExpr"]
  105 -> 107 [style=dashed label="Operand"]
  105 -> 108 [style=dashed label="Literal"]
  105 -> 109 [style=dashed label="INT_LIT"]
  105 -> 110 [style=dashed label="BasicLit"]
  105 -> 111 [style=dashed label="OperandName"]
  105 -> 112 [style=dashed label="QualifiedIdent"]
  105 -> 113 [style=dashed label="CompositeLit"]
  105 -> 114 [style=dashed label="LiteralType"]
  105 -> 115 [style=dashed label="FunctionLit"]
  105 -> 116 [style=dashed label="TypeName"]
  105 -> 117 [style=dashed label="ArrayType"]
  105 -> 119 [style=dashed label="StructType"]
  106 [label="State 106\n\l 53 UnaryExpr: PrimaryExpr .\l 83 PrimaryExpr: PrimaryExpr . Index\l 84            | PrimaryExpr . Selector\l 85            | PrimaryExpr . Arguments\l"]
  106 -> 172 [style=solid label="'('"]
  106 -> 173 [style=solid label="'.'"]
  106 -> 174 [style=solid label="'['"]
  106 -> 175 [style=dashed label="Selector"]
  106 -> 176 [style=dashed label="Index"]
  106 -> 177 [style=dashed label="Arguments"]
  106 -> "106R53" [style=solid]
 "106R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 82 PrimaryExpr: Operand .\l"]
  107 -> "107R82" [style=solid]
 "107R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 98 Operand: Literal .\l"]
  108 -> "108R98" [style=solid]
 "108R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l107 BasicLit: INT_LIT .\l"]
  109 -> "109R107" [style=solid]
 "109R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l101 Literal: BasicLit .\l"]
  110 -> "110R101" [style=solid]
 "110R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 99 Operand: OperandName .\l"]
  111 -> "111R99" [style=solid]
 "111R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l111 OperandName: QualifiedIdent .\l207 TypeName: QualifiedIdent .\l"]
  112 -> "112R111" [style=solid]
 "112R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  112 -> "112R207d" [label="[ELIPSIS, ')', ',', '{']", style=solid]
 "112R207d" [label="R207", fillcolor=5, shape=diamond, style=filled]
  113 [label="State 113\n\l102 Literal: CompositeLit .\l"]
  113 -> "113R102" [style=solid]
 "113R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l113 CompositeLit: LiteralType . LiteralValue\l"]
  114 -> 178 [style=solid label="'{'"]
  114 -> 179 [style=dashed label="LiteralValue"]
  115 [label="State 115\n\l103 Literal: FunctionLit .\l"]
  115 -> "115R103" [style=solid]
 "115R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l117 LiteralType: TypeName .\l"]
  116 -> "116R117" [style=solid]
 "116R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l115 LiteralType: ArrayType .\l"]
  117 -> "117R115" [style=solid]
 "117R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l212 ArrayType: '[' ArrayLength . ']' ElementType\l"]
  118 -> 180 [style=solid label="']'"]
  119 [label="State 119\n\l114 LiteralType: StructType .\l"]
  119 -> "119R114" [style=solid]
 "119R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l112 QualifiedIdent: PackageName '.' . ID\l"]
  120 -> 181 [style=solid label="ID"]
  121 [label="State 121\n\l232 ParameterDecl: IdentifierList ELIPSIS . Type\l"]
  121 -> 49 [style=solid label="FUNC"]
  121 -> 50 [style=solid label="STRUCT"]
  121 -> 74 [style=solid label="ID"]
  121 -> 53 [style=solid label="'*'"]
  121 -> 75 [style=solid label="'('"]
  121 -> 55 [style=solid label="'['"]
  121 -> 56 [style=dashed label="PackageName"]
  121 -> 58 [style=dashed label="QualifiedIdent"]
  121 -> 182 [style=dashed label="Type"]
  121 -> 64 [style=dashed label="TypeName"]
  121 -> 65 [style=dashed label="TypeLit"]
  121 -> 66 [style=dashed label="ArrayType"]
  121 -> 67 [style=dashed label="StructType"]
  121 -> 68 [style=dashed label="PointerType"]
  121 -> 69 [style=dashed label="FunctionType"]
  122 [label="State 122\n\l147 ParameterDecl: IdentifierList Type .\l231              | IdentifierList Type .\l"]
  122 -> "122R147" [style=solid]
 "122R147" [label="R147", fillcolor=3, shape=diamond, style=filled]
  122 -> "122R231d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "122R231d" [label="R231", fillcolor=5, shape=diamond, style=filled]
  123 [label="State 123\n\l137 Block: '{' . STAR_Statement_SC '}'\l"]
  123 -> 183 [style=dashed label="STAR_Statement_SC"]
  123 -> "123R29" [style=solid]
 "123R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l133 FunctionDecl: FUNC FunctionName Signature FunctionBody .\l"]
  124 -> "124R133" [style=solid]
 "124R133" [label="R133", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l136 FunctionBody: Block .\l"]
  125 -> "125R136" [style=solid]
 "125R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l139 Signature: Parameters Result .\l223          | Parameters Result .\l"]
  126 -> "126R139" [style=solid]
 "126R139" [label="R139", fillcolor=3, shape=diamond, style=filled]
  126 -> "126R223d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "126R223d" [label="R223", fillcolor=5, shape=diamond, style=filled]
  127 [label="State 127\n\l140 Result: Parameters .\l224       | Parameters .\l"]
  127 -> "127R140" [style=solid]
 "127R140" [label="R140", fillcolor=3, shape=diamond, style=filled]
  127 -> "127R224d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "127R224d" [label="R224", fillcolor=5, shape=diamond, style=filled]
  128 [label="State 128\n\l141 Result: Type .\l146 ParameterDecl: Type .\l225 Result: Type .\l230 ParameterDecl: Type .\l"]
  128 -> "128R141" [style=solid]
 "128R141" [label="R141", fillcolor=3, shape=diamond, style=filled]
  128 -> "128R146d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "128R146d" [label="R146", fillcolor=5, shape=diamond, style=filled]
  128 -> "128R225d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "128R225d" [label="R225", fillcolor=5, shape=diamond, style=filled]
  128 -> "128R230d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "128R230d" [label="R230", fillcolor=5, shape=diamond, style=filled]
  129 [label="State 129\n\l227 Parameters: ParameterList ',' .\l"]
  129 -> "129R227" [style=solid]
 "129R227" [label="R227", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl . ',' ParameterDecl\l145 ParameterList: ParameterDecl STAR_CM_ParameterDecl .\l229              | ParameterDecl STAR_CM_ParameterDecl .\l"]
  130 -> 184 [style=solid label="','"]
  130 -> "130R145d" [label="[',']", style=solid]
 "130R145d" [label="R145", fillcolor=5, shape=diamond, style=filled]
  130 -> "130R145" [style=solid]
 "130R145" [label="R145", fillcolor=3, shape=diamond, style=filled]
  130 -> "130R229d" [label="[FUNC, STRUCT, ID, STRING_LIT, ELIPSIS, '*', ';', '(', ')', ',', '[', '{']", style=solid]
 "130R229d" [label="R229", fillcolor=5, shape=diamond, style=filled]
  131 [label="State 131\n\l 18 STAR_CM_ID: STAR_CM_ID ',' . ID\l"]
  131 -> 185 [style=solid label="ID"]
  132 [label="State 132\n\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC ')' .\l"]
  132 -> "132R38" [style=solid]
 "132R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec . ';'\l"]
  133 -> 186 [style=solid label="';'"]
  134 [label="State 134\n\l 48 VarDecl: VAR '(' STAR_VarSpec_SC ')' .\l"]
  134 -> "134R48" [style=solid]
 "134R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec . ';'\l"]
  135 -> 187 [style=solid label="';'"]
  136 [label="State 136\n\l 49 VarSpec: IdentifierList \"=\" ExpressionList .\l"]
  136 -> "136R49" [style=solid]
 "136R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l"]
  137 -> 149 [style=solid label="'+'"]
  137 -> 150 [style=solid label="'-'"]
  137 -> 151 [style=solid label="'*'"]
  137 -> 152 [style=solid label="'/'"]
  137 -> 153 [style=solid label="\"||\""]
  137 -> 154 [style=solid label="\"&&\""]
  137 -> 155 [style=solid label="\"==\""]
  137 -> 156 [style=solid label="\"!=\""]
  137 -> 157 [style=solid label="'<'"]
  137 -> 158 [style=solid label="\"<=\""]
  137 -> 159 [style=solid label="'>'"]
  137 -> 160 [style=solid label="\">=\""]
  137 -> 161 [style=solid label="'|'"]
  137 -> 162 [style=solid label="'^'"]
  137 -> 163 [style=solid label="'%'"]
  137 -> 164 [style=solid label="\"<<\""]
  137 -> 165 [style=solid label="\">>\""]
  137 -> 166 [style=solid label="'&'"]
  137 -> 188 [style=dashed label="STAR_CM_EXP"]
  137 -> 167 [style=dashed label="binary_op"]
  137 -> 168 [style=dashed label="rel_op"]
  137 -> 169 [style=dashed label="add_op"]
  137 -> 170 [style=dashed label="mul_op"]
  137 -> "137R25" [style=solid]
 "137R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l205 Type: '(' Type . ')'\l"]
  138 -> 145 [style=solid label="')'"]
  139 [label="State 139\n\l 45 AliasDecl: ID '=' Type .\l"]
  139 -> "139R45" [style=solid]
 "139R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC ';' .\l"]
  140 -> "140R26" [style=solid]
 "140R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC ')' .\l"]
  141 -> "141R42" [style=solid]
 "141R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC . FieldDecl ';'\l215 StructType: STRUCT '{' STAR_FieldDecl_SC . '}'\l"]
  142 -> 34 [style=solid label="ID"]
  142 -> 189 [style=solid label="'}'"]
  142 -> 190 [style=dashed label="IdentifierList"]
  142 -> 191 [style=dashed label="FieldDecl"]
  143 [label="State 143\n\l143 Parameters: '(' ParameterList ')' .\l"]
  143 -> "143R143" [style=solid]
 "143R143" [label="R143", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l144 Parameters: '(' ParameterList ',' . ')'\l"]
  144 -> 192 [style=solid label="')'"]
  145 [label="State 145\n\l205 Type: '(' Type ')' .\l"]
  145 -> "145R205" [style=solid]
 "145R205" [label="R205", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l132 FunctionLit: FUNC Signature . FunctionBody\l"]
  146 -> 123 [style=solid label="'{'"]
  146 -> 193 [style=dashed label="FunctionBody"]
  146 -> 125 [style=dashed label="Block"]
  147 [label="State 147\n\l116 LiteralType: '[' ELIPSIS . ']' ElementType\l"]
  147 -> 194 [style=solid label="']'"]
  148 [label="State 148\n\l 52 Expression: Expression . binary_op Expression\l100 Operand: \"(\" Expression . \")\"\l"]
  148 -> 149 [style=solid label="'+'"]
  148 -> 150 [style=solid label="'-'"]
  148 -> 151 [style=solid label="'*'"]
  148 -> 152 [style=solid label="'/'"]
  148 -> 153 [style=solid label="\"||\""]
  148 -> 154 [style=solid label="\"&&\""]
  148 -> 155 [style=solid label="\"==\""]
  148 -> 156 [style=solid label="\"!=\""]
  148 -> 157 [style=solid label="'<'"]
  148 -> 158 [style=solid label="\"<=\""]
  148 -> 159 [style=solid label="'>'"]
  148 -> 160 [style=solid label="\">=\""]
  148 -> 161 [style=solid label="'|'"]
  148 -> 162 [style=solid label="'^'"]
  148 -> 163 [style=solid label="'%'"]
  148 -> 164 [style=solid label="\"<<\""]
  148 -> 165 [style=solid label="\">>\""]
  148 -> 166 [style=solid label="'&'"]
  148 -> 195 [style=solid label="\")\""]
  148 -> 167 [style=dashed label="binary_op"]
  148 -> 168 [style=dashed label="rel_op"]
  148 -> 169 [style=dashed label="add_op"]
  148 -> 170 [style=dashed label="mul_op"]
  149 [label="State 149\n\l 66 add_op: '+' .\l"]
  149 -> "149R66" [style=solid]
 "149R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 67 add_op: '-' .\l"]
  150 -> "150R67" [style=solid]
 "150R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 70 mul_op: '*' .\l"]
  151 -> "151R70" [style=solid]
 "151R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 71 mul_op: '/' .\l"]
  152 -> "152R71" [style=solid]
 "152R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 55 binary_op: \"||\" .\l"]
  153 -> "153R55" [style=solid]
 "153R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 56 binary_op: \"&&\" .\l"]
  154 -> "154R56" [style=solid]
 "154R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 60 rel_op: \"==\" .\l"]
  155 -> "155R60" [style=solid]
 "155R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 61 rel_op: \"!=\" .\l"]
  156 -> "156R61" [style=solid]
 "156R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 62 rel_op: '<' .\l"]
  157 -> "157R62" [style=solid]
 "157R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 63 rel_op: \"<=\" .\l"]
  158 -> "158R63" [style=solid]
 "158R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 64 rel_op: '>' .\l"]
  159 -> "159R64" [style=solid]
 "159R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 65 rel_op: \">=\" .\l"]
  160 -> "160R65" [style=solid]
 "160R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 68 add_op: '|' .\l"]
  161 -> "161R68" [style=solid]
 "161R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 69 add_op: '^' .\l"]
  162 -> "162R69" [style=solid]
 "162R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 72 mul_op: '%' .\l"]
  163 -> "163R72" [style=solid]
 "163R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 73 mul_op: \"<<\" .\l"]
  164 -> "164R73" [style=solid]
 "164R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 74 mul_op: \">>\" .\l"]
  165 -> "165R74" [style=solid]
 "165R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l 75 mul_op: '&' .\l"]
  166 -> "166R75" [style=solid]
 "166R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 52 Expression: Expression binary_op . Expression\l"]
  167 -> 88 [style=solid label="FUNC"]
  167 -> 50 [style=solid label="STRUCT"]
  167 -> 89 [style=solid label="ID"]
  167 -> 90 [style=solid label="STRING_LIT"]
  167 -> 91 [style=solid label="BINARY_LIT"]
  167 -> 92 [style=solid label="HEX_LIT"]
  167 -> 93 [style=solid label="FLOAT_LIT"]
  167 -> 94 [style=solid label="DEC_LIT"]
  167 -> 95 [style=solid label="'+'"]
  167 -> 96 [style=solid label="'-'"]
  167 -> 97 [style=solid label="'*'"]
  167 -> 98 [style=solid label="'^'"]
  167 -> 99 [style=solid label="'&'"]
  167 -> 100 [style=solid label="'!'"]
  167 -> 101 [style=solid label="'['"]
  167 -> 102 [style=solid label="\"(\""]
  167 -> 56 [style=dashed label="PackageName"]
  167 -> 196 [style=dashed label="Expression"]
  167 -> 104 [style=dashed label="UnaryExpr"]
  167 -> 105 [style=dashed label="unary_op"]
  167 -> 106 [style=dashed label="PrimaryExpr"]
  167 -> 107 [style=dashed label="Operand"]
  167 -> 108 [style=dashed label="Literal"]
  167 -> 109 [style=dashed label="INT_LIT"]
  167 -> 110 [style=dashed label="BasicLit"]
  167 -> 111 [style=dashed label="OperandName"]
  167 -> 112 [style=dashed label="QualifiedIdent"]
  167 -> 113 [style=dashed label="CompositeLit"]
  167 -> 114 [style=dashed label="LiteralType"]
  167 -> 115 [style=dashed label="FunctionLit"]
  167 -> 116 [style=dashed label="TypeName"]
  167 -> 117 [style=dashed label="ArrayType"]
  167 -> 119 [style=dashed label="StructType"]
  168 [label="State 168\n\l 57 binary_op: rel_op .\l"]
  168 -> "168R57" [style=solid]
 "168R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 58 binary_op: add_op .\l"]
  169 -> "169R58" [style=solid]
 "169R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 59 binary_op: mul_op .\l"]
  170 -> "170R59" [style=solid]
 "170R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  171 [label="State 171\n\l 54 UnaryExpr: unary_op UnaryExpr .\l"]
  171 -> "171R54" [style=solid]
 "171R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 88 Arguments: '(' . ')'\l 89          | '(' . ArgumentInBracket ')'\l"]
  172 -> 197 [style=solid label="FUNC"]
  172 -> 50 [style=solid label="STRUCT"]
  172 -> 89 [style=solid label="ID"]
  172 -> 90 [style=solid label="STRING_LIT"]
  172 -> 91 [style=solid label="BINARY_LIT"]
  172 -> 92 [style=solid label="HEX_LIT"]
  172 -> 93 [style=solid label="FLOAT_LIT"]
  172 -> 94 [style=solid label="DEC_LIT"]
  172 -> 95 [style=solid label="'+'"]
  172 -> 96 [style=solid label="'-'"]
  172 -> 198 [style=solid label="'*'"]
  172 -> 75 [style=solid label="'('"]
  172 -> 199 [style=solid label="')'"]
  172 -> 98 [style=solid label="'^'"]
  172 -> 99 [style=solid label="'&'"]
  172 -> 100 [style=solid label="'!'"]
  172 -> 101 [style=solid label="'['"]
  172 -> 102 [style=solid label="\"(\""]
  172 -> 56 [style=dashed label="PackageName"]
  172 -> 200 [style=dashed label="ExpressionList"]
  172 -> 137 [style=dashed label="Expression"]
  172 -> 104 [style=dashed label="UnaryExpr"]
  172 -> 105 [style=dashed label="unary_op"]
  172 -> 106 [style=dashed label="PrimaryExpr"]
  172 -> 201 [style=dashed label="ArgumentInBracket"]
  172 -> 202 [style=dashed label="ArgumentInBracketFirst"]
  172 -> 107 [style=dashed label="Operand"]
  172 -> 108 [style=dashed label="Literal"]
  172 -> 109 [style=dashed label="INT_LIT"]
  172 -> 110 [style=dashed label="BasicLit"]
  172 -> 111 [style=dashed label="OperandName"]
  172 -> 112 [style=dashed label="QualifiedIdent"]
  172 -> 113 [style=dashed label="CompositeLit"]
  172 -> 114 [style=dashed label="LiteralType"]
  172 -> 115 [style=dashed label="FunctionLit"]
  172 -> 203 [style=dashed label="Type"]
  172 -> 204 [style=dashed label="TypeName"]
  172 -> 65 [style=dashed label="TypeLit"]
  172 -> 205 [style=dashed label="ArrayType"]
  172 -> 206 [style=dashed label="StructType"]
  172 -> 68 [style=dashed label="PointerType"]
  172 -> 69 [style=dashed label="FunctionType"]
  173 [label="State 173\n\l 86 Selector: '.' . ID\l"]
  173 -> 207 [style=solid label="ID"]
  174 [label="State 174\n\l 87 Index: '[' . Expression ']'\l"]
  174 -> 88 [style=solid label="FUNC"]
  174 -> 50 [style=solid label="STRUCT"]
  174 -> 89 [style=solid label="ID"]
  174 -> 90 [style=solid label="STRING_LIT"]
  174 -> 91 [style=solid label="BINARY_LIT"]
  174 -> 92 [style=solid label="HEX_LIT"]
  174 -> 93 [style=solid label="FLOAT_LIT"]
  174 -> 94 [style=solid label="DEC_LIT"]
  174 -> 95 [style=solid label="'+'"]
  174 -> 96 [style=solid label="'-'"]
  174 -> 97 [style=solid label="'*'"]
  174 -> 98 [style=solid label="'^'"]
  174 -> 99 [style=solid label="'&'"]
  174 -> 100 [style=solid label="'!'"]
  174 -> 101 [style=solid label="'['"]
  174 -> 102 [style=solid label="\"(\""]
  174 -> 56 [style=dashed label="PackageName"]
  174 -> 208 [style=dashed label="Expression"]
  174 -> 104 [style=dashed label="UnaryExpr"]
  174 -> 105 [style=dashed label="unary_op"]
  174 -> 106 [style=dashed label="PrimaryExpr"]
  174 -> 107 [style=dashed label="Operand"]
  174 -> 108 [style=dashed label="Literal"]
  174 -> 109 [style=dashed label="INT_LIT"]
  174 -> 110 [style=dashed label="BasicLit"]
  174 -> 111 [style=dashed label="OperandName"]
  174 -> 112 [style=dashed label="QualifiedIdent"]
  174 -> 113 [style=dashed label="CompositeLit"]
  174 -> 114 [style=dashed label="LiteralType"]
  174 -> 115 [style=dashed label="FunctionLit"]
  174 -> 116 [style=dashed label="TypeName"]
  174 -> 117 [style=dashed label="ArrayType"]
  174 -> 119 [style=dashed label="StructType"]
  175 [label="State 175\n\l 84 PrimaryExpr: PrimaryExpr Selector .\l"]
  175 -> "175R84" [style=solid]
 "175R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l 83 PrimaryExpr: PrimaryExpr Index .\l"]
  176 -> "176R83" [style=solid]
 "176R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 85 PrimaryExpr: PrimaryExpr Arguments .\l"]
  177 -> "177R85" [style=solid]
 "177R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l118 LiteralValue: '{' . '}'\l119             | '{' . ElementList '}'\l120             | '{' . ElementList ',' '}'\l"]
  178 -> 88 [style=solid label="FUNC"]
  178 -> 50 [style=solid label="STRUCT"]
  178 -> 209 [style=solid label="ID"]
  178 -> 90 [style=solid label="STRING_LIT"]
  178 -> 91 [style=solid label="BINARY_LIT"]
  178 -> 92 [style=solid label="HEX_LIT"]
  178 -> 93 [style=solid label="FLOAT_LIT"]
  178 -> 94 [style=solid label="DEC_LIT"]
  178 -> 95 [style=solid label="'+'"]
  178 -> 96 [style=solid label="'-'"]
  178 -> 97 [style=solid label="'*'"]
  178 -> 98 [style=solid label="'^'"]
  178 -> 99 [style=solid label="'&'"]
  178 -> 100 [style=solid label="'!'"]
  178 -> 101 [style=solid label="'['"]
  178 -> 102 [style=solid label="\"(\""]
  178 -> 178 [style=solid label="'{'"]
  178 -> 210 [style=solid label="'}'"]
  178 -> 56 [style=dashed label="PackageName"]
  178 -> 211 [style=dashed label="Expression"]
  178 -> 104 [style=dashed label="UnaryExpr"]
  178 -> 105 [style=dashed label="unary_op"]
  178 -> 106 [style=dashed label="PrimaryExpr"]
  178 -> 107 [style=dashed label="Operand"]
  178 -> 108 [style=dashed label="Literal"]
  178 -> 109 [style=dashed label="INT_LIT"]
  178 -> 110 [style=dashed label="BasicLit"]
  178 -> 111 [style=dashed label="OperandName"]
  178 -> 112 [style=dashed label="QualifiedIdent"]
  178 -> 113 [style=dashed label="CompositeLit"]
  178 -> 114 [style=dashed label="LiteralType"]
  178 -> 212 [style=dashed label="LiteralValue"]
  178 -> 213 [style=dashed label="ElementList"]
  178 -> 214 [style=dashed label="KeyedElement"]
  178 -> 215 [style=dashed label="Key"]
  178 -> 216 [style=dashed label="FieldName"]
  178 -> 217 [style=dashed label="Element"]
  178 -> 115 [style=dashed label="FunctionLit"]
  178 -> 116 [style=dashed label="TypeName"]
  178 -> 117 [style=dashed label="ArrayType"]
  178 -> 119 [style=dashed label="StructType"]
  179 [label="State 179\n\l113 CompositeLit: LiteralType LiteralValue .\l"]
  179 -> "179R113" [style=solid]
 "179R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l212 ArrayType: '[' ArrayLength ']' . ElementType\l"]
  180 -> 49 [style=solid label="FUNC"]
  180 -> 50 [style=solid label="STRUCT"]
  180 -> 74 [style=solid label="ID"]
  180 -> 53 [style=solid label="'*'"]
  180 -> 75 [style=solid label="'('"]
  180 -> 55 [style=solid label="'['"]
  180 -> 56 [style=dashed label="PackageName"]
  180 -> 58 [style=dashed label="QualifiedIdent"]
  180 -> 218 [style=dashed label="Type"]
  180 -> 64 [style=dashed label="TypeName"]
  180 -> 65 [style=dashed label="TypeLit"]
  180 -> 66 [style=dashed label="ArrayType"]
  180 -> 219 [style=dashed label="ElementType"]
  180 -> 67 [style=dashed label="StructType"]
  180 -> 68 [style=dashed label="PointerType"]
  180 -> 69 [style=dashed label="FunctionType"]
  181 [label="State 181\n\l112 QualifiedIdent: PackageName '.' ID .\l"]
  181 -> "181R112" [style=solid]
 "181R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l232 ParameterDecl: IdentifierList ELIPSIS Type .\l"]
  182 -> "182R232" [style=solid]
 "182R232" [label="R232", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 28 STAR_Statement_SC: STAR_Statement_SC . Statement ';'\l137 Block: '{' STAR_Statement_SC . '}'\l"]
  183 -> 220 [style=solid label="BREAK"]
  183 -> 88 [style=solid label="FUNC"]
  183 -> 50 [style=solid label="STRUCT"]
  183 -> 221 [style=solid label="RETURN"]
  183 -> 222 [style=solid label="GOTO"]
  183 -> 20 [style=solid label="CONST"]
  183 -> 223 [style=solid label="IF"]
  183 -> 224 [style=solid label="CONTINUE"]
  183 -> 225 [style=solid label="FOR"]
  183 -> 226 [style=solid label="ID"]
  183 -> 21 [style=solid label="VAR"]
  183 -> 90 [style=solid label="STRING_LIT"]
  183 -> 91 [style=solid label="BINARY_LIT"]
  183 -> 92 [style=solid label="HEX_LIT"]
  183 -> 93 [style=solid label="FLOAT_LIT"]
  183 -> 94 [style=solid label="DEC_LIT"]
  183 -> 227 [style=solid label="GO"]
  183 -> 228 [style=solid label="FALLTHROUGH"]
  183 -> 22 [style=solid label="TYPE_TOK"]
  183 -> 95 [style=solid label="'+'"]
  183 -> 96 [style=solid label="'-'"]
  183 -> 97 [style=solid label="'*'"]
  183 -> 98 [style=solid label="'^'"]
  183 -> 99 [style=solid label="'&'"]
  183 -> 100 [style=solid label="'!'"]
  183 -> 101 [style=solid label="'['"]
  183 -> 102 [style=solid label="\"(\""]
  183 -> 123 [style=solid label="'{'"]
  183 -> 229 [style=solid label="'}'"]
  183 -> 56 [style=dashed label="PackageName"]
  183 -> 230 [style=dashed label="Declaration"]
  183 -> 25 [style=dashed label="ConstDecl"]
  183 -> 26 [style=dashed label="TypeDecl"]
  183 -> 27 [style=dashed label="VarDecl"]
  183 -> 231 [style=dashed label="ExpressionList"]
  183 -> 232 [style=dashed label="Expression"]
  183 -> 104 [style=dashed label="UnaryExpr"]
  183 -> 105 [style=dashed label="unary_op"]
  183 -> 106 [style=dashed label="PrimaryExpr"]
  183 -> 107 [style=dashed label="Operand"]
  183 -> 108 [style=dashed label="Literal"]
  183 -> 109 [style=dashed label="INT_LIT"]
  183 -> 110 [style=dashed label="BasicLit"]
  183 -> 111 [style=dashed label="OperandName"]
  183 -> 112 [style=dashed label="QualifiedIdent"]
  183 -> 113 [style=dashed label="CompositeLit"]
  183 -> 114 [style=dashed label="LiteralType"]
  183 -> 115 [style=dashed label="FunctionLit"]
  183 -> 233 [style=dashed label="Block"]
  183 -> 234 [style=dashed label="Statement"]
  183 -> 235 [style=dashed label="LabeledStmt"]
  183 -> 236 [style=dashed label="Label"]
  183 -> 237 [style=dashed label="SimpleStmt"]
  183 -> 238 [style=dashed label="EmptyStmt"]
  183 -> 239 [style=dashed label="ExpressionStmt"]
  183 -> 240 [style=dashed label="IncDecStmt"]
  183 -> 241 [style=dashed label="Assignment"]
  183 -> 242 [style=dashed label="IfStmt"]
  183 -> 243 [style=dashed label="ForStmt"]
  183 -> 244 [style=dashed label="GoStmt"]
  183 -> 245 [style=dashed label="ReturnStmt"]
  183 -> 246 [style=dashed label="BreakStmt"]
  183 -> 247 [style=dashed label="ContinueStmt"]
  183 -> 248 [style=dashed label="GotoStmt"]
  183 -> 249 [style=dashed label="FallthroughStmt"]
  183 -> 116 [style=dashed label="TypeName"]
  183 -> 117 [style=dashed label="ArrayType"]
  183 -> 119 [style=dashed label="StructType"]
  183 -> "183R166" [style=solid]
 "183R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  184 [label="State 184\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' . ParameterDecl\l"]
  184 -> 49 [style=solid label="FUNC"]
  184 -> 50 [style=solid label="STRUCT"]
  184 -> 51 [style=solid label="ID"]
  184 -> 52 [style=solid label="ELIPSIS"]
  184 -> 53 [style=solid label="'*'"]
  184 -> 75 [style=solid label="'('"]
  184 -> 55 [style=solid label="'['"]
  184 -> 56 [style=dashed label="PackageName"]
  184 -> 57 [style=dashed label="IdentifierList"]
  184 -> 58 [style=dashed label="QualifiedIdent"]
  184 -> 250 [style=dashed label="ParameterDecl"]
  184 -> 63 [style=dashed label="Type"]
  184 -> 64 [style=dashed label="TypeName"]
  184 -> 65 [style=dashed label="TypeLit"]
  184 -> 66 [style=dashed label="ArrayType"]
  184 -> 67 [style=dashed label="StructType"]
  184 -> 68 [style=dashed label="PointerType"]
  184 -> 69 [style=dashed label="FunctionType"]
  185 [label="State 185\n\l 18 STAR_CM_ID: STAR_CM_ID ',' ID .\l"]
  185 -> "185R18" [style=solid]
 "185R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec ';' .\l"]
  186 -> "186R20" [style=solid]
 "186R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec ';' .\l"]
  187 -> "187R22" [style=solid]
 "187R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l 24 STAR_CM_EXP: STAR_CM_EXP . ',' Expression\l 50 ExpressionList: Expression STAR_CM_EXP .\l"]
  188 -> 251 [style=solid label="','"]
  188 -> "188R50d" [label="[',']", style=solid]
 "188R50d" [label="R50", fillcolor=5, shape=diamond, style=filled]
  188 -> "188R50" [style=solid]
 "188R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  189 [label="State 189\n\l215 StructType: STRUCT '{' STAR_FieldDecl_SC '}' .\l"]
  189 -> "189R215" [style=solid]
 "189R215" [label="R215", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l216 FieldDecl: IdentifierList . Type Tag\l217          | IdentifierList . Type\l"]
  190 -> 49 [style=solid label="FUNC"]
  190 -> 50 [style=solid label="STRUCT"]
  190 -> 74 [style=solid label="ID"]
  190 -> 53 [style=solid label="'*'"]
  190 -> 75 [style=solid label="'('"]
  190 -> 55 [style=solid label="'['"]
  190 -> 56 [style=dashed label="PackageName"]
  190 -> 58 [style=dashed label="QualifiedIdent"]
  190 -> 252 [style=dashed label="Type"]
  190 -> 64 [style=dashed label="TypeName"]
  190 -> 65 [style=dashed label="TypeLit"]
  190 -> 66 [style=dashed label="ArrayType"]
  190 -> 67 [style=dashed label="StructType"]
  190 -> 68 [style=dashed label="PointerType"]
  190 -> 69 [style=dashed label="FunctionType"]
  191 [label="State 191\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl . ';'\l"]
  191 -> 253 [style=solid label="';'"]
  192 [label="State 192\n\l144 Parameters: '(' ParameterList ',' ')' .\l"]
  192 -> "192R144" [style=solid]
 "192R144" [label="R144", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l132 FunctionLit: FUNC Signature FunctionBody .\l"]
  193 -> "193R132" [style=solid]
 "193R132" [label="R132", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l116 LiteralType: '[' ELIPSIS ']' . ElementType\l"]
  194 -> 49 [style=solid label="FUNC"]
  194 -> 50 [style=solid label="STRUCT"]
  194 -> 74 [style=solid label="ID"]
  194 -> 53 [style=solid label="'*'"]
  194 -> 75 [style=solid label="'('"]
  194 -> 55 [style=solid label="'['"]
  194 -> 56 [style=dashed label="PackageName"]
  194 -> 58 [style=dashed label="QualifiedIdent"]
  194 -> 218 [style=dashed label="Type"]
  194 -> 64 [style=dashed label="TypeName"]
  194 -> 65 [style=dashed label="TypeLit"]
  194 -> 66 [style=dashed label="ArrayType"]
  194 -> 254 [style=dashed label="ElementType"]
  194 -> 67 [style=dashed label="StructType"]
  194 -> 68 [style=dashed label="PointerType"]
  194 -> 69 [style=dashed label="FunctionType"]
  195 [label="State 195\n\l100 Operand: \"(\" Expression \")\" .\l"]
  195 -> "195R100" [style=solid]
 "195R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l 52 Expression: Expression . binary_op Expression\l 52           | Expression binary_op Expression .\l"]
  196 -> 149 [style=solid label="'+'"]
  196 -> 150 [style=solid label="'-'"]
  196 -> 151 [style=solid label="'*'"]
  196 -> 152 [style=solid label="'/'"]
  196 -> 153 [style=solid label="\"||\""]
  196 -> 154 [style=solid label="\"&&\""]
  196 -> 155 [style=solid label="\"==\""]
  196 -> 156 [style=solid label="\"!=\""]
  196 -> 157 [style=solid label="'<'"]
  196 -> 158 [style=solid label="\"<=\""]
  196 -> 159 [style=solid label="'>'"]
  196 -> 160 [style=solid label="\">=\""]
  196 -> 161 [style=solid label="'|'"]
  196 -> 162 [style=solid label="'^'"]
  196 -> 163 [style=solid label="'%'"]
  196 -> 164 [style=solid label="\"<<\""]
  196 -> 165 [style=solid label="\">>\""]
  196 -> 166 [style=solid label="'&'"]
  196 -> 167 [style=dashed label="binary_op"]
  196 -> 168 [style=dashed label="rel_op"]
  196 -> 169 [style=dashed label="add_op"]
  196 -> 170 [style=dashed label="mul_op"]
  196 -> "196R52d" [label="['+', '-', '*', '/', \"||\", \"&&\", \"==\", \"!=\", '<', \"<=\", '>', \">=\", '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "196R52d" [label="R52", fillcolor=5, shape=diamond, style=filled]
  196 -> "196R52" [style=solid]
 "196R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  197 [label="State 197\n\l132 FunctionLit: FUNC . Signature FunctionBody\l221 FunctionType: FUNC . Signature\l"]
  197 -> 49 [style=solid label="FUNC"]
  197 -> 50 [style=solid label="STRUCT"]
  197 -> 51 [style=solid label="ID"]
  197 -> 52 [style=solid label="ELIPSIS"]
  197 -> 53 [style=solid label="'*'"]
  197 -> 54 [style=solid label="'('"]
  197 -> 55 [style=solid label="'['"]
  197 -> 56 [style=dashed label="PackageName"]
  197 -> 57 [style=dashed label="IdentifierList"]
  197 -> 58 [style=dashed label="QualifiedIdent"]
  197 -> 255 [style=dashed label="Signature"]
  197 -> 60 [style=dashed label="Parameters"]
  197 -> 61 [style=dashed label="ParameterList"]
  197 -> 62 [style=dashed label="ParameterDecl"]
  197 -> 63 [style=dashed label="Type"]
  197 -> 64 [style=dashed label="TypeName"]
  197 -> 65 [style=dashed label="TypeLit"]
  197 -> 66 [style=dashed label="ArrayType"]
  197 -> 67 [style=dashed label="StructType"]
  197 -> 68 [style=dashed label="PointerType"]
  197 -> 69 [style=dashed label="FunctionType"]
  198 [label="State 198\n\l 80 unary_op: '*' .\l219 PointerType: '*' . BaseType\l"]
  198 -> 49 [style=solid label="FUNC"]
  198 -> 50 [style=solid label="STRUCT"]
  198 -> 74 [style=solid label="ID"]
  198 -> 75 [style=solid label="'('"]
  198 -> 55 [style=solid label="'['"]
  198 -> 56 [style=dashed label="PackageName"]
  198 -> 58 [style=dashed label="QualifiedIdent"]
  198 -> 83 [style=dashed label="Type"]
  198 -> 64 [style=dashed label="TypeName"]
  198 -> 65 [style=dashed label="TypeLit"]
  198 -> 66 [style=dashed label="ArrayType"]
  198 -> 67 [style=dashed label="StructType"]
  198 -> 68 [style=dashed label="PointerType"]
  198 -> 84 [style=dashed label="BaseType"]
  198 -> 69 [style=dashed label="FunctionType"]
  198 -> "198R80d" [label="[FUNC, STRUCT, ID, '[']", style=solid]
 "198R80d" [label="R80", fillcolor=5, shape=diamond, style=filled]
  198 -> "198R80" [style=solid]
 "198R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  199 [label="State 199\n\l 88 Arguments: '(' ')' .\l"]
  199 -> "199R88" [style=solid]
 "199R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  200 [label="State 200\n\l 91 ArgumentInBracketFirst: ExpressionList .\l"]
  200 -> "200R91" [style=solid]
 "200R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  201 [label="State 201\n\l 89 Arguments: '(' ArgumentInBracket . ')'\l"]
  201 -> 256 [style=solid label="')'"]
  202 [label="State 202\n\l 90 ArgumentInBracket: ArgumentInBracketFirst . ArgumentInBracketEnd\l"]
  202 -> 257 [style=solid label="ELIPSIS"]
  202 -> 258 [style=solid label="','"]
  202 -> 259 [style=dashed label="ArgumentInBracketEnd"]
  202 -> "202R97" [style=solid]
 "202R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l 92 ArgumentInBracketFirst: Type .\l 93                       | Type . ',' ExpressionList\l"]
  203 -> 260 [style=solid label="','"]
  203 -> "203R92d" [label="[',']", style=solid]
 "203R92d" [label="R92", fillcolor=5, shape=diamond, style=filled]
  203 -> "203R92" [style=solid]
 "203R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  204 [label="State 204\n\l117 LiteralType: TypeName .\l203 Type: TypeName .\l"]
  204 -> "204R117" [label="['{']", style=solid]
 "204R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  204 -> "204R203" [style=solid]
 "204R203" [label="R203", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l115 LiteralType: ArrayType .\l208 TypeLit: ArrayType .\l"]
  205 -> "205R115" [label="['{']", style=solid]
 "205R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  205 -> "205R208" [style=solid]
 "205R208" [label="R208", fillcolor=3, shape=diamond, style=filled]
  206 [label="State 206\n\l114 LiteralType: StructType .\l209 TypeLit: StructType .\l"]
  206 -> "206R114" [label="['{']", style=solid]
 "206R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  206 -> "206R209" [style=solid]
 "206R209" [label="R209", fillcolor=3, shape=diamond, style=filled]
  207 [label="State 207\n\l 86 Selector: '.' ID .\l"]
  207 -> "207R86" [style=solid]
 "207R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l 52 Expression: Expression . binary_op Expression\l 87 Index: '[' Expression . ']'\l"]
  208 -> 149 [style=solid label="'+'"]
  208 -> 150 [style=solid label="'-'"]
  208 -> 151 [style=solid label="'*'"]
  208 -> 152 [style=solid label="'/'"]
  208 -> 153 [style=solid label="\"||\""]
  208 -> 154 [style=solid label="\"&&\""]
  208 -> 155 [style=solid label="\"==\""]
  208 -> 156 [style=solid label="\"!=\""]
  208 -> 157 [style=solid label="'<'"]
  208 -> 158 [style=solid label="\"<=\""]
  208 -> 159 [style=solid label="'>'"]
  208 -> 160 [style=solid label="\">=\""]
  208 -> 161 [style=solid label="'|'"]
  208 -> 162 [style=solid label="'^'"]
  208 -> 163 [style=solid label="'%'"]
  208 -> 164 [style=solid label="\"<<\""]
  208 -> 165 [style=solid label="\">>\""]
  208 -> 166 [style=solid label="'&'"]
  208 -> 261 [style=solid label="']'"]
  208 -> 167 [style=dashed label="binary_op"]
  208 -> 168 [style=dashed label="rel_op"]
  208 -> 169 [style=dashed label="add_op"]
  208 -> 170 [style=dashed label="mul_op"]
  209 [label="State 209\n\l  3 PackageName: ID .\l110 OperandName: ID .\l129 FieldName: ID .\l206 TypeName: ID .\l"]
  209 -> "209R3" [label="['.']", style=solid]
 "209R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  209 -> "209R110d" [label="['.']", style=solid]
 "209R110d" [label="R110", fillcolor=5, shape=diamond, style=filled]
  209 -> "209R110" [style=solid]
 "209R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  209 -> "209R129d" [label="[':']", style=solid]
 "209R129d" [label="R129", fillcolor=5, shape=diamond, style=filled]
  209 -> "209R206" [label="['{']", style=solid]
 "209R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  210 [label="State 210\n\l118 LiteralValue: '{' '}' .\l"]
  210 -> "210R118" [style=solid]
 "210R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  211 [label="State 211\n\l 52 Expression: Expression . binary_op Expression\l127 Key: Expression .\l130 Element: Expression .\l"]
  211 -> 149 [style=solid label="'+'"]
  211 -> 150 [style=solid label="'-'"]
  211 -> 151 [style=solid label="'*'"]
  211 -> 152 [style=solid label="'/'"]
  211 -> 153 [style=solid label="\"||\""]
  211 -> 154 [style=solid label="\"&&\""]
  211 -> 155 [style=solid label="\"==\""]
  211 -> 156 [style=solid label="\"!=\""]
  211 -> 157 [style=solid label="'<'"]
  211 -> 158 [style=solid label="\"<=\""]
  211 -> 159 [style=solid label="'>'"]
  211 -> 160 [style=solid label="\">=\""]
  211 -> 161 [style=solid label="'|'"]
  211 -> 162 [style=solid label="'^'"]
  211 -> 163 [style=solid label="'%'"]
  211 -> 164 [style=solid label="\"<<\""]
  211 -> 165 [style=solid label="\">>\""]
  211 -> 166 [style=solid label="'&'"]
  211 -> 167 [style=dashed label="binary_op"]
  211 -> 168 [style=dashed label="rel_op"]
  211 -> 169 [style=dashed label="add_op"]
  211 -> 170 [style=dashed label="mul_op"]
  211 -> "211R127" [label="[':']", style=solid]
 "211R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  211 -> "211R130" [style=solid]
 "211R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  212 [label="State 212\n\l128 Key: LiteralValue .\l131 Element: LiteralValue .\l"]
  212 -> "212R128" [label="[':']", style=solid]
 "212R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  212 -> "212R131" [style=solid]
 "212R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  213 [label="State 213\n\l119 LiteralValue: '{' ElementList . '}'\l120             | '{' ElementList . ',' '}'\l"]
  213 -> 262 [style=solid label="','"]
  213 -> 263 [style=solid label="'}'"]
  214 [label="State 214\n\l121 ElementList: KeyedElement . STAR_CM_KeyedElement\l"]
  214 -> 264 [style=dashed label="STAR_CM_KeyedElement"]
  214 -> "214R123" [style=solid]
 "214R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l124 KeyedElement: Key . ':' Element\l"]
  215 -> 265 [style=solid label="':'"]
  216 [label="State 216\n\l126 Key: FieldName .\l"]
  216 -> "216R126" [style=solid]
 "216R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  217 [label="State 217\n\l125 KeyedElement: Element .\l"]
  217 -> "217R125" [style=solid]
 "217R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  218 [label="State 218\n\l214 ElementType: Type .\l"]
  218 -> "218R214" [style=solid]
 "218R214" [label="R214", fillcolor=3, shape=diamond, style=filled]
  219 [label="State 219\n\l212 ArrayType: '[' ArrayLength ']' ElementType .\l"]
  219 -> "219R212" [style=solid]
 "219R212" [label="R212", fillcolor=3, shape=diamond, style=filled]
  220 [label="State 220\n\l197 BreakStmt: BREAK . Label\l198          | BREAK .\l"]
  220 -> 266 [style=solid label="ID"]
  220 -> 267 [style=dashed label="Label"]
  220 -> "220R198" [style=solid]
 "220R198" [label="R198", fillcolor=3, shape=diamond, style=filled]
  221 [label="State 221\n\l195 ReturnStmt: RETURN . ExpressionList\l196           | RETURN .\l"]
  221 -> 88 [style=solid label="FUNC"]
  221 -> 50 [style=solid label="STRUCT"]
  221 -> 89 [style=solid label="ID"]
  221 -> 90 [style=solid label="STRING_LIT"]
  221 -> 91 [style=solid label="BINARY_LIT"]
  221 -> 92 [style=solid label="HEX_LIT"]
  221 -> 93 [style=solid label="FLOAT_LIT"]
  221 -> 94 [style=solid label="DEC_LIT"]
  221 -> 95 [style=solid label="'+'"]
  221 -> 96 [style=solid label="'-'"]
  221 -> 97 [style=solid label="'*'"]
  221 -> 98 [style=solid label="'^'"]
  221 -> 99 [style=solid label="'&'"]
  221 -> 100 [style=solid label="'!'"]
  221 -> 101 [style=solid label="'['"]
  221 -> 102 [style=solid label="\"(\""]
  221 -> 56 [style=dashed label="PackageName"]
  221 -> 268 [style=dashed label="ExpressionList"]
  221 -> 137 [style=dashed label="Expression"]
  221 -> 104 [style=dashed label="UnaryExpr"]
  221 -> 105 [style=dashed label="unary_op"]
  221 -> 106 [style=dashed label="PrimaryExpr"]
  221 -> 107 [style=dashed label="Operand"]
  221 -> 108 [style=dashed label="Literal"]
  221 -> 109 [style=dashed label="INT_LIT"]
  221 -> 110 [style=dashed label="BasicLit"]
  221 -> 111 [style=dashed label="OperandName"]
  221 -> 112 [style=dashed label="QualifiedIdent"]
  221 -> 113 [style=dashed label="CompositeLit"]
  221 -> 114 [style=dashed label="LiteralType"]
  221 -> 115 [style=dashed label="FunctionLit"]
  221 -> 116 [style=dashed label="TypeName"]
  221 -> 117 [style=dashed label="ArrayType"]
  221 -> 119 [style=dashed label="StructType"]
  221 -> "221R196" [style=solid]
 "221R196" [label="R196", fillcolor=3, shape=diamond, style=filled]
  222 [label="State 222\n\l201 GotoStmt: GOTO . Label\l"]
  222 -> 266 [style=solid label="ID"]
  222 -> 269 [style=dashed label="Label"]
  223 [label="State 223\n\l173 IfStmt: IF . Expression Block\l174       | IF . SimpleStmt ';' Expression Block\l175       | IF . SimpleStmt ';' Expression Block ELSE Block\l176       | IF . SimpleStmt ';' Expression Block ELSE IfStmt\l"]
  223 -> 88 [style=solid label="FUNC"]
  223 -> 50 [style=solid label="STRUCT"]
  223 -> 89 [style=solid label="ID"]
  223 -> 90 [style=solid label="STRING_LIT"]
  223 -> 91 [style=solid label="BINARY_LIT"]
  223 -> 92 [style=solid label="HEX_LIT"]
  223 -> 93 [style=solid label="FLOAT_LIT"]
  223 -> 94 [style=solid label="DEC_LIT"]
  223 -> 95 [style=solid label="'+'"]
  223 -> 96 [style=solid label="'-'"]
  223 -> 97 [style=solid label="'*'"]
  223 -> 98 [style=solid label="'^'"]
  223 -> 99 [style=solid label="'&'"]
  223 -> 100 [style=solid label="'!'"]
  223 -> 101 [style=solid label="'['"]
  223 -> 102 [style=solid label="\"(\""]
  223 -> 56 [style=dashed label="PackageName"]
  223 -> 231 [style=dashed label="ExpressionList"]
  223 -> 270 [style=dashed label="Expression"]
  223 -> 104 [style=dashed label="UnaryExpr"]
  223 -> 105 [style=dashed label="unary_op"]
  223 -> 106 [style=dashed label="PrimaryExpr"]
  223 -> 107 [style=dashed label="Operand"]
  223 -> 108 [style=dashed label="Literal"]
  223 -> 109 [style=dashed label="INT_LIT"]
  223 -> 110 [style=dashed label="BasicLit"]
  223 -> 111 [style=dashed label="OperandName"]
  223 -> 112 [style=dashed label="QualifiedIdent"]
  223 -> 113 [style=dashed label="CompositeLit"]
  223 -> 114 [style=dashed label="LiteralType"]
  223 -> 115 [style=dashed label="FunctionLit"]
  223 -> 271 [style=dashed label="SimpleStmt"]
  223 -> 238 [style=dashed label="EmptyStmt"]
  223 -> 239 [style=dashed label="ExpressionStmt"]
  223 -> 240 [style=dashed label="IncDecStmt"]
  223 -> 241 [style=dashed label="Assignment"]
  223 -> 116 [style=dashed label="TypeName"]
  223 -> 117 [style=dashed label="ArrayType"]
  223 -> 119 [style=dashed label="StructType"]
  223 -> "223R166" [style=solid]
 "223R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  224 [label="State 224\n\l199 ContinueStmt: CONTINUE . Label\l200             | CONTINUE .\l"]
  224 -> 266 [style=solid label="ID"]
  224 -> 272 [style=dashed label="Label"]
  224 -> "224R200" [style=solid]
 "224R200" [label="R200", fillcolor=3, shape=diamond, style=filled]
  225 [label="State 225\n\l177 ForStmt: FOR . Block\l178        | FOR . ForStmtAfter Block\l"]
  225 -> 88 [style=solid label="FUNC"]
  225 -> 50 [style=solid label="STRUCT"]
  225 -> 273 [style=solid label="RANGE"]
  225 -> 89 [style=solid label="ID"]
  225 -> 90 [style=solid label="STRING_LIT"]
  225 -> 91 [style=solid label="BINARY_LIT"]
  225 -> 92 [style=solid label="HEX_LIT"]
  225 -> 93 [style=solid label="FLOAT_LIT"]
  225 -> 94 [style=solid label="DEC_LIT"]
  225 -> 95 [style=solid label="'+'"]
  225 -> 96 [style=solid label="'-'"]
  225 -> 97 [style=solid label="'*'"]
  225 -> 98 [style=solid label="'^'"]
  225 -> 99 [style=solid label="'&'"]
  225 -> 100 [style=solid label="'!'"]
  225 -> 101 [style=solid label="'['"]
  225 -> 102 [style=solid label="\"(\""]
  225 -> 123 [style=solid label="'{'"]
  225 -> 56 [style=dashed label="PackageName"]
  225 -> 274 [style=dashed label="ExpressionList"]
  225 -> 275 [style=dashed label="Expression"]
  225 -> 104 [style=dashed label="UnaryExpr"]
  225 -> 105 [style=dashed label="unary_op"]
  225 -> 106 [style=dashed label="PrimaryExpr"]
  225 -> 107 [style=dashed label="Operand"]
  225 -> 108 [style=dashed label="Literal"]
  225 -> 109 [style=dashed label="INT_LIT"]
  225 -> 110 [style=dashed label="BasicLit"]
  225 -> 111 [style=dashed label="OperandName"]
  225 -> 112 [style=dashed label="QualifiedIdent"]
  225 -> 113 [style=dashed label="CompositeLit"]
  225 -> 114 [style=dashed label="LiteralType"]
  225 -> 115 [style=dashed label="FunctionLit"]
  225 -> 276 [style=dashed label="Block"]
  225 -> 277 [style=dashed label="SimpleStmt"]
  225 -> 238 [style=dashed label="EmptyStmt"]
  225 -> 239 [style=dashed label="ExpressionStmt"]
  225 -> 240 [style=dashed label="IncDecStmt"]
  225 -> 241 [style=dashed label="Assignment"]
  225 -> 278 [style=dashed label="ForStmtAfter"]
  225 -> 279 [style=dashed label="Condition"]
  225 -> 280 [style=dashed label="ForClause"]
  225 -> 281 [style=dashed label="OPT_InitStmt"]
  225 -> 282 [style=dashed label="InitStmt"]
  225 -> 283 [style=dashed label="RangeClause"]
  225 -> 116 [style=dashed label="TypeName"]
  225 -> 117 [style=dashed label="ArrayType"]
  225 -> 119 [style=dashed label="StructType"]
  225 -> "225R166" [style=solid]
 "225R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  225 -> "225R185d" [label="[';']", style=solid]
 "225R185d" [label="R185", fillcolor=5, shape=diamond, style=filled]
  226 [label="State 226\n\l  3 PackageName: ID .\l110 OperandName: ID .\l161 Label: ID .\l206 TypeName: ID .\l"]
  226 -> "226R3" [label="['.']", style=solid]
 "226R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  226 -> "226R110d" [label="['.']", style=solid]
 "226R110d" [label="R110", fillcolor=5, shape=diamond, style=filled]
  226 -> "226R110" [style=solid]
 "226R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  226 -> "226R161" [label="[':']", style=solid]
 "226R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  226 -> "226R206" [label="['{']", style=solid]
 "226R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  227 [label="State 227\n\l194 GoStmt: GO . Expression\l"]
  227 -> 88 [style=solid label="FUNC"]
  227 -> 50 [style=solid label="STRUCT"]
  227 -> 89 [style=solid label="ID"]
  227 -> 90 [style=solid label="STRING_LIT"]
  227 -> 91 [style=solid label="BINARY_LIT"]
  227 -> 92 [style=solid label="HEX_LIT"]
  227 -> 93 [style=solid label="FLOAT_LIT"]
  227 -> 94 [style=solid label="DEC_LIT"]
  227 -> 95 [style=solid label="'+'"]
  227 -> 96 [style=solid label="'-'"]
  227 -> 97 [style=solid label="'*'"]
  227 -> 98 [style=solid label="'^'"]
  227 -> 99 [style=solid label="'&'"]
  227 -> 100 [style=solid label="'!'"]
  227 -> 101 [style=solid label="'['"]
  227 -> 102 [style=solid label="\"(\""]
  227 -> 56 [style=dashed label="PackageName"]
  227 -> 284 [style=dashed label="Expression"]
  227 -> 104 [style=dashed label="UnaryExpr"]
  227 -> 105 [style=dashed label="unary_op"]
  227 -> 106 [style=dashed label="PrimaryExpr"]
  227 -> 107 [style=dashed label="Operand"]
  227 -> 108 [style=dashed label="Literal"]
  227 -> 109 [style=dashed label="INT_LIT"]
  227 -> 110 [style=dashed label="BasicLit"]
  227 -> 111 [style=dashed label="OperandName"]
  227 -> 112 [style=dashed label="QualifiedIdent"]
  227 -> 113 [style=dashed label="CompositeLit"]
  227 -> 114 [style=dashed label="LiteralType"]
  227 -> 115 [style=dashed label="FunctionLit"]
  227 -> 116 [style=dashed label="TypeName"]
  227 -> 117 [style=dashed label="ArrayType"]
  227 -> 119 [style=dashed label="StructType"]
  228 [label="State 228\n\l202 FallthroughStmt: FALLTHROUGH .\l"]
  228 -> "228R202" [style=solid]
 "228R202" [label="R202", fillcolor=3, shape=diamond, style=filled]
  229 [label="State 229\n\l137 Block: '{' STAR_Statement_SC '}' .\l"]
  229 -> "229R137" [style=solid]
 "229R137" [label="R137", fillcolor=3, shape=diamond, style=filled]
  230 [label="State 230\n\l148 Statement: Declaration .\l"]
  230 -> "230R148" [style=solid]
 "230R148" [label="R148", fillcolor=3, shape=diamond, style=filled]
  231 [label="State 231\n\l170 Assignment: ExpressionList . assign_op ExpressionList\l"]
  231 -> 149 [style=solid label="'+'"]
  231 -> 150 [style=solid label="'-'"]
  231 -> 151 [style=solid label="'*'"]
  231 -> 152 [style=solid label="'/'"]
  231 -> 161 [style=solid label="'|'"]
  231 -> 162 [style=solid label="'^'"]
  231 -> 163 [style=solid label="'%'"]
  231 -> 164 [style=solid label="\"<<\""]
  231 -> 165 [style=solid label="\">>\""]
  231 -> 166 [style=solid label="'&'"]
  231 -> 285 [style=dashed label="add_op"]
  231 -> 286 [style=dashed label="mul_op"]
  231 -> 287 [style=dashed label="assign_op"]
  232 [label="State 232\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l167 ExpressionStmt: Expression .\l168 IncDecStmt: Expression . \"++\"\l169           | Expression . \"--\"\l"]
  232 -> 149 [style=solid label="'+'"]
  232 -> 150 [style=solid label="'-'"]
  232 -> 151 [style=solid label="'*'"]
  232 -> 152 [style=solid label="'/'"]
  232 -> 153 [style=solid label="\"||\""]
  232 -> 154 [style=solid label="\"&&\""]
  232 -> 155 [style=solid label="\"==\""]
  232 -> 156 [style=solid label="\"!=\""]
  232 -> 157 [style=solid label="'<'"]
  232 -> 158 [style=solid label="\"<=\""]
  232 -> 159 [style=solid label="'>'"]
  232 -> 160 [style=solid label="\">=\""]
  232 -> 161 [style=solid label="'|'"]
  232 -> 162 [style=solid label="'^'"]
  232 -> 163 [style=solid label="'%'"]
  232 -> 164 [style=solid label="\"<<\""]
  232 -> 165 [style=solid label="\">>\""]
  232 -> 166 [style=solid label="'&'"]
  232 -> 288 [style=solid label="\"++\""]
  232 -> 289 [style=solid label="\"--\""]
  232 -> 188 [style=dashed label="STAR_CM_EXP"]
  232 -> 167 [style=dashed label="binary_op"]
  232 -> 168 [style=dashed label="rel_op"]
  232 -> 169 [style=dashed label="add_op"]
  232 -> 170 [style=dashed label="mul_op"]
  232 -> "232R25d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "232R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  232 -> "232R25" [label="[',']", style=solid]
 "232R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  232 -> "232R167" [style=solid]
 "232R167" [label="R167", fillcolor=3, shape=diamond, style=filled]
  233 [label="State 233\n\l157 Statement: Block .\l"]
  233 -> "233R157" [style=solid]
 "233R157" [label="R157", fillcolor=3, shape=diamond, style=filled]
  234 [label="State 234\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement . ';'\l"]
  234 -> 290 [style=solid label="';'"]
  235 [label="State 235\n\l149 Statement: LabeledStmt .\l"]
  235 -> "235R149" [style=solid]
 "235R149" [label="R149", fillcolor=3, shape=diamond, style=filled]
  236 [label="State 236\n\l160 LabeledStmt: Label . ':' Statement\l"]
  236 -> 291 [style=solid label="':'"]
  237 [label="State 237\n\l150 Statement: SimpleStmt .\l"]
  237 -> "237R150" [style=solid]
 "237R150" [label="R150", fillcolor=3, shape=diamond, style=filled]
  238 [label="State 238\n\l162 SimpleStmt: EmptyStmt .\l"]
  238 -> "238R162" [style=solid]
 "238R162" [label="R162", fillcolor=3, shape=diamond, style=filled]
  239 [label="State 239\n\l163 SimpleStmt: ExpressionStmt .\l"]
  239 -> "239R163" [style=solid]
 "239R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  240 [label="State 240\n\l164 SimpleStmt: IncDecStmt .\l"]
  240 -> "240R164" [style=solid]
 "240R164" [label="R164", fillcolor=3, shape=diamond, style=filled]
  241 [label="State 241\n\l165 SimpleStmt: Assignment .\l"]
  241 -> "241R165" [style=solid]
 "241R165" [label="R165", fillcolor=3, shape=diamond, style=filled]
  242 [label="State 242\n\l158 Statement: IfStmt .\l"]
  242 -> "242R158" [style=solid]
 "242R158" [label="R158", fillcolor=3, shape=diamond, style=filled]
  243 [label="State 243\n\l159 Statement: ForStmt .\l"]
  243 -> "243R159" [style=solid]
 "243R159" [label="R159", fillcolor=3, shape=diamond, style=filled]
  244 [label="State 244\n\l151 Statement: GoStmt .\l"]
  244 -> "244R151" [style=solid]
 "244R151" [label="R151", fillcolor=3, shape=diamond, style=filled]
  245 [label="State 245\n\l152 Statement: ReturnStmt .\l"]
  245 -> "245R152" [style=solid]
 "245R152" [label="R152", fillcolor=3, shape=diamond, style=filled]
  246 [label="State 246\n\l153 Statement: BreakStmt .\l"]
  246 -> "246R153" [style=solid]
 "246R153" [label="R153", fillcolor=3, shape=diamond, style=filled]
  247 [label="State 247\n\l154 Statement: ContinueStmt .\l"]
  247 -> "247R154" [style=solid]
 "247R154" [label="R154", fillcolor=3, shape=diamond, style=filled]
  248 [label="State 248\n\l155 Statement: GotoStmt .\l"]
  248 -> "248R155" [style=solid]
 "248R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  249 [label="State 249\n\l156 Statement: FallthroughStmt .\l"]
  249 -> "249R156" [style=solid]
 "249R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  250 [label="State 250\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' ParameterDecl .\l"]
  250 -> "250R30" [style=solid]
 "250R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  251 [label="State 251\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' . Expression\l"]
  251 -> 88 [style=solid label="FUNC"]
  251 -> 50 [style=solid label="STRUCT"]
  251 -> 89 [style=solid label="ID"]
  251 -> 90 [style=solid label="STRING_LIT"]
  251 -> 91 [style=solid label="BINARY_LIT"]
  251 -> 92 [style=solid label="HEX_LIT"]
  251 -> 93 [style=solid label="FLOAT_LIT"]
  251 -> 94 [style=solid label="DEC_LIT"]
  251 -> 95 [style=solid label="'+'"]
  251 -> 96 [style=solid label="'-'"]
  251 -> 97 [style=solid label="'*'"]
  251 -> 98 [style=solid label="'^'"]
  251 -> 99 [style=solid label="'&'"]
  251 -> 100 [style=solid label="'!'"]
  251 -> 101 [style=solid label="'['"]
  251 -> 102 [style=solid label="\"(\""]
  251 -> 56 [style=dashed label="PackageName"]
  251 -> 292 [style=dashed label="Expression"]
  251 -> 104 [style=dashed label="UnaryExpr"]
  251 -> 105 [style=dashed label="unary_op"]
  251 -> 106 [style=dashed label="PrimaryExpr"]
  251 -> 107 [style=dashed label="Operand"]
  251 -> 108 [style=dashed label="Literal"]
  251 -> 109 [style=dashed label="INT_LIT"]
  251 -> 110 [style=dashed label="BasicLit"]
  251 -> 111 [style=dashed label="OperandName"]
  251 -> 112 [style=dashed label="QualifiedIdent"]
  251 -> 113 [style=dashed label="CompositeLit"]
  251 -> 114 [style=dashed label="LiteralType"]
  251 -> 115 [style=dashed label="FunctionLit"]
  251 -> 116 [style=dashed label="TypeName"]
  251 -> 117 [style=dashed label="ArrayType"]
  251 -> 119 [style=dashed label="StructType"]
  252 [label="State 252\n\l216 FieldDecl: IdentifierList Type . Tag\l217          | IdentifierList Type .\l"]
  252 -> 293 [style=solid label="STRING_LIT"]
  252 -> 294 [style=dashed label="Tag"]
  252 -> "252R217" [style=solid]
 "252R217" [label="R217", fillcolor=3, shape=diamond, style=filled]
  253 [label="State 253\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl ';' .\l"]
  253 -> "253R32" [style=solid]
 "253R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  254 [label="State 254\n\l116 LiteralType: '[' ELIPSIS ']' ElementType .\l"]
  254 -> "254R116" [style=solid]
 "254R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  255 [label="State 255\n\l132 FunctionLit: FUNC Signature . FunctionBody\l221 FunctionType: FUNC Signature .\l"]
  255 -> 123 [style=solid label="'{'"]
  255 -> 193 [style=dashed label="FunctionBody"]
  255 -> 125 [style=dashed label="Block"]
  255 -> "255R221" [style=solid]
 "255R221" [label="R221", fillcolor=3, shape=diamond, style=filled]
  256 [label="State 256\n\l 89 Arguments: '(' ArgumentInBracket ')' .\l"]
  256 -> "256R89" [style=solid]
 "256R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  257 [label="State 257\n\l 94 ArgumentInBracketEnd: ELIPSIS . ','\l 95                     | ELIPSIS .\l"]
  257 -> 295 [style=solid label="','"]
  257 -> "257R95" [style=solid]
 "257R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  258 [label="State 258\n\l 96 ArgumentInBracketEnd: ',' .\l"]
  258 -> "258R96" [style=solid]
 "258R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  259 [label="State 259\n\l 90 ArgumentInBracket: ArgumentInBracketFirst ArgumentInBracketEnd .\l"]
  259 -> "259R90" [style=solid]
 "259R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  260 [label="State 260\n\l 93 ArgumentInBracketFirst: Type ',' . ExpressionList\l"]
  260 -> 88 [style=solid label="FUNC"]
  260 -> 50 [style=solid label="STRUCT"]
  260 -> 89 [style=solid label="ID"]
  260 -> 90 [style=solid label="STRING_LIT"]
  260 -> 91 [style=solid label="BINARY_LIT"]
  260 -> 92 [style=solid label="HEX_LIT"]
  260 -> 93 [style=solid label="FLOAT_LIT"]
  260 -> 94 [style=solid label="DEC_LIT"]
  260 -> 95 [style=solid label="'+'"]
  260 -> 96 [style=solid label="'-'"]
  260 -> 97 [style=solid label="'*'"]
  260 -> 98 [style=solid label="'^'"]
  260 -> 99 [style=solid label="'&'"]
  260 -> 100 [style=solid label="'!'"]
  260 -> 101 [style=solid label="'['"]
  260 -> 102 [style=solid label="\"(\""]
  260 -> 56 [style=dashed label="PackageName"]
  260 -> 296 [style=dashed label="ExpressionList"]
  260 -> 137 [style=dashed label="Expression"]
  260 -> 104 [style=dashed label="UnaryExpr"]
  260 -> 105 [style=dashed label="unary_op"]
  260 -> 106 [style=dashed label="PrimaryExpr"]
  260 -> 107 [style=dashed label="Operand"]
  260 -> 108 [style=dashed label="Literal"]
  260 -> 109 [style=dashed label="INT_LIT"]
  260 -> 110 [style=dashed label="BasicLit"]
  260 -> 111 [style=dashed label="OperandName"]
  260 -> 112 [style=dashed label="QualifiedIdent"]
  260 -> 113 [style=dashed label="CompositeLit"]
  260 -> 114 [style=dashed label="LiteralType"]
  260 -> 115 [style=dashed label="FunctionLit"]
  260 -> 116 [style=dashed label="TypeName"]
  260 -> 117 [style=dashed label="ArrayType"]
  260 -> 119 [style=dashed label="StructType"]
  261 [label="State 261\n\l 87 Index: '[' Expression ']' .\l"]
  261 -> "261R87" [style=solid]
 "261R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  262 [label="State 262\n\l120 LiteralValue: '{' ElementList ',' . '}'\l"]
  262 -> 297 [style=solid label="'}'"]
  263 [label="State 263\n\l119 LiteralValue: '{' ElementList '}' .\l"]
  263 -> "263R119" [style=solid]
 "263R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  264 [label="State 264\n\l121 ElementList: KeyedElement STAR_CM_KeyedElement .\l122 STAR_CM_KeyedElement: STAR_CM_KeyedElement . ',' KeyedElement\l"]
  264 -> 298 [style=solid label="','"]
  264 -> "264R121d" [label="[',']", style=solid]
 "264R121d" [label="R121", fillcolor=5, shape=diamond, style=filled]
  264 -> "264R121" [style=solid]
 "264R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  265 [label="State 265\n\l124 KeyedElement: Key ':' . Element\l"]
  265 -> 88 [style=solid label="FUNC"]
  265 -> 50 [style=solid label="STRUCT"]
  265 -> 89 [style=solid label="ID"]
  265 -> 90 [style=solid label="STRING_LIT"]
  265 -> 91 [style=solid label="BINARY_LIT"]
  265 -> 92 [style=solid label="HEX_LIT"]
  265 -> 93 [style=solid label="FLOAT_LIT"]
  265 -> 94 [style=solid label="DEC_LIT"]
  265 -> 95 [style=solid label="'+'"]
  265 -> 96 [style=solid label="'-'"]
  265 -> 97 [style=solid label="'*'"]
  265 -> 98 [style=solid label="'^'"]
  265 -> 99 [style=solid label="'&'"]
  265 -> 100 [style=solid label="'!'"]
  265 -> 101 [style=solid label="'['"]
  265 -> 102 [style=solid label="\"(\""]
  265 -> 178 [style=solid label="'{'"]
  265 -> 56 [style=dashed label="PackageName"]
  265 -> 299 [style=dashed label="Expression"]
  265 -> 104 [style=dashed label="UnaryExpr"]
  265 -> 105 [style=dashed label="unary_op"]
  265 -> 106 [style=dashed label="PrimaryExpr"]
  265 -> 107 [style=dashed label="Operand"]
  265 -> 108 [style=dashed label="Literal"]
  265 -> 109 [style=dashed label="INT_LIT"]
  265 -> 110 [style=dashed label="BasicLit"]
  265 -> 111 [style=dashed label="OperandName"]
  265 -> 112 [style=dashed label="QualifiedIdent"]
  265 -> 113 [style=dashed label="CompositeLit"]
  265 -> 114 [style=dashed label="LiteralType"]
  265 -> 300 [style=dashed label="LiteralValue"]
  265 -> 301 [style=dashed label="Element"]
  265 -> 115 [style=dashed label="FunctionLit"]
  265 -> 116 [style=dashed label="TypeName"]
  265 -> 117 [style=dashed label="ArrayType"]
  265 -> 119 [style=dashed label="StructType"]
  266 [label="State 266\n\l161 Label: ID .\l"]
  266 -> "266R161" [style=solid]
 "266R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  267 [label="State 267\n\l197 BreakStmt: BREAK Label .\l"]
  267 -> "267R197" [style=solid]
 "267R197" [label="R197", fillcolor=3, shape=diamond, style=filled]
  268 [label="State 268\n\l195 ReturnStmt: RETURN ExpressionList .\l"]
  268 -> "268R195" [style=solid]
 "268R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  269 [label="State 269\n\l201 GotoStmt: GOTO Label .\l"]
  269 -> "269R201" [style=solid]
 "269R201" [label="R201", fillcolor=3, shape=diamond, style=filled]
  270 [label="State 270\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l167 ExpressionStmt: Expression .\l168 IncDecStmt: Expression . \"++\"\l169           | Expression . \"--\"\l173 IfStmt: IF Expression . Block\l"]
  270 -> 149 [style=solid label="'+'"]
  270 -> 150 [style=solid label="'-'"]
  270 -> 151 [style=solid label="'*'"]
  270 -> 152 [style=solid label="'/'"]
  270 -> 153 [style=solid label="\"||\""]
  270 -> 154 [style=solid label="\"&&\""]
  270 -> 155 [style=solid label="\"==\""]
  270 -> 156 [style=solid label="\"!=\""]
  270 -> 157 [style=solid label="'<'"]
  270 -> 158 [style=solid label="\"<=\""]
  270 -> 159 [style=solid label="'>'"]
  270 -> 160 [style=solid label="\">=\""]
  270 -> 161 [style=solid label="'|'"]
  270 -> 162 [style=solid label="'^'"]
  270 -> 163 [style=solid label="'%'"]
  270 -> 164 [style=solid label="\"<<\""]
  270 -> 165 [style=solid label="\">>\""]
  270 -> 166 [style=solid label="'&'"]
  270 -> 123 [style=solid label="'{'"]
  270 -> 288 [style=solid label="\"++\""]
  270 -> 289 [style=solid label="\"--\""]
  270 -> 188 [style=dashed label="STAR_CM_EXP"]
  270 -> 167 [style=dashed label="binary_op"]
  270 -> 168 [style=dashed label="rel_op"]
  270 -> 169 [style=dashed label="add_op"]
  270 -> 170 [style=dashed label="mul_op"]
  270 -> 302 [style=dashed label="Block"]
  270 -> "270R25d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "270R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  270 -> "270R25" [style=solid]
 "270R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  270 -> "270R167" [label="[';']", style=solid]
 "270R167" [label="R167", fillcolor=3, shape=diamond, style=filled]
  271 [label="State 271\n\l174 IfStmt: IF SimpleStmt . ';' Expression Block\l175       | IF SimpleStmt . ';' Expression Block ELSE Block\l176       | IF SimpleStmt . ';' Expression Block ELSE IfStmt\l"]
  271 -> 303 [style=solid label="';'"]
  272 [label="State 272\n\l199 ContinueStmt: CONTINUE Label .\l"]
  272 -> "272R199" [style=solid]
 "272R199" [label="R199", fillcolor=3, shape=diamond, style=filled]
  273 [label="State 273\n\l192 RangeClause: RANGE . Expression\l"]
  273 -> 88 [style=solid label="FUNC"]
  273 -> 50 [style=solid label="STRUCT"]
  273 -> 89 [style=solid label="ID"]
  273 -> 90 [style=solid label="STRING_LIT"]
  273 -> 91 [style=solid label="BINARY_LIT"]
  273 -> 92 [style=solid label="HEX_LIT"]
  273 -> 93 [style=solid label="FLOAT_LIT"]
  273 -> 94 [style=solid label="DEC_LIT"]
  273 -> 95 [style=solid label="'+'"]
  273 -> 96 [style=solid label="'-'"]
  273 -> 97 [style=solid label="'*'"]
  273 -> 98 [style=solid label="'^'"]
  273 -> 99 [style=solid label="'&'"]
  273 -> 100 [style=solid label="'!'"]
  273 -> 101 [style=solid label="'['"]
  273 -> 102 [style=solid label="\"(\""]
  273 -> 56 [style=dashed label="PackageName"]
  273 -> 304 [style=dashed label="Expression"]
  273 -> 104 [style=dashed label="UnaryExpr"]
  273 -> 105 [style=dashed label="unary_op"]
  273 -> 106 [style=dashed label="PrimaryExpr"]
  273 -> 107 [style=dashed label="Operand"]
  273 -> 108 [style=dashed label="Literal"]
  273 -> 109 [style=dashed label="INT_LIT"]
  273 -> 110 [style=dashed label="BasicLit"]
  273 -> 111 [style=dashed label="OperandName"]
  273 -> 112 [style=dashed label="QualifiedIdent"]
  273 -> 113 [style=dashed label="CompositeLit"]
  273 -> 114 [style=dashed label="LiteralType"]
  273 -> 115 [style=dashed label="FunctionLit"]
  273 -> 116 [style=dashed label="TypeName"]
  273 -> 117 [style=dashed label="ArrayType"]
  273 -> 119 [style=dashed label="StructType"]
  274 [label="State 274\n\l170 Assignment: ExpressionList . assign_op ExpressionList\l193 RangeClause: ExpressionList . '=' RANGE Expression\l"]
  274 -> 149 [style=solid label="'+'"]
  274 -> 150 [style=solid label="'-'"]
  274 -> 151 [style=solid label="'*'"]
  274 -> 152 [style=solid label="'/'"]
  274 -> 305 [style=solid label="'='"]
  274 -> 161 [style=solid label="'|'"]
  274 -> 162 [style=solid label="'^'"]
  274 -> 163 [style=solid label="'%'"]
  274 -> 164 [style=solid label="\"<<\""]
  274 -> 165 [style=solid label="\">>\""]
  274 -> 166 [style=solid label="'&'"]
  274 -> 285 [style=dashed label="add_op"]
  274 -> 286 [style=dashed label="mul_op"]
  274 -> 287 [style=dashed label="assign_op"]
  275 [label="State 275\n\l 50 ExpressionList: Expression . STAR_CM_EXP\l 52 Expression: Expression . binary_op Expression\l167 ExpressionStmt: Expression .\l168 IncDecStmt: Expression . \"++\"\l169           | Expression . \"--\"\l182 Condition: Expression .\l"]
  275 -> 149 [style=solid label="'+'"]
  275 -> 150 [style=solid label="'-'"]
  275 -> 151 [style=solid label="'*'"]
  275 -> 152 [style=solid label="'/'"]
  275 -> 153 [style=solid label="\"||\""]
  275 -> 154 [style=solid label="\"&&\""]
  275 -> 155 [style=solid label="\"==\""]
  275 -> 156 [style=solid label="\"!=\""]
  275 -> 157 [style=solid label="'<'"]
  275 -> 158 [style=solid label="\"<=\""]
  275 -> 159 [style=solid label="'>'"]
  275 -> 160 [style=solid label="\">=\""]
  275 -> 161 [style=solid label="'|'"]
  275 -> 162 [style=solid label="'^'"]
  275 -> 163 [style=solid label="'%'"]
  275 -> 164 [style=solid label="\"<<\""]
  275 -> 165 [style=solid label="\">>\""]
  275 -> 166 [style=solid label="'&'"]
  275 -> 288 [style=solid label="\"++\""]
  275 -> 289 [style=solid label="\"--\""]
  275 -> 188 [style=dashed label="STAR_CM_EXP"]
  275 -> 167 [style=dashed label="binary_op"]
  275 -> 168 [style=dashed label="rel_op"]
  275 -> 169 [style=dashed label="add_op"]
  275 -> 170 [style=dashed label="mul_op"]
  275 -> "275R25d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "275R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  275 -> "275R25" [style=solid]
 "275R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  275 -> "275R167" [label="[';']", style=solid]
 "275R167" [label="R167", fillcolor=3, shape=diamond, style=filled]
  275 -> "275R182" [label="['{']", style=solid]
 "275R182" [label="R182", fillcolor=3, shape=diamond, style=filled]
  276 [label="State 276\n\l177 ForStmt: FOR Block .\l"]
  276 -> "276R177" [style=solid]
 "276R177" [label="R177", fillcolor=3, shape=diamond, style=filled]
  277 [label="State 277\n\l190 InitStmt: SimpleStmt .\l"]
  277 -> "277R190" [style=solid]
 "277R190" [label="R190", fillcolor=3, shape=diamond, style=filled]
  278 [label="State 278\n\l178 ForStmt: FOR ForStmtAfter . Block\l"]
  278 -> 123 [style=solid label="'{'"]
  278 -> 306 [style=dashed label="Block"]
  279 [label="State 279\n\l179 ForStmtAfter: Condition .\l"]
  279 -> "279R179" [style=solid]
 "279R179" [label="R179", fillcolor=3, shape=diamond, style=filled]
  280 [label="State 280\n\l180 ForStmtAfter: ForClause .\l"]
  280 -> "280R180" [style=solid]
 "280R180" [label="R180", fillcolor=3, shape=diamond, style=filled]
  281 [label="State 281\n\l183 ForClause: OPT_InitStmt . ';' OPT_Condition ';' OPT_PostStmt\l"]
  281 -> 307 [style=solid label="';'"]
  282 [label="State 282\n\l184 OPT_InitStmt: InitStmt .\l"]
  282 -> "282R184" [style=solid]
 "282R184" [label="R184", fillcolor=3, shape=diamond, style=filled]
  283 [label="State 283\n\l181 ForStmtAfter: RangeClause .\l"]
  283 -> "283R181" [style=solid]
 "283R181" [label="R181", fillcolor=3, shape=diamond, style=filled]
  284 [label="State 284\n\l 52 Expression: Expression . binary_op Expression\l194 GoStmt: GO Expression .\l"]
  284 -> 149 [style=solid label="'+'"]
  284 -> 150 [style=solid label="'-'"]
  284 -> 151 [style=solid label="'*'"]
  284 -> 152 [style=solid label="'/'"]
  284 -> 153 [style=solid label="\"||\""]
  284 -> 154 [style=solid label="\"&&\""]
  284 -> 155 [style=solid label="\"==\""]
  284 -> 156 [style=solid label="\"!=\""]
  284 -> 157 [style=solid label="'<'"]
  284 -> 158 [style=solid label="\"<=\""]
  284 -> 159 [style=solid label="'>'"]
  284 -> 160 [style=solid label="\">=\""]
  284 -> 161 [style=solid label="'|'"]
  284 -> 162 [style=solid label="'^'"]
  284 -> 163 [style=solid label="'%'"]
  284 -> 164 [style=solid label="\"<<\""]
  284 -> 165 [style=solid label="\">>\""]
  284 -> 166 [style=solid label="'&'"]
  284 -> 167 [style=dashed label="binary_op"]
  284 -> 168 [style=dashed label="rel_op"]
  284 -> 169 [style=dashed label="add_op"]
  284 -> 170 [style=dashed label="mul_op"]
  284 -> "284R194" [style=solid]
 "284R194" [label="R194", fillcolor=3, shape=diamond, style=filled]
  285 [label="State 285\n\l171 assign_op: add_op . '='\l"]
  285 -> 308 [style=solid label="'='"]
  286 [label="State 286\n\l172 assign_op: mul_op . '='\l"]
  286 -> 309 [style=solid label="'='"]
  287 [label="State 287\n\l170 Assignment: ExpressionList assign_op . ExpressionList\l"]
  287 -> 88 [style=solid label="FUNC"]
  287 -> 50 [style=solid label="STRUCT"]
  287 -> 89 [style=solid label="ID"]
  287 -> 90 [style=solid label="STRING_LIT"]
  287 -> 91 [style=solid label="BINARY_LIT"]
  287 -> 92 [style=solid label="HEX_LIT"]
  287 -> 93 [style=solid label="FLOAT_LIT"]
  287 -> 94 [style=solid label="DEC_LIT"]
  287 -> 95 [style=solid label="'+'"]
  287 -> 96 [style=solid label="'-'"]
  287 -> 97 [style=solid label="'*'"]
  287 -> 98 [style=solid label="'^'"]
  287 -> 99 [style=solid label="'&'"]
  287 -> 100 [style=solid label="'!'"]
  287 -> 101 [style=solid label="'['"]
  287 -> 102 [style=solid label="\"(\""]
  287 -> 56 [style=dashed label="PackageName"]
  287 -> 310 [style=dashed label="ExpressionList"]
  287 -> 137 [style=dashed label="Expression"]
  287 -> 104 [style=dashed label="UnaryExpr"]
  287 -> 105 [style=dashed label="unary_op"]
  287 -> 106 [style=dashed label="PrimaryExpr"]
  287 -> 107 [style=dashed label="Operand"]
  287 -> 108 [style=dashed label="Literal"]
  287 -> 109 [style=dashed label="INT_LIT"]
  287 -> 110 [style=dashed label="BasicLit"]
  287 -> 111 [style=dashed label="OperandName"]
  287 -> 112 [style=dashed label="QualifiedIdent"]
  287 -> 113 [style=dashed label="CompositeLit"]
  287 -> 114 [style=dashed label="LiteralType"]
  287 -> 115 [style=dashed label="FunctionLit"]
  287 -> 116 [style=dashed label="TypeName"]
  287 -> 117 [style=dashed label="ArrayType"]
  287 -> 119 [style=dashed label="StructType"]
  288 [label="State 288\n\l168 IncDecStmt: Expression \"++\" .\l"]
  288 -> "288R168" [style=solid]
 "288R168" [label="R168", fillcolor=3, shape=diamond, style=filled]
  289 [label="State 289\n\l169 IncDecStmt: Expression \"--\" .\l"]
  289 -> "289R169" [style=solid]
 "289R169" [label="R169", fillcolor=3, shape=diamond, style=filled]
  290 [label="State 290\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement ';' .\l"]
  290 -> "290R28" [style=solid]
 "290R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  291 [label="State 291\n\l160 LabeledStmt: Label ':' . Statement\l"]
  291 -> 220 [style=solid label="BREAK"]
  291 -> 88 [style=solid label="FUNC"]
  291 -> 50 [style=solid label="STRUCT"]
  291 -> 221 [style=solid label="RETURN"]
  291 -> 222 [style=solid label="GOTO"]
  291 -> 20 [style=solid label="CONST"]
  291 -> 223 [style=solid label="IF"]
  291 -> 224 [style=solid label="CONTINUE"]
  291 -> 225 [style=solid label="FOR"]
  291 -> 226 [style=solid label="ID"]
  291 -> 21 [style=solid label="VAR"]
  291 -> 90 [style=solid label="STRING_LIT"]
  291 -> 91 [style=solid label="BINARY_LIT"]
  291 -> 92 [style=solid label="HEX_LIT"]
  291 -> 93 [style=solid label="FLOAT_LIT"]
  291 -> 94 [style=solid label="DEC_LIT"]
  291 -> 227 [style=solid label="GO"]
  291 -> 228 [style=solid label="FALLTHROUGH"]
  291 -> 22 [style=solid label="TYPE_TOK"]
  291 -> 95 [style=solid label="'+'"]
  291 -> 96 [style=solid label="'-'"]
  291 -> 97 [style=solid label="'*'"]
  291 -> 98 [style=solid label="'^'"]
  291 -> 99 [style=solid label="'&'"]
  291 -> 100 [style=solid label="'!'"]
  291 -> 101 [style=solid label="'['"]
  291 -> 102 [style=solid label="\"(\""]
  291 -> 123 [style=solid label="'{'"]
  291 -> 56 [style=dashed label="PackageName"]
  291 -> 230 [style=dashed label="Declaration"]
  291 -> 25 [style=dashed label="ConstDecl"]
  291 -> 26 [style=dashed label="TypeDecl"]
  291 -> 27 [style=dashed label="VarDecl"]
  291 -> 231 [style=dashed label="ExpressionList"]
  291 -> 232 [style=dashed label="Expression"]
  291 -> 104 [style=dashed label="UnaryExpr"]
  291 -> 105 [style=dashed label="unary_op"]
  291 -> 106 [style=dashed label="PrimaryExpr"]
  291 -> 107 [style=dashed label="Operand"]
  291 -> 108 [style=dashed label="Literal"]
  291 -> 109 [style=dashed label="INT_LIT"]
  291 -> 110 [style=dashed label="BasicLit"]
  291 -> 111 [style=dashed label="OperandName"]
  291 -> 112 [style=dashed label="QualifiedIdent"]
  291 -> 113 [style=dashed label="CompositeLit"]
  291 -> 114 [style=dashed label="LiteralType"]
  291 -> 115 [style=dashed label="FunctionLit"]
  291 -> 233 [style=dashed label="Block"]
  291 -> 311 [style=dashed label="Statement"]
  291 -> 235 [style=dashed label="LabeledStmt"]
  291 -> 236 [style=dashed label="Label"]
  291 -> 237 [style=dashed label="SimpleStmt"]
  291 -> 238 [style=dashed label="EmptyStmt"]
  291 -> 239 [style=dashed label="ExpressionStmt"]
  291 -> 240 [style=dashed label="IncDecStmt"]
  291 -> 241 [style=dashed label="Assignment"]
  291 -> 242 [style=dashed label="IfStmt"]
  291 -> 243 [style=dashed label="ForStmt"]
  291 -> 244 [style=dashed label="GoStmt"]
  291 -> 245 [style=dashed label="ReturnStmt"]
  291 -> 246 [style=dashed label="BreakStmt"]
  291 -> 247 [style=dashed label="ContinueStmt"]
  291 -> 248 [style=dashed label="GotoStmt"]
  291 -> 249 [style=dashed label="FallthroughStmt"]
  291 -> 116 [style=dashed label="TypeName"]
  291 -> 117 [style=dashed label="ArrayType"]
  291 -> 119 [style=dashed label="StructType"]
  291 -> "291R166" [style=solid]
 "291R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  292 [label="State 292\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' Expression .\l 52 Expression: Expression . binary_op Expression\l"]
  292 -> 149 [style=solid label="'+'"]
  292 -> 150 [style=solid label="'-'"]
  292 -> 151 [style=solid label="'*'"]
  292 -> 152 [style=solid label="'/'"]
  292 -> 153 [style=solid label="\"||\""]
  292 -> 154 [style=solid label="\"&&\""]
  292 -> 155 [style=solid label="\"==\""]
  292 -> 156 [style=solid label="\"!=\""]
  292 -> 157 [style=solid label="'<'"]
  292 -> 158 [style=solid label="\"<=\""]
  292 -> 159 [style=solid label="'>'"]
  292 -> 160 [style=solid label="\">=\""]
  292 -> 161 [style=solid label="'|'"]
  292 -> 162 [style=solid label="'^'"]
  292 -> 163 [style=solid label="'%'"]
  292 -> 164 [style=solid label="\"<<\""]
  292 -> 165 [style=solid label="\">>\""]
  292 -> 166 [style=solid label="'&'"]
  292 -> 167 [style=dashed label="binary_op"]
  292 -> 168 [style=dashed label="rel_op"]
  292 -> 169 [style=dashed label="add_op"]
  292 -> 170 [style=dashed label="mul_op"]
  292 -> "292R24d" [label="['+', '-', '*', '/', '|', '^', '%', \"<<\", \">>\", '&']", style=solid]
 "292R24d" [label="R24", fillcolor=5, shape=diamond, style=filled]
  292 -> "292R24" [style=solid]
 "292R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  293 [label="State 293\n\l218 Tag: STRING_LIT .\l"]
  293 -> "293R218" [style=solid]
 "293R218" [label="R218", fillcolor=3, shape=diamond, style=filled]
  294 [label="State 294\n\l216 FieldDecl: IdentifierList Type Tag .\l"]
  294 -> "294R216" [style=solid]
 "294R216" [label="R216", fillcolor=3, shape=diamond, style=filled]
  295 [label="State 295\n\l 94 ArgumentInBracketEnd: ELIPSIS ',' .\l"]
  295 -> "295R94" [style=solid]
 "295R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  296 [label="State 296\n\l 93 ArgumentInBracketFirst: Type ',' ExpressionList .\l"]
  296 -> "296R93" [style=solid]
 "296R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  297 [label="State 297\n\l120 LiteralValue: '{' ElementList ',' '}' .\l"]
  297 -> "297R120" [style=solid]
 "297R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  298 [label="State 298\n\l122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' . KeyedElement\l"]
  298 -> 88 [style=solid label="FUNC"]
  298 -> 50 [style=solid label="STRUCT"]
  298 -> 209 [style=solid label="ID"]
  298 -> 90 [style=solid label="STRING_LIT"]
  298 -> 91 [style=solid label="BINARY_LIT"]
  298 -> 92 [style=solid label="HEX_LIT"]
  298 -> 93 [style=solid label="FLOAT_LIT"]
  298 -> 94 [style=solid label="DEC_LIT"]
  298 -> 95 [style=solid label="'+'"]
  298 -> 96 [style=solid label="'-'"]
  298 -> 97 [style=solid label="'*'"]
  298 -> 98 [style=solid label="'^'"]
  298 -> 99 [style=solid label="'&'"]
  298 -> 100 [style=solid label="'!'"]
  298 -> 101 [style=solid label="'['"]
  298 -> 102 [style=solid label="\"(\""]
  298 -> 178 [style=solid label="'{'"]
  298 -> 56 [style=dashed label="PackageName"]
  298 -> 211 [style=dashed label="Expression"]
  298 -> 104 [style=dashed label="UnaryExpr"]
  298 -> 105 [style=dashed label="unary_op"]
  298 -> 106 [style=dashed label="PrimaryExpr"]
  298 -> 107 [style=dashed label="Operand"]
  298 -> 108 [style=dashed label="Literal"]
  298 -> 109 [style=dashed label="INT_LIT"]
  298 -> 110 [style=dashed label="BasicLit"]
  298 -> 111 [style=dashed label="OperandName"]
  298 -> 112 [style=dashed label="QualifiedIdent"]
  298 -> 113 [style=dashed label="CompositeLit"]
  298 -> 114 [style=dashed label="LiteralType"]
  298 -> 212 [style=dashed label="LiteralValue"]
  298 -> 312 [style=dashed label="KeyedElement"]
  298 -> 215 [style=dashed label="Key"]
  298 -> 216 [style=dashed label="FieldName"]
  298 -> 217 [style=dashed label="Element"]
  298 -> 115 [style=dashed label="FunctionLit"]
  298 -> 116 [style=dashed label="TypeName"]
  298 -> 117 [style=dashed label="ArrayType"]
  298 -> 119 [style=dashed label="StructType"]
  299 [label="State 299\n\l 52 Expression: Expression . binary_op Expression\l130 Element: Expression .\l"]
  299 -> 149 [style=solid label="'+'"]
  299 -> 150 [style=solid label="'-'"]
  299 -> 151 [style=solid label="'*'"]
  299 -> 152 [style=solid label="'/'"]
  299 -> 153 [style=solid label="\"||\""]
  299 -> 154 [style=solid label="\"&&\""]
  299 -> 155 [style=solid label="\"==\""]
  299 -> 156 [style=solid label="\"!=\""]
  299 -> 157 [style=solid label="'<'"]
  299 -> 158 [style=solid label="\"<=\""]
  299 -> 159 [style=solid label="'>'"]
  299 -> 160 [style=solid label="\">=\""]
  299 -> 161 [style=solid label="'|'"]
  299 -> 162 [style=solid label="'^'"]
  299 -> 163 [style=solid label="'%'"]
  299 -> 164 [style=solid label="\"<<\""]
  299 -> 165 [style=solid label="\">>\""]
  299 -> 166 [style=solid label="'&'"]
  299 -> 167 [style=dashed label="binary_op"]
  299 -> 168 [style=dashed label="rel_op"]
  299 -> 169 [style=dashed label="add_op"]
  299 -> 170 [style=dashed label="mul_op"]
  299 -> "299R130" [style=solid]
 "299R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  300 [label="State 300\n\l131 Element: LiteralValue .\l"]
  300 -> "300R131" [style=solid]
 "300R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  301 [label="State 301\n\l124 KeyedElement: Key ':' Element .\l"]
  301 -> "301R124" [style=solid]
 "301R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  302 [label="State 302\n\l173 IfStmt: IF Expression Block .\l"]
  302 -> "302R173" [style=solid]
 "302R173" [label="R173", fillcolor=3, shape=diamond, style=filled]
  303 [label="State 303\n\l174 IfStmt: IF SimpleStmt ';' . Expression Block\l175       | IF SimpleStmt ';' . Expression Block ELSE Block\l176       | IF SimpleStmt ';' . Expression Block ELSE IfStmt\l"]
  303 -> 88 [style=solid label="FUNC"]
  303 -> 50 [style=solid label="STRUCT"]
  303 -> 89 [style=solid label="ID"]
  303 -> 90 [style=solid label="STRING_LIT"]
  303 -> 91 [style=solid label="BINARY_LIT"]
  303 -> 92 [style=solid label="HEX_LIT"]
  303 -> 93 [style=solid label="FLOAT_LIT"]
  303 -> 94 [style=solid label="DEC_LIT"]
  303 -> 95 [style=solid label="'+'"]
  303 -> 96 [style=solid label="'-'"]
  303 -> 97 [style=solid label="'*'"]
  303 -> 98 [style=solid label="'^'"]
  303 -> 99 [style=solid label="'&'"]
  303 -> 100 [style=solid label="'!'"]
  303 -> 101 [style=solid label="'['"]
  303 -> 102 [style=solid label="\"(\""]
  303 -> 56 [style=dashed label="PackageName"]
  303 -> 313 [style=dashed label="Expression"]
  303 -> 104 [style=dashed label="UnaryExpr"]
  303 -> 105 [style=dashed label="unary_op"]
  303 -> 106 [style=dashed label="PrimaryExpr"]
  303 -> 107 [style=dashed label="Operand"]
  303 -> 108 [style=dashed label="Literal"]
  303 -> 109 [style=dashed label="INT_LIT"]
  303 -> 110 [style=dashed label="BasicLit"]
  303 -> 111 [style=dashed label="OperandName"]
  303 -> 112 [style=dashed label="QualifiedIdent"]
  303 -> 113 [style=dashed label="CompositeLit"]
  303 -> 114 [style=dashed label="LiteralType"]
  303 -> 115 [style=dashed label="FunctionLit"]
  303 -> 116 [style=dashed label="TypeName"]
  303 -> 117 [style=dashed label="ArrayType"]
  303 -> 119 [style=dashed label="StructType"]
  304 [label="State 304\n\l 52 Expression: Expression . binary_op Expression\l192 RangeClause: RANGE Expression .\l"]
  304 -> 149 [style=solid label="'+'"]
  304 -> 150 [style=solid label="'-'"]
  304 -> 151 [style=solid label="'*'"]
  304 -> 152 [style=solid label="'/'"]
  304 -> 153 [style=solid label="\"||\""]
  304 -> 154 [style=solid label="\"&&\""]
  304 -> 155 [style=solid label="\"==\""]
  304 -> 156 [style=solid label="\"!=\""]
  304 -> 157 [style=solid label="'<'"]
  304 -> 158 [style=solid label="\"<=\""]
  304 -> 159 [style=solid label="'>'"]
  304 -> 160 [style=solid label="\">=\""]
  304 -> 161 [style=solid label="'|'"]
  304 -> 162 [style=solid label="'^'"]
  304 -> 163 [style=solid label="'%'"]
  304 -> 164 [style=solid label="\"<<\""]
  304 -> 165 [style=solid label="\">>\""]
  304 -> 166 [style=solid label="'&'"]
  304 -> 167 [style=dashed label="binary_op"]
  304 -> 168 [style=dashed label="rel_op"]
  304 -> 169 [style=dashed label="add_op"]
  304 -> 170 [style=dashed label="mul_op"]
  304 -> "304R192" [style=solid]
 "304R192" [label="R192", fillcolor=3, shape=diamond, style=filled]
  305 [label="State 305\n\l193 RangeClause: ExpressionList '=' . RANGE Expression\l"]
  305 -> 314 [style=solid label="RANGE"]
  306 [label="State 306\n\l178 ForStmt: FOR ForStmtAfter Block .\l"]
  306 -> "306R178" [style=solid]
 "306R178" [label="R178", fillcolor=3, shape=diamond, style=filled]
  307 [label="State 307\n\l183 ForClause: OPT_InitStmt ';' . OPT_Condition ';' OPT_PostStmt\l"]
  307 -> 88 [style=solid label="FUNC"]
  307 -> 50 [style=solid label="STRUCT"]
  307 -> 89 [style=solid label="ID"]
  307 -> 90 [style=solid label="STRING_LIT"]
  307 -> 91 [style=solid label="BINARY_LIT"]
  307 -> 92 [style=solid label="HEX_LIT"]
  307 -> 93 [style=solid label="FLOAT_LIT"]
  307 -> 94 [style=solid label="DEC_LIT"]
  307 -> 95 [style=solid label="'+'"]
  307 -> 96 [style=solid label="'-'"]
  307 -> 97 [style=solid label="'*'"]
  307 -> 98 [style=solid label="'^'"]
  307 -> 99 [style=solid label="'&'"]
  307 -> 100 [style=solid label="'!'"]
  307 -> 101 [style=solid label="'['"]
  307 -> 102 [style=solid label="\"(\""]
  307 -> 56 [style=dashed label="PackageName"]
  307 -> 315 [style=dashed label="Expression"]
  307 -> 104 [style=dashed label="UnaryExpr"]
  307 -> 105 [style=dashed label="unary_op"]
  307 -> 106 [style=dashed label="PrimaryExpr"]
  307 -> 107 [style=dashed label="Operand"]
  307 -> 108 [style=dashed label="Literal"]
  307 -> 109 [style=dashed label="INT_LIT"]
  307 -> 110 [style=dashed label="BasicLit"]
  307 -> 111 [style=dashed label="OperandName"]
  307 -> 112 [style=dashed label="QualifiedIdent"]
  307 -> 113 [style=dashed label="CompositeLit"]
  307 -> 114 [style=dashed label="LiteralType"]
  307 -> 115 [style=dashed label="FunctionLit"]
  307 -> 316 [style=dashed label="Condition"]
  307 -> 317 [style=dashed label="OPT_Condition"]
  307 -> 116 [style=dashed label="TypeName"]
  307 -> 117 [style=dashed label="ArrayType"]
  307 -> 119 [style=dashed label="StructType"]
  307 -> "307R187" [style=solid]
 "307R187" [label="R187", fillcolor=3, shape=diamond, style=filled]
  308 [label="State 308\n\l171 assign_op: add_op '=' .\l"]
  308 -> "308R171" [style=solid]
 "308R171" [label="R171", fillcolor=3, shape=diamond, style=filled]
  309 [label="State 309\n\l172 assign_op: mul_op '=' .\l"]
  309 -> "309R172" [style=solid]
 "309R172" [label="R172", fillcolor=3, shape=diamond, style=filled]
  310 [label="State 310\n\l170 Assignment: ExpressionList assign_op ExpressionList .\l"]
  310 -> "310R170" [style=solid]
 "310R170" [label="R170", fillcolor=3, shape=diamond, style=filled]
  311 [label="State 311\n\l160 LabeledStmt: Label ':' Statement .\l"]
  311 -> "311R160" [style=solid]
 "311R160" [label="R160", fillcolor=3, shape=diamond, style=filled]
  312 [label="State 312\n\l122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' KeyedElement .\l"]
  312 -> "312R122" [style=solid]
 "312R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  313 [label="State 313\n\l 52 Expression: Expression . binary_op Expression\l174 IfStmt: IF SimpleStmt ';' Expression . Block\l175       | IF SimpleStmt ';' Expression . Block ELSE Block\l176       | IF SimpleStmt ';' Expression . Block ELSE IfStmt\l"]
  313 -> 149 [style=solid label="'+'"]
  313 -> 150 [style=solid label="'-'"]
  313 -> 151 [style=solid label="'*'"]
  313 -> 152 [style=solid label="'/'"]
  313 -> 153 [style=solid label="\"||\""]
  313 -> 154 [style=solid label="\"&&\""]
  313 -> 155 [style=solid label="\"==\""]
  313 -> 156 [style=solid label="\"!=\""]
  313 -> 157 [style=solid label="'<'"]
  313 -> 158 [style=solid label="\"<=\""]
  313 -> 159 [style=solid label="'>'"]
  313 -> 160 [style=solid label="\">=\""]
  313 -> 161 [style=solid label="'|'"]
  313 -> 162 [style=solid label="'^'"]
  313 -> 163 [style=solid label="'%'"]
  313 -> 164 [style=solid label="\"<<\""]
  313 -> 165 [style=solid label="\">>\""]
  313 -> 166 [style=solid label="'&'"]
  313 -> 123 [style=solid label="'{'"]
  313 -> 167 [style=dashed label="binary_op"]
  313 -> 168 [style=dashed label="rel_op"]
  313 -> 169 [style=dashed label="add_op"]
  313 -> 170 [style=dashed label="mul_op"]
  313 -> 318 [style=dashed label="Block"]
  314 [label="State 314\n\l193 RangeClause: ExpressionList '=' RANGE . Expression\l"]
  314 -> 88 [style=solid label="FUNC"]
  314 -> 50 [style=solid label="STRUCT"]
  314 -> 89 [style=solid label="ID"]
  314 -> 90 [style=solid label="STRING_LIT"]
  314 -> 91 [style=solid label="BINARY_LIT"]
  314 -> 92 [style=solid label="HEX_LIT"]
  314 -> 93 [style=solid label="FLOAT_LIT"]
  314 -> 94 [style=solid label="DEC_LIT"]
  314 -> 95 [style=solid label="'+'"]
  314 -> 96 [style=solid label="'-'"]
  314 -> 97 [style=solid label="'*'"]
  314 -> 98 [style=solid label="'^'"]
  314 -> 99 [style=solid label="'&'"]
  314 -> 100 [style=solid label="'!'"]
  314 -> 101 [style=solid label="'['"]
  314 -> 102 [style=solid label="\"(\""]
  314 -> 56 [style=dashed label="PackageName"]
  314 -> 319 [style=dashed label="Expression"]
  314 -> 104 [style=dashed label="UnaryExpr"]
  314 -> 105 [style=dashed label="unary_op"]
  314 -> 106 [style=dashed label="PrimaryExpr"]
  314 -> 107 [style=dashed label="Operand"]
  314 -> 108 [style=dashed label="Literal"]
  314 -> 109 [style=dashed label="INT_LIT"]
  314 -> 110 [style=dashed label="BasicLit"]
  314 -> 111 [style=dashed label="OperandName"]
  314 -> 112 [style=dashed label="QualifiedIdent"]
  314 -> 113 [style=dashed label="CompositeLit"]
  314 -> 114 [style=dashed label="LiteralType"]
  314 -> 115 [style=dashed label="FunctionLit"]
  314 -> 116 [style=dashed label="TypeName"]
  314 -> 117 [style=dashed label="ArrayType"]
  314 -> 119 [style=dashed label="StructType"]
  315 [label="State 315\n\l 52 Expression: Expression . binary_op Expression\l182 Condition: Expression .\l"]
  315 -> 149 [style=solid label="'+'"]
  315 -> 150 [style=solid label="'-'"]
  315 -> 151 [style=solid label="'*'"]
  315 -> 152 [style=solid label="'/'"]
  315 -> 153 [style=solid label="\"||\""]
  315 -> 154 [style=solid label="\"&&\""]
  315 -> 155 [style=solid label="\"==\""]
  315 -> 156 [style=solid label="\"!=\""]
  315 -> 157 [style=solid label="'<'"]
  315 -> 158 [style=solid label="\"<=\""]
  315 -> 159 [style=solid label="'>'"]
  315 -> 160 [style=solid label="\">=\""]
  315 -> 161 [style=solid label="'|'"]
  315 -> 162 [style=solid label="'^'"]
  315 -> 163 [style=solid label="'%'"]
  315 -> 164 [style=solid label="\"<<\""]
  315 -> 165 [style=solid label="\">>\""]
  315 -> 166 [style=solid label="'&'"]
  315 -> 167 [style=dashed label="binary_op"]
  315 -> 168 [style=dashed label="rel_op"]
  315 -> 169 [style=dashed label="add_op"]
  315 -> 170 [style=dashed label="mul_op"]
  315 -> "315R182" [style=solid]
 "315R182" [label="R182", fillcolor=3, shape=diamond, style=filled]
  316 [label="State 316\n\l186 OPT_Condition: Condition .\l"]
  316 -> "316R186" [style=solid]
 "316R186" [label="R186", fillcolor=3, shape=diamond, style=filled]
  317 [label="State 317\n\l183 ForClause: OPT_InitStmt ';' OPT_Condition . ';' OPT_PostStmt\l"]
  317 -> 320 [style=solid label="';'"]
  318 [label="State 318\n\l174 IfStmt: IF SimpleStmt ';' Expression Block .\l175       | IF SimpleStmt ';' Expression Block . ELSE Block\l176       | IF SimpleStmt ';' Expression Block . ELSE IfStmt\l"]
  318 -> 321 [style=solid label="ELSE"]
  318 -> "318R174" [style=solid]
 "318R174" [label="R174", fillcolor=3, shape=diamond, style=filled]
  319 [label="State 319\n\l 52 Expression: Expression . binary_op Expression\l193 RangeClause: ExpressionList '=' RANGE Expression .\l"]
  319 -> 149 [style=solid label="'+'"]
  319 -> 150 [style=solid label="'-'"]
  319 -> 151 [style=solid label="'*'"]
  319 -> 152 [style=solid label="'/'"]
  319 -> 153 [style=solid label="\"||\""]
  319 -> 154 [style=solid label="\"&&\""]
  319 -> 155 [style=solid label="\"==\""]
  319 -> 156 [style=solid label="\"!=\""]
  319 -> 157 [style=solid label="'<'"]
  319 -> 158 [style=solid label="\"<=\""]
  319 -> 159 [style=solid label="'>'"]
  319 -> 160 [style=solid label="\">=\""]
  319 -> 161 [style=solid label="'|'"]
  319 -> 162 [style=solid label="'^'"]
  319 -> 163 [style=solid label="'%'"]
  319 -> 164 [style=solid label="\"<<\""]
  319 -> 165 [style=solid label="\">>\""]
  319 -> 166 [style=solid label="'&'"]
  319 -> 167 [style=dashed label="binary_op"]
  319 -> 168 [style=dashed label="rel_op"]
  319 -> 169 [style=dashed label="add_op"]
  319 -> 170 [style=dashed label="mul_op"]
  319 -> "319R193" [style=solid]
 "319R193" [label="R193", fillcolor=3, shape=diamond, style=filled]
  320 [label="State 320\n\l183 ForClause: OPT_InitStmt ';' OPT_Condition ';' . OPT_PostStmt\l"]
  320 -> 88 [style=solid label="FUNC"]
  320 -> 50 [style=solid label="STRUCT"]
  320 -> 89 [style=solid label="ID"]
  320 -> 90 [style=solid label="STRING_LIT"]
  320 -> 91 [style=solid label="BINARY_LIT"]
  320 -> 92 [style=solid label="HEX_LIT"]
  320 -> 93 [style=solid label="FLOAT_LIT"]
  320 -> 94 [style=solid label="DEC_LIT"]
  320 -> 95 [style=solid label="'+'"]
  320 -> 96 [style=solid label="'-'"]
  320 -> 97 [style=solid label="'*'"]
  320 -> 98 [style=solid label="'^'"]
  320 -> 99 [style=solid label="'&'"]
  320 -> 100 [style=solid label="'!'"]
  320 -> 101 [style=solid label="'['"]
  320 -> 102 [style=solid label="\"(\""]
  320 -> 56 [style=dashed label="PackageName"]
  320 -> 231 [style=dashed label="ExpressionList"]
  320 -> 232 [style=dashed label="Expression"]
  320 -> 104 [style=dashed label="UnaryExpr"]
  320 -> 105 [style=dashed label="unary_op"]
  320 -> 106 [style=dashed label="PrimaryExpr"]
  320 -> 107 [style=dashed label="Operand"]
  320 -> 108 [style=dashed label="Literal"]
  320 -> 109 [style=dashed label="INT_LIT"]
  320 -> 110 [style=dashed label="BasicLit"]
  320 -> 111 [style=dashed label="OperandName"]
  320 -> 112 [style=dashed label="QualifiedIdent"]
  320 -> 113 [style=dashed label="CompositeLit"]
  320 -> 114 [style=dashed label="LiteralType"]
  320 -> 115 [style=dashed label="FunctionLit"]
  320 -> 322 [style=dashed label="SimpleStmt"]
  320 -> 238 [style=dashed label="EmptyStmt"]
  320 -> 239 [style=dashed label="ExpressionStmt"]
  320 -> 240 [style=dashed label="IncDecStmt"]
  320 -> 241 [style=dashed label="Assignment"]
  320 -> 323 [style=dashed label="OPT_PostStmt"]
  320 -> 324 [style=dashed label="PostStmt"]
  320 -> 116 [style=dashed label="TypeName"]
  320 -> 117 [style=dashed label="ArrayType"]
  320 -> 119 [style=dashed label="StructType"]
  320 -> "320R166" [style=solid]
 "320R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  320 -> "320R189d" [label="['{']", style=solid]
 "320R189d" [label="R189", fillcolor=5, shape=diamond, style=filled]
  321 [label="State 321\n\l175 IfStmt: IF SimpleStmt ';' Expression Block ELSE . Block\l176       | IF SimpleStmt ';' Expression Block ELSE . IfStmt\l"]
  321 -> 223 [style=solid label="IF"]
  321 -> 123 [style=solid label="'{'"]
  321 -> 325 [style=dashed label="Block"]
  321 -> 326 [style=dashed label="IfStmt"]
  322 [label="State 322\n\l191 PostStmt: SimpleStmt .\l"]
  322 -> "322R191" [style=solid]
 "322R191" [label="R191", fillcolor=3, shape=diamond, style=filled]
  323 [label="State 323\n\l183 ForClause: OPT_InitStmt ';' OPT_Condition ';' OPT_PostStmt .\l"]
  323 -> "323R183" [style=solid]
 "323R183" [label="R183", fillcolor=3, shape=diamond, style=filled]
  324 [label="State 324\n\l188 OPT_PostStmt: PostStmt .\l"]
  324 -> "324R188" [style=solid]
 "324R188" [label="R188", fillcolor=3, shape=diamond, style=filled]
  325 [label="State 325\n\l175 IfStmt: IF SimpleStmt ';' Expression Block ELSE Block .\l"]
  325 -> "325R175" [style=solid]
 "325R175" [label="R175", fillcolor=3, shape=diamond, style=filled]
  326 [label="State 326\n\l176 IfStmt: IF SimpleStmt ';' Expression Block ELSE IfStmt .\l"]
  326 -> "326R176" [style=solid]
 "326R176" [label="R176", fillcolor=3, shape=diamond, style=filled]
}
