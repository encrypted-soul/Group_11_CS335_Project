// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parse.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • SourceFile $end\l"]
  0 -> 1 [style=solid label="PACKAGE"]
  0 -> 2 [style=dashed label="SourceFile"]
  0 -> 3 [style=dashed label="PackageClause"]
  1 [label="State 1\n\l  2 PackageClause: PACKAGE • PackageName\l"]
  1 -> 4 [style=solid label="ID"]
  1 -> 5 [style=dashed label="PackageName"]
  2 [label="State 2\n\l  0 $accept: SourceFile • $end\l"]
  2 -> 6 [style=solid label="$end"]
  3 [label="State 3\n\l  1 SourceFile: PackageClause • ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  3 -> 7 [style=solid label="';'"]
  4 [label="State 4\n\l  3 PackageName: ID •\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  2 PackageClause: PACKAGE PackageName •\l"]
  5 -> "5R2" [style=solid]
 "5R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  0 $accept: SourceFile $end •\l"]
  6 -> "6R0" [style=solid]
 "6R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  7 [label="State 7\n\l  1 SourceFile: PackageClause ';' • STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  7 -> 8 [style=dashed label="STAR_ImportDecl_SC"]
  7 -> "7R15" [style=solid]
 "7R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC • STAR_TopLevelDecl_SC\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC • ImportDecl ';'\l"]
  8 -> 9 [style=solid label="IMPORT"]
  8 -> 10 [style=dashed label="ImportDecl"]
  8 -> 11 [style=dashed label="STAR_TopLevelDecl_SC"]
  8 -> "8R13" [style=solid]
 "8R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  4 ImportDecl: IMPORT • ImportSpec\l  5           | IMPORT • '(' STAR_ImportSpec_SC ')'\l"]
  9 -> 4 [style=solid label="ID"]
  9 -> 12 [style=solid label="STRING_LIT"]
  9 -> 13 [style=solid label="'('"]
  9 -> 14 [style=solid label="'.'"]
  9 -> 15 [style=dashed label="PackageName"]
  9 -> 16 [style=dashed label="ImportSpec"]
  9 -> 17 [style=dashed label="ImportPath"]
  10 [label="State 10\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl • ';'\l"]
  10 -> 18 [style=solid label="';'"]
  11 [label="State 11\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC •\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC • TopLevelDecl ';'\l"]
  11 -> 19 [style=solid label="FUNC"]
  11 -> 20 [style=solid label="CONST"]
  11 -> 21 [style=solid label="VAR"]
  11 -> 22 [style=solid label="TYPE_TOK"]
  11 -> 23 [style=dashed label="TopLevelDecl"]
  11 -> 24 [style=dashed label="Declaration"]
  11 -> 25 [style=dashed label="ConstDecl"]
  11 -> 26 [style=dashed label="TypeDecl"]
  11 -> 27 [style=dashed label="VarDecl"]
  11 -> 28 [style=dashed label="FunctionDecl"]
  11 -> "11R1" [style=solid]
 "11R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  9 ImportPath: STRING_LIT •\l"]
  12 -> "12R9" [style=solid]
 "12R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  5 ImportDecl: IMPORT '(' • STAR_ImportSpec_SC ')'\l"]
  13 -> 29 [style=dashed label="STAR_ImportSpec_SC"]
  13 -> "13R17" [style=solid]
 "13R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  7 ImportSpec: '.' • ImportPath\l"]
  14 -> 12 [style=solid label="STRING_LIT"]
  14 -> 30 [style=dashed label="ImportPath"]
  15 [label="State 15\n\l  8 ImportSpec: PackageName • ImportPath\l"]
  15 -> 12 [style=solid label="STRING_LIT"]
  15 -> 31 [style=dashed label="ImportPath"]
  16 [label="State 16\n\l  4 ImportDecl: IMPORT ImportSpec •\l"]
  16 -> "16R4" [style=solid]
 "16R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  6 ImportSpec: ImportPath •\l"]
  17 -> "17R6" [style=solid]
 "17R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl ';' •\l"]
  18 -> "18R14" [style=solid]
 "18R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l140 FunctionDecl: FUNC • FunctionName Signature FunctionBody\l141             | FUNC • FunctionName Signature\l"]
  19 -> 32 [style=solid label="ID"]
  19 -> 33 [style=dashed label="FunctionName"]
  20 [label="State 20\n\l 37 ConstDecl: CONST • ConstSpec\l 38          | CONST • '(' STAR_ConstSpec_SC ')'\l"]
  20 -> 34 [style=solid label="ID"]
  20 -> 35 [style=solid label="'('"]
  20 -> 36 [style=dashed label="ConstSpec"]
  20 -> 37 [style=dashed label="IdentifierList"]
  21 [label="State 21\n\l 47 VarDecl: VAR • VarSpec\l 48        | VAR • '(' STAR_VarSpec_SC ')'\l"]
  21 -> 34 [style=solid label="ID"]
  21 -> 38 [style=solid label="'('"]
  21 -> 39 [style=dashed label="IdentifierList"]
  21 -> 40 [style=dashed label="VarSpec"]
  22 [label="State 22\n\l 41 TypeDecl: TYPE_TOK • TypeSpec\l 42         | TYPE_TOK • '(' STAR_TypeSpec_SC ')'\l"]
  22 -> 41 [style=solid label="ID"]
  22 -> 42 [style=solid label="'('"]
  22 -> 43 [style=dashed label="TypeSpec"]
  22 -> 44 [style=dashed label="AliasDecl"]
  22 -> 45 [style=dashed label="TypeDef"]
  23 [label="State 23\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl • ';'\l"]
  23 -> 46 [style=solid label="';'"]
  24 [label="State 24\n\l 10 TopLevelDecl: Declaration •\l"]
  24 -> "24R10" [style=solid]
 "24R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 34 Declaration: ConstDecl •\l"]
  25 -> "25R34" [style=solid]
 "25R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 35 Declaration: TypeDecl •\l"]
  26 -> "26R35" [style=solid]
 "26R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 36 Declaration: VarDecl •\l"]
  27 -> "27R36" [style=solid]
 "27R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 11 TopLevelDecl: FunctionDecl •\l"]
  28 -> "28R11" [style=solid]
 "28R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC • ')'\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC • ImportSpec ';'\l"]
  29 -> 4 [style=solid label="ID"]
  29 -> 12 [style=solid label="STRING_LIT"]
  29 -> 47 [style=solid label="')'"]
  29 -> 14 [style=solid label="'.'"]
  29 -> 15 [style=dashed label="PackageName"]
  29 -> 48 [style=dashed label="ImportSpec"]
  29 -> 17 [style=dashed label="ImportPath"]
  30 [label="State 30\n\l  7 ImportSpec: '.' ImportPath •\l"]
  30 -> "30R7" [style=solid]
 "30R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l  8 ImportSpec: PackageName ImportPath •\l"]
  31 -> "31R8" [style=solid]
 "31R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l142 FunctionName: ID •\l"]
  32 -> "32R142" [style=solid]
 "32R142" [label="R142", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l140 FunctionDecl: FUNC FunctionName • Signature FunctionBody\l141             | FUNC FunctionName • Signature\l"]
  33 -> 49 [style=solid label="'('"]
  33 -> 50 [style=dashed label="Signature"]
  33 -> 51 [style=dashed label="Parameters"]
  34 [label="State 34\n\l 40 IdentifierList: ID • STAR_CM_ID\l"]
  34 -> 52 [style=dashed label="STAR_CM_ID"]
  34 -> "34R19" [style=solid]
 "34R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 38 ConstDecl: CONST '(' • STAR_ConstSpec_SC ')'\l"]
  35 -> 53 [style=dashed label="STAR_ConstSpec_SC"]
  35 -> "35R21" [style=solid]
 "35R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 37 ConstDecl: CONST ConstSpec •\l"]
  36 -> "36R37" [style=solid]
 "36R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 39 ConstSpec: IdentifierList •\l"]
  37 -> "37R39" [style=solid]
 "37R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 48 VarDecl: VAR '(' • STAR_VarSpec_SC ')'\l"]
  38 -> 54 [style=dashed label="STAR_VarSpec_SC"]
  38 -> "38R23" [style=solid]
 "38R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 49 VarSpec: IdentifierList • \"=\" ExpressionList\l"]
  39 -> 55 [style=solid label="\"=\""]
  40 [label="State 40\n\l 47 VarDecl: VAR VarSpec •\l"]
  40 -> "40R47" [style=solid]
 "40R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 45 AliasDecl: ID • '=' Type\l 46 TypeDef: ID • Type\l"]
  41 -> 56 [style=solid label="FUNC"]
  41 -> 57 [style=solid label="STRUCT"]
  41 -> 58 [style=solid label="ID"]
  41 -> 59 [style=solid label="'='"]
  41 -> 60 [style=solid label="'*'"]
  41 -> 61 [style=solid label="'('"]
  41 -> 62 [style=solid label="'['"]
  41 -> 63 [style=dashed label="PackageName"]
  41 -> 64 [style=dashed label="QualifiedIdent"]
  41 -> 65 [style=dashed label="Type"]
  41 -> 66 [style=dashed label="TypeName"]
  41 -> 67 [style=dashed label="TypeLit"]
  41 -> 68 [style=dashed label="ArrayType"]
  41 -> 69 [style=dashed label="StructType"]
  41 -> 70 [style=dashed label="PointerType"]
  41 -> 71 [style=dashed label="FunctionType"]
  42 [label="State 42\n\l 42 TypeDecl: TYPE_TOK '(' • STAR_TypeSpec_SC ')'\l"]
  42 -> 72 [style=dashed label="STAR_TypeSpec_SC"]
  42 -> "42R27" [style=solid]
 "42R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 41 TypeDecl: TYPE_TOK TypeSpec •\l"]
  43 -> "43R41" [style=solid]
 "43R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 43 TypeSpec: AliasDecl •\l"]
  44 -> "44R43" [style=solid]
 "44R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 44 TypeSpec: TypeDef •\l"]
  45 -> "45R44" [style=solid]
 "45R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl ';' •\l"]
  46 -> "46R12" [style=solid]
 "46R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC ')' •\l"]
  47 -> "47R5" [style=solid]
 "47R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec • ';'\l"]
  48 -> 73 [style=solid label="';'"]
  49 [label="State 49\n\l220 Parameters: '(' • ')'\l221           | '(' • ParameterList ')'\l222           | '(' • ParameterList ',' ')'\l"]
  49 -> 56 [style=solid label="FUNC"]
  49 -> 57 [style=solid label="STRUCT"]
  49 -> 74 [style=solid label="ID"]
  49 -> 75 [style=solid label="ELIPSIS"]
  49 -> 60 [style=solid label="'*'"]
  49 -> 61 [style=solid label="'('"]
  49 -> 76 [style=solid label="')'"]
  49 -> 62 [style=solid label="'['"]
  49 -> 63 [style=dashed label="PackageName"]
  49 -> 77 [style=dashed label="IdentifierList"]
  49 -> 64 [style=dashed label="QualifiedIdent"]
  49 -> 78 [style=dashed label="Type"]
  49 -> 66 [style=dashed label="TypeName"]
  49 -> 67 [style=dashed label="TypeLit"]
  49 -> 68 [style=dashed label="ArrayType"]
  49 -> 69 [style=dashed label="StructType"]
  49 -> 70 [style=dashed label="PointerType"]
  49 -> 71 [style=dashed label="FunctionType"]
  49 -> 79 [style=dashed label="ParameterList"]
  49 -> 80 [style=dashed label="ParameterDecl"]
  50 [label="State 50\n\l140 FunctionDecl: FUNC FunctionName Signature • FunctionBody\l141             | FUNC FunctionName Signature •\l"]
  50 -> 81 [style=solid label="'{'"]
  50 -> 82 [style=dashed label="FunctionBody"]
  50 -> 83 [style=dashed label="Block"]
  50 -> "50R141" [style=solid]
 "50R141" [label="R141", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l215 Signature: Parameters •\l216          | Parameters • Result\l"]
  51 -> 56 [style=solid label="FUNC"]
  51 -> 57 [style=solid label="STRUCT"]
  51 -> 58 [style=solid label="ID"]
  51 -> 60 [style=solid label="'*'"]
  51 -> 49 [style=solid label="'('"]
  51 -> 62 [style=solid label="'['"]
  51 -> 63 [style=dashed label="PackageName"]
  51 -> 64 [style=dashed label="QualifiedIdent"]
  51 -> 84 [style=dashed label="TypeName"]
  51 -> 85 [style=dashed label="TypeLit"]
  51 -> 68 [style=dashed label="ArrayType"]
  51 -> 69 [style=dashed label="StructType"]
  51 -> 70 [style=dashed label="PointerType"]
  51 -> 71 [style=dashed label="FunctionType"]
  51 -> 86 [style=dashed label="Result"]
  51 -> 87 [style=dashed label="Parameters"]
  51 -> "51R215" [style=solid]
 "51R215" [label="R215", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 18 STAR_CM_ID: STAR_CM_ID • ',' ID\l 40 IdentifierList: ID STAR_CM_ID •\l"]
  52 -> 88 [style=solid label="','"]
  52 -> "52R40" [style=solid]
 "52R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC • ConstSpec ';'\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC • ')'\l"]
  53 -> 34 [style=solid label="ID"]
  53 -> 89 [style=solid label="')'"]
  53 -> 90 [style=dashed label="ConstSpec"]
  53 -> 37 [style=dashed label="IdentifierList"]
  54 [label="State 54\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC • VarSpec ';'\l 48 VarDecl: VAR '(' STAR_VarSpec_SC • ')'\l"]
  54 -> 34 [style=solid label="ID"]
  54 -> 91 [style=solid label="')'"]
  54 -> 39 [style=dashed label="IdentifierList"]
  54 -> 92 [style=dashed label="VarSpec"]
  55 [label="State 55\n\l 49 VarSpec: IdentifierList \"=\" • ExpressionList\l"]
  55 -> 93 [style=solid label="FUNC"]
  55 -> 57 [style=solid label="STRUCT"]
  55 -> 94 [style=solid label="ID"]
  55 -> 95 [style=solid label="STRING_LIT"]
  55 -> 96 [style=solid label="BINARY_LIT"]
  55 -> 97 [style=solid label="HEX_LIT"]
  55 -> 98 [style=solid label="FLOAT_LIT"]
  55 -> 99 [style=solid label="DEC_LIT"]
  55 -> 100 [style=solid label="'^'"]
  55 -> 101 [style=solid label="'&'"]
  55 -> 102 [style=solid label="'+'"]
  55 -> 103 [style=solid label="'-'"]
  55 -> 104 [style=solid label="'*'"]
  55 -> 105 [style=solid label="'!'"]
  55 -> 106 [style=solid label="'['"]
  55 -> 107 [style=solid label="\"(\""]
  55 -> 63 [style=dashed label="PackageName"]
  55 -> 108 [style=dashed label="ExpressionList"]
  55 -> 109 [style=dashed label="Expression"]
  55 -> 110 [style=dashed label="UnaryExpr"]
  55 -> 111 [style=dashed label="unary_op"]
  55 -> 112 [style=dashed label="PrimaryExpr"]
  55 -> 113 [style=dashed label="Operand"]
  55 -> 114 [style=dashed label="Literal"]
  55 -> 115 [style=dashed label="INT_LIT"]
  55 -> 116 [style=dashed label="BasicLit"]
  55 -> 117 [style=dashed label="OperandName"]
  55 -> 118 [style=dashed label="QualifiedIdent"]
  55 -> 119 [style=dashed label="CompositeLit"]
  55 -> 120 [style=dashed label="LiteralType"]
  55 -> 121 [style=dashed label="FunctionLit"]
  55 -> 122 [style=dashed label="TypeName"]
  55 -> 123 [style=dashed label="ArrayType"]
  55 -> 124 [style=dashed label="StructType"]
  56 [label="State 56\n\l214 FunctionType: FUNC • Signature\l"]
  56 -> 49 [style=solid label="'('"]
  56 -> 125 [style=dashed label="Signature"]
  56 -> 51 [style=dashed label="Parameters"]
  57 [label="State 57\n\l208 StructType: STRUCT • '{' STAR_FieldDecl_SC '}'\l"]
  57 -> 126 [style=solid label="'{'"]
  58 [label="State 58\n\l  3 PackageName: ID •\l199 TypeName: ID •\l"]
  58 -> "58R3" [label="['.']", style=solid]
 "58R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  58 -> "58R199" [style=solid]
 "58R199" [label="R199", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 45 AliasDecl: ID '=' • Type\l"]
  59 -> 56 [style=solid label="FUNC"]
  59 -> 57 [style=solid label="STRUCT"]
  59 -> 58 [style=solid label="ID"]
  59 -> 60 [style=solid label="'*'"]
  59 -> 61 [style=solid label="'('"]
  59 -> 62 [style=solid label="'['"]
  59 -> 63 [style=dashed label="PackageName"]
  59 -> 64 [style=dashed label="QualifiedIdent"]
  59 -> 127 [style=dashed label="Type"]
  59 -> 66 [style=dashed label="TypeName"]
  59 -> 67 [style=dashed label="TypeLit"]
  59 -> 68 [style=dashed label="ArrayType"]
  59 -> 69 [style=dashed label="StructType"]
  59 -> 70 [style=dashed label="PointerType"]
  59 -> 71 [style=dashed label="FunctionType"]
  60 [label="State 60\n\l212 PointerType: '*' • BaseType\l"]
  60 -> 56 [style=solid label="FUNC"]
  60 -> 57 [style=solid label="STRUCT"]
  60 -> 58 [style=solid label="ID"]
  60 -> 60 [style=solid label="'*'"]
  60 -> 61 [style=solid label="'('"]
  60 -> 62 [style=solid label="'['"]
  60 -> 63 [style=dashed label="PackageName"]
  60 -> 64 [style=dashed label="QualifiedIdent"]
  60 -> 128 [style=dashed label="Type"]
  60 -> 66 [style=dashed label="TypeName"]
  60 -> 67 [style=dashed label="TypeLit"]
  60 -> 68 [style=dashed label="ArrayType"]
  60 -> 69 [style=dashed label="StructType"]
  60 -> 70 [style=dashed label="PointerType"]
  60 -> 129 [style=dashed label="BaseType"]
  60 -> 71 [style=dashed label="FunctionType"]
  61 [label="State 61\n\l198 Type: '(' • Type ')'\l"]
  61 -> 56 [style=solid label="FUNC"]
  61 -> 57 [style=solid label="STRUCT"]
  61 -> 58 [style=solid label="ID"]
  61 -> 60 [style=solid label="'*'"]
  61 -> 61 [style=solid label="'('"]
  61 -> 62 [style=solid label="'['"]
  61 -> 63 [style=dashed label="PackageName"]
  61 -> 64 [style=dashed label="QualifiedIdent"]
  61 -> 130 [style=dashed label="Type"]
  61 -> 66 [style=dashed label="TypeName"]
  61 -> 67 [style=dashed label="TypeLit"]
  61 -> 68 [style=dashed label="ArrayType"]
  61 -> 69 [style=dashed label="StructType"]
  61 -> 70 [style=dashed label="PointerType"]
  61 -> 71 [style=dashed label="FunctionType"]
  62 [label="State 62\n\l205 ArrayType: '[' • ArrayLength ']' ElementType\l"]
  62 -> 93 [style=solid label="FUNC"]
  62 -> 57 [style=solid label="STRUCT"]
  62 -> 94 [style=solid label="ID"]
  62 -> 95 [style=solid label="STRING_LIT"]
  62 -> 96 [style=solid label="BINARY_LIT"]
  62 -> 97 [style=solid label="HEX_LIT"]
  62 -> 98 [style=solid label="FLOAT_LIT"]
  62 -> 99 [style=solid label="DEC_LIT"]
  62 -> 100 [style=solid label="'^'"]
  62 -> 101 [style=solid label="'&'"]
  62 -> 102 [style=solid label="'+'"]
  62 -> 103 [style=solid label="'-'"]
  62 -> 104 [style=solid label="'*'"]
  62 -> 105 [style=solid label="'!'"]
  62 -> 106 [style=solid label="'['"]
  62 -> 107 [style=solid label="\"(\""]
  62 -> 63 [style=dashed label="PackageName"]
  62 -> 131 [style=dashed label="Expression"]
  62 -> 110 [style=dashed label="UnaryExpr"]
  62 -> 111 [style=dashed label="unary_op"]
  62 -> 112 [style=dashed label="PrimaryExpr"]
  62 -> 113 [style=dashed label="Operand"]
  62 -> 114 [style=dashed label="Literal"]
  62 -> 115 [style=dashed label="INT_LIT"]
  62 -> 116 [style=dashed label="BasicLit"]
  62 -> 117 [style=dashed label="OperandName"]
  62 -> 118 [style=dashed label="QualifiedIdent"]
  62 -> 119 [style=dashed label="CompositeLit"]
  62 -> 120 [style=dashed label="LiteralType"]
  62 -> 121 [style=dashed label="FunctionLit"]
  62 -> 122 [style=dashed label="TypeName"]
  62 -> 123 [style=dashed label="ArrayType"]
  62 -> 132 [style=dashed label="ArrayLength"]
  62 -> 124 [style=dashed label="StructType"]
  63 [label="State 63\n\l121 QualifiedIdent: PackageName • '.' ID\l"]
  63 -> 133 [style=solid label="'.'"]
  64 [label="State 64\n\l200 TypeName: QualifiedIdent •\l"]
  64 -> "64R200" [style=solid]
 "64R200" [label="R200", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 46 TypeDef: ID Type •\l"]
  65 -> "65R46" [style=solid]
 "65R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l196 Type: TypeName •\l"]
  66 -> "66R196" [style=solid]
 "66R196" [label="R196", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l197 Type: TypeLit •\l"]
  67 -> "67R197" [style=solid]
 "67R197" [label="R197", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l201 TypeLit: ArrayType •\l"]
  68 -> "68R201" [style=solid]
 "68R201" [label="R201", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l202 TypeLit: StructType •\l"]
  69 -> "69R202" [style=solid]
 "69R202" [label="R202", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l203 TypeLit: PointerType •\l"]
  70 -> "70R203" [style=solid]
 "70R203" [label="R203", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l204 TypeLit: FunctionType •\l"]
  71 -> "71R204" [style=solid]
 "71R204" [label="R204", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC • ';'\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC • ')'\l"]
  72 -> 134 [style=solid label="';'"]
  72 -> 135 [style=solid label="')'"]
  73 [label="State 73\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec ';' •\l"]
  73 -> "73R16" [style=solid]
 "73R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l  3 PackageName: ID •\l 40 IdentifierList: ID • STAR_CM_ID\l199 TypeName: ID •\l"]
  74 -> 52 [style=dashed label="STAR_CM_ID"]
  74 -> "74R3" [label="['.']", style=solid]
 "74R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  74 -> "74R19" [style=solid]
 "74R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  74 -> "74R199d" [label="[',']", style=solid]
 "74R199d" [label="R199", fillcolor=5, shape=diamond, style=filled]
  74 -> "74R199" [label="[')']", style=solid]
 "74R199" [label="R199", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l227 ParameterDecl: ELIPSIS • Type\l"]
  75 -> 56 [style=solid label="FUNC"]
  75 -> 57 [style=solid label="STRUCT"]
  75 -> 58 [style=solid label="ID"]
  75 -> 60 [style=solid label="'*'"]
  75 -> 61 [style=solid label="'('"]
  75 -> 62 [style=solid label="'['"]
  75 -> 63 [style=dashed label="PackageName"]
  75 -> 64 [style=dashed label="QualifiedIdent"]
  75 -> 136 [style=dashed label="Type"]
  75 -> 66 [style=dashed label="TypeName"]
  75 -> 67 [style=dashed label="TypeLit"]
  75 -> 68 [style=dashed label="ArrayType"]
  75 -> 69 [style=dashed label="StructType"]
  75 -> 70 [style=dashed label="PointerType"]
  75 -> 71 [style=dashed label="FunctionType"]
  76 [label="State 76\n\l220 Parameters: '(' ')' •\l"]
  76 -> "76R220" [style=solid]
 "76R220" [label="R220", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l225 ParameterDecl: IdentifierList • Type\l226              | IdentifierList • ELIPSIS Type\l"]
  77 -> 56 [style=solid label="FUNC"]
  77 -> 57 [style=solid label="STRUCT"]
  77 -> 58 [style=solid label="ID"]
  77 -> 137 [style=solid label="ELIPSIS"]
  77 -> 60 [style=solid label="'*'"]
  77 -> 61 [style=solid label="'('"]
  77 -> 62 [style=solid label="'['"]
  77 -> 63 [style=dashed label="PackageName"]
  77 -> 64 [style=dashed label="QualifiedIdent"]
  77 -> 138 [style=dashed label="Type"]
  77 -> 66 [style=dashed label="TypeName"]
  77 -> 67 [style=dashed label="TypeLit"]
  77 -> 68 [style=dashed label="ArrayType"]
  77 -> 69 [style=dashed label="StructType"]
  77 -> 70 [style=dashed label="PointerType"]
  77 -> 71 [style=dashed label="FunctionType"]
  78 [label="State 78\n\l224 ParameterDecl: Type •\l"]
  78 -> "78R224" [style=solid]
 "78R224" [label="R224", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l221 Parameters: '(' ParameterList • ')'\l222           | '(' ParameterList • ',' ')'\l"]
  79 -> 139 [style=solid label="','"]
  79 -> 140 [style=solid label="')'"]
  80 [label="State 80\n\l223 ParameterList: ParameterDecl • STAR_CM_ParameterDecl\l"]
  80 -> 141 [style=dashed label="STAR_CM_ParameterDecl"]
  80 -> "80R31" [style=solid]
 "80R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l144 Block: '{' • STAR_Statement_SC '}'\l"]
  81 -> 142 [style=dashed label="STAR_Statement_SC"]
  81 -> "81R29" [style=solid]
 "81R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l140 FunctionDecl: FUNC FunctionName Signature FunctionBody •\l"]
  82 -> "82R140" [style=solid]
 "82R140" [label="R140", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l143 FunctionBody: Block •\l"]
  83 -> "83R143" [style=solid]
 "83R143" [label="R143", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l218 Result: TypeName •\l"]
  84 -> "84R218" [style=solid]
 "84R218" [label="R218", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l219 Result: TypeLit •\l"]
  85 -> "85R219" [style=solid]
 "85R219" [label="R219", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l216 Signature: Parameters Result •\l"]
  86 -> "86R216" [style=solid]
 "86R216" [label="R216", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l217 Result: Parameters •\l"]
  87 -> "87R217" [style=solid]
 "87R217" [label="R217", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 18 STAR_CM_ID: STAR_CM_ID ',' • ID\l"]
  88 -> 143 [style=solid label="ID"]
  89 [label="State 89\n\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC ')' •\l"]
  89 -> "89R38" [style=solid]
 "89R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec • ';'\l"]
  90 -> 144 [style=solid label="';'"]
  91 [label="State 91\n\l 48 VarDecl: VAR '(' STAR_VarSpec_SC ')' •\l"]
  91 -> "91R48" [style=solid]
 "91R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec • ';'\l"]
  92 -> 145 [style=solid label="';'"]
  93 [label="State 93\n\l139 FunctionLit: FUNC • Signature FunctionBody\l"]
  93 -> 49 [style=solid label="'('"]
  93 -> 146 [style=dashed label="Signature"]
  93 -> 51 [style=dashed label="Parameters"]
  94 [label="State 94\n\l  3 PackageName: ID •\l119 OperandName: ID •\l199 TypeName: ID •\l"]
  94 -> "94R3" [label="['.']", style=solid]
 "94R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  94 -> "94R119d" [label="['.']", style=solid]
 "94R119d" [label="R119", fillcolor=5, shape=diamond, style=filled]
  94 -> "94R119" [style=solid]
 "94R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  94 -> "94R199d" [label="['{']", style=solid]
 "94R199d" [label="R199", fillcolor=5, shape=diamond, style=filled]
  95 [label="State 95\n\l118 BasicLit: STRING_LIT •\l"]
  95 -> "95R118" [style=solid]
 "95R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l114 INT_LIT: BINARY_LIT •\l"]
  96 -> "96R114" [style=solid]
 "96R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l115 INT_LIT: HEX_LIT •\l"]
  97 -> "97R115" [style=solid]
 "97R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l117 BasicLit: FLOAT_LIT •\l"]
  98 -> "98R117" [style=solid]
 "98R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l113 INT_LIT: DEC_LIT •\l"]
  99 -> "99R113" [style=solid]
 "99R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 89 unary_op: '^' •\l"]
  100 -> "100R89" [style=solid]
 "100R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 91 unary_op: '&' •\l"]
  101 -> "101R91" [style=solid]
 "101R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 86 unary_op: '+' •\l"]
  102 -> "102R86" [style=solid]
 "102R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 87 unary_op: '-' •\l"]
  103 -> "103R87" [style=solid]
 "103R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 90 unary_op: '*' •\l"]
  104 -> "104R90" [style=solid]
 "104R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 88 unary_op: '!' •\l"]
  105 -> "105R88" [style=solid]
 "105R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l125 LiteralType: '[' • ELIPSIS ']' ElementType\l205 ArrayType: '[' • ArrayLength ']' ElementType\l"]
  106 -> 93 [style=solid label="FUNC"]
  106 -> 57 [style=solid label="STRUCT"]
  106 -> 94 [style=solid label="ID"]
  106 -> 95 [style=solid label="STRING_LIT"]
  106 -> 96 [style=solid label="BINARY_LIT"]
  106 -> 97 [style=solid label="HEX_LIT"]
  106 -> 98 [style=solid label="FLOAT_LIT"]
  106 -> 99 [style=solid label="DEC_LIT"]
  106 -> 147 [style=solid label="ELIPSIS"]
  106 -> 100 [style=solid label="'^'"]
  106 -> 101 [style=solid label="'&'"]
  106 -> 102 [style=solid label="'+'"]
  106 -> 103 [style=solid label="'-'"]
  106 -> 104 [style=solid label="'*'"]
  106 -> 105 [style=solid label="'!'"]
  106 -> 106 [style=solid label="'['"]
  106 -> 107 [style=solid label="\"(\""]
  106 -> 63 [style=dashed label="PackageName"]
  106 -> 131 [style=dashed label="Expression"]
  106 -> 110 [style=dashed label="UnaryExpr"]
  106 -> 111 [style=dashed label="unary_op"]
  106 -> 112 [style=dashed label="PrimaryExpr"]
  106 -> 113 [style=dashed label="Operand"]
  106 -> 114 [style=dashed label="Literal"]
  106 -> 115 [style=dashed label="INT_LIT"]
  106 -> 116 [style=dashed label="BasicLit"]
  106 -> 117 [style=dashed label="OperandName"]
  106 -> 118 [style=dashed label="QualifiedIdent"]
  106 -> 119 [style=dashed label="CompositeLit"]
  106 -> 120 [style=dashed label="LiteralType"]
  106 -> 121 [style=dashed label="FunctionLit"]
  106 -> 122 [style=dashed label="TypeName"]
  106 -> 123 [style=dashed label="ArrayType"]
  106 -> 132 [style=dashed label="ArrayLength"]
  106 -> 124 [style=dashed label="StructType"]
  107 [label="State 107\n\l109 Operand: \"(\" • Expression \")\"\l"]
  107 -> 93 [style=solid label="FUNC"]
  107 -> 57 [style=solid label="STRUCT"]
  107 -> 94 [style=solid label="ID"]
  107 -> 95 [style=solid label="STRING_LIT"]
  107 -> 96 [style=solid label="BINARY_LIT"]
  107 -> 97 [style=solid label="HEX_LIT"]
  107 -> 98 [style=solid label="FLOAT_LIT"]
  107 -> 99 [style=solid label="DEC_LIT"]
  107 -> 100 [style=solid label="'^'"]
  107 -> 101 [style=solid label="'&'"]
  107 -> 102 [style=solid label="'+'"]
  107 -> 103 [style=solid label="'-'"]
  107 -> 104 [style=solid label="'*'"]
  107 -> 105 [style=solid label="'!'"]
  107 -> 106 [style=solid label="'['"]
  107 -> 107 [style=solid label="\"(\""]
  107 -> 63 [style=dashed label="PackageName"]
  107 -> 148 [style=dashed label="Expression"]
  107 -> 110 [style=dashed label="UnaryExpr"]
  107 -> 111 [style=dashed label="unary_op"]
  107 -> 112 [style=dashed label="PrimaryExpr"]
  107 -> 113 [style=dashed label="Operand"]
  107 -> 114 [style=dashed label="Literal"]
  107 -> 115 [style=dashed label="INT_LIT"]
  107 -> 116 [style=dashed label="BasicLit"]
  107 -> 117 [style=dashed label="OperandName"]
  107 -> 118 [style=dashed label="QualifiedIdent"]
  107 -> 119 [style=dashed label="CompositeLit"]
  107 -> 120 [style=dashed label="LiteralType"]
  107 -> 121 [style=dashed label="FunctionLit"]
  107 -> 122 [style=dashed label="TypeName"]
  107 -> 123 [style=dashed label="ArrayType"]
  107 -> 124 [style=dashed label="StructType"]
  108 [label="State 108\n\l 49 VarSpec: IdentifierList \"=\" ExpressionList •\l"]
  108 -> "108R49" [style=solid]
 "108R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l"]
  109 -> 149 [style=solid label="\"||\""]
  109 -> 150 [style=solid label="\"&&\""]
  109 -> 151 [style=solid label="'|'"]
  109 -> 152 [style=solid label="'^'"]
  109 -> 153 [style=solid label="'&'"]
  109 -> 154 [style=solid label="\"==\""]
  109 -> 155 [style=solid label="\"!=\""]
  109 -> 156 [style=solid label="'>'"]
  109 -> 157 [style=solid label="'<'"]
  109 -> 158 [style=solid label="\">=\""]
  109 -> 159 [style=solid label="\"<=\""]
  109 -> 160 [style=solid label="\">>\""]
  109 -> 161 [style=solid label="\"<<\""]
  109 -> 162 [style=solid label="'+'"]
  109 -> 163 [style=solid label="'-'"]
  109 -> 164 [style=solid label="'*'"]
  109 -> 165 [style=solid label="'/'"]
  109 -> 166 [style=solid label="'%'"]
  109 -> 167 [style=dashed label="STAR_CM_EXP"]
  109 -> 168 [style=dashed label="binary_op"]
  109 -> 169 [style=dashed label="rel_op"]
  109 -> 170 [style=dashed label="add_op"]
  109 -> 171 [style=dashed label="mul_op"]
  109 -> "109R25" [style=solid]
 "109R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 51 Expression: UnaryExpr •\l"]
  110 -> "110R51" [style=solid]
 "110R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 54 UnaryExpr: unary_op • UnaryExpr\l"]
  111 -> 93 [style=solid label="FUNC"]
  111 -> 57 [style=solid label="STRUCT"]
  111 -> 94 [style=solid label="ID"]
  111 -> 95 [style=solid label="STRING_LIT"]
  111 -> 96 [style=solid label="BINARY_LIT"]
  111 -> 97 [style=solid label="HEX_LIT"]
  111 -> 98 [style=solid label="FLOAT_LIT"]
  111 -> 99 [style=solid label="DEC_LIT"]
  111 -> 100 [style=solid label="'^'"]
  111 -> 101 [style=solid label="'&'"]
  111 -> 102 [style=solid label="'+'"]
  111 -> 103 [style=solid label="'-'"]
  111 -> 104 [style=solid label="'*'"]
  111 -> 105 [style=solid label="'!'"]
  111 -> 106 [style=solid label="'['"]
  111 -> 107 [style=solid label="\"(\""]
  111 -> 63 [style=dashed label="PackageName"]
  111 -> 172 [style=dashed label="UnaryExpr"]
  111 -> 111 [style=dashed label="unary_op"]
  111 -> 112 [style=dashed label="PrimaryExpr"]
  111 -> 113 [style=dashed label="Operand"]
  111 -> 114 [style=dashed label="Literal"]
  111 -> 115 [style=dashed label="INT_LIT"]
  111 -> 116 [style=dashed label="BasicLit"]
  111 -> 117 [style=dashed label="OperandName"]
  111 -> 118 [style=dashed label="QualifiedIdent"]
  111 -> 119 [style=dashed label="CompositeLit"]
  111 -> 120 [style=dashed label="LiteralType"]
  111 -> 121 [style=dashed label="FunctionLit"]
  111 -> 122 [style=dashed label="TypeName"]
  111 -> 123 [style=dashed label="ArrayType"]
  111 -> 124 [style=dashed label="StructType"]
  112 [label="State 112\n\l 53 UnaryExpr: PrimaryExpr •\l 93 PrimaryExpr: PrimaryExpr • Index\l 94            | PrimaryExpr • Selector\l 95            | PrimaryExpr • Arguments\l"]
  112 -> 173 [style=solid label="'('"]
  112 -> 174 [style=solid label="'.'"]
  112 -> 175 [style=solid label="'['"]
  112 -> 176 [style=dashed label="Selector"]
  112 -> 177 [style=dashed label="Index"]
  112 -> 178 [style=dashed label="Arguments"]
  112 -> "112R53" [style=solid]
 "112R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  113 [label="State 113\n\l 92 PrimaryExpr: Operand •\l"]
  113 -> "113R92" [style=solid]
 "113R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l107 Operand: Literal •\l"]
  114 -> "114R107" [style=solid]
 "114R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l116 BasicLit: INT_LIT •\l"]
  115 -> "115R116" [style=solid]
 "115R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l110 Literal: BasicLit •\l"]
  116 -> "116R110" [style=solid]
 "116R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l108 Operand: OperandName •\l"]
  117 -> "117R108" [style=solid]
 "117R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l120 OperandName: QualifiedIdent •\l200 TypeName: QualifiedIdent •\l"]
  118 -> "118R120" [style=solid]
 "118R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  118 -> "118R200d" [label="['{']", style=solid]
 "118R200d" [label="R200", fillcolor=5, shape=diamond, style=filled]
  119 [label="State 119\n\l111 Literal: CompositeLit •\l"]
  119 -> "119R111" [style=solid]
 "119R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l122 CompositeLit: LiteralType • LiteralValue\l"]
  120 -> 179 [style=solid label="'{'"]
  120 -> 180 [style=dashed label="LiteralValue"]
  121 [label="State 121\n\l112 Literal: FunctionLit •\l"]
  121 -> "121R112" [style=solid]
 "121R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l126 LiteralType: TypeName •\l"]
  122 -> "122R126" [style=solid]
 "122R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l124 LiteralType: ArrayType •\l"]
  123 -> "123R124" [style=solid]
 "123R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l123 LiteralType: StructType •\l"]
  124 -> "124R123" [style=solid]
 "124R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l214 FunctionType: FUNC Signature •\l"]
  125 -> "125R214" [style=solid]
 "125R214" [label="R214", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l208 StructType: STRUCT '{' • STAR_FieldDecl_SC '}'\l"]
  126 -> 181 [style=dashed label="STAR_FieldDecl_SC"]
  126 -> "126R33" [style=solid]
 "126R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 45 AliasDecl: ID '=' Type •\l"]
  127 -> "127R45" [style=solid]
 "127R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l213 BaseType: Type •\l"]
  128 -> "128R213" [style=solid]
 "128R213" [label="R213", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l212 PointerType: '*' BaseType •\l"]
  129 -> "129R212" [style=solid]
 "129R212" [label="R212", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l198 Type: '(' Type • ')'\l"]
  130 -> 182 [style=solid label="')'"]
  131 [label="State 131\n\l 52 Expression: Expression • binary_op Expression\l206 ArrayLength: Expression •\l"]
  131 -> 149 [style=solid label="\"||\""]
  131 -> 150 [style=solid label="\"&&\""]
  131 -> 151 [style=solid label="'|'"]
  131 -> 152 [style=solid label="'^'"]
  131 -> 153 [style=solid label="'&'"]
  131 -> 154 [style=solid label="\"==\""]
  131 -> 155 [style=solid label="\"!=\""]
  131 -> 156 [style=solid label="'>'"]
  131 -> 157 [style=solid label="'<'"]
  131 -> 158 [style=solid label="\">=\""]
  131 -> 159 [style=solid label="\"<=\""]
  131 -> 160 [style=solid label="\">>\""]
  131 -> 161 [style=solid label="\"<<\""]
  131 -> 162 [style=solid label="'+'"]
  131 -> 163 [style=solid label="'-'"]
  131 -> 164 [style=solid label="'*'"]
  131 -> 165 [style=solid label="'/'"]
  131 -> 166 [style=solid label="'%'"]
  131 -> 168 [style=dashed label="binary_op"]
  131 -> 169 [style=dashed label="rel_op"]
  131 -> 170 [style=dashed label="add_op"]
  131 -> 171 [style=dashed label="mul_op"]
  131 -> "131R206" [style=solid]
 "131R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l205 ArrayType: '[' ArrayLength • ']' ElementType\l"]
  132 -> 183 [style=solid label="']'"]
  133 [label="State 133\n\l121 QualifiedIdent: PackageName '.' • ID\l"]
  133 -> 184 [style=solid label="ID"]
  134 [label="State 134\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC ';' •\l"]
  134 -> "134R26" [style=solid]
 "134R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC ')' •\l"]
  135 -> "135R42" [style=solid]
 "135R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l227 ParameterDecl: ELIPSIS Type •\l"]
  136 -> "136R227" [style=solid]
 "136R227" [label="R227", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l226 ParameterDecl: IdentifierList ELIPSIS • Type\l"]
  137 -> 56 [style=solid label="FUNC"]
  137 -> 57 [style=solid label="STRUCT"]
  137 -> 58 [style=solid label="ID"]
  137 -> 60 [style=solid label="'*'"]
  137 -> 61 [style=solid label="'('"]
  137 -> 62 [style=solid label="'['"]
  137 -> 63 [style=dashed label="PackageName"]
  137 -> 64 [style=dashed label="QualifiedIdent"]
  137 -> 185 [style=dashed label="Type"]
  137 -> 66 [style=dashed label="TypeName"]
  137 -> 67 [style=dashed label="TypeLit"]
  137 -> 68 [style=dashed label="ArrayType"]
  137 -> 69 [style=dashed label="StructType"]
  137 -> 70 [style=dashed label="PointerType"]
  137 -> 71 [style=dashed label="FunctionType"]
  138 [label="State 138\n\l225 ParameterDecl: IdentifierList Type •\l"]
  138 -> "138R225" [style=solid]
 "138R225" [label="R225", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l222 Parameters: '(' ParameterList ',' • ')'\l"]
  139 -> 186 [style=solid label="')'"]
  140 [label="State 140\n\l221 Parameters: '(' ParameterList ')' •\l"]
  140 -> "140R221" [style=solid]
 "140R221" [label="R221", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl • ',' ParameterDecl\l223 ParameterList: ParameterDecl STAR_CM_ParameterDecl •\l"]
  141 -> 187 [style=solid label="','"]
  141 -> "141R223d" [label="[',']", style=solid]
 "141R223d" [label="R223", fillcolor=5, shape=diamond, style=filled]
  141 -> "141R223" [style=solid]
 "141R223" [label="R223", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 28 STAR_Statement_SC: STAR_Statement_SC • Statement ';'\l144 Block: '{' STAR_Statement_SC • '}'\l"]
  142 -> 188 [style=solid label="BREAK"]
  142 -> 93 [style=solid label="FUNC"]
  142 -> 57 [style=solid label="STRUCT"]
  142 -> 189 [style=solid label="RETURN"]
  142 -> 190 [style=solid label="GOTO"]
  142 -> 20 [style=solid label="CONST"]
  142 -> 191 [style=solid label="IF"]
  142 -> 192 [style=solid label="CONTINUE"]
  142 -> 193 [style=solid label="FOR"]
  142 -> 194 [style=solid label="ID"]
  142 -> 21 [style=solid label="VAR"]
  142 -> 95 [style=solid label="STRING_LIT"]
  142 -> 96 [style=solid label="BINARY_LIT"]
  142 -> 97 [style=solid label="HEX_LIT"]
  142 -> 98 [style=solid label="FLOAT_LIT"]
  142 -> 99 [style=solid label="DEC_LIT"]
  142 -> 195 [style=solid label="GO"]
  142 -> 196 [style=solid label="FALLTHROUGH"]
  142 -> 22 [style=solid label="TYPE_TOK"]
  142 -> 100 [style=solid label="'^'"]
  142 -> 101 [style=solid label="'&'"]
  142 -> 102 [style=solid label="'+'"]
  142 -> 103 [style=solid label="'-'"]
  142 -> 104 [style=solid label="'*'"]
  142 -> 105 [style=solid label="'!'"]
  142 -> 106 [style=solid label="'['"]
  142 -> 107 [style=solid label="\"(\""]
  142 -> 81 [style=solid label="'{'"]
  142 -> 197 [style=solid label="'}'"]
  142 -> 63 [style=dashed label="PackageName"]
  142 -> 198 [style=dashed label="Declaration"]
  142 -> 25 [style=dashed label="ConstDecl"]
  142 -> 26 [style=dashed label="TypeDecl"]
  142 -> 27 [style=dashed label="VarDecl"]
  142 -> 199 [style=dashed label="ExpressionList"]
  142 -> 200 [style=dashed label="Expression"]
  142 -> 110 [style=dashed label="UnaryExpr"]
  142 -> 111 [style=dashed label="unary_op"]
  142 -> 112 [style=dashed label="PrimaryExpr"]
  142 -> 113 [style=dashed label="Operand"]
  142 -> 114 [style=dashed label="Literal"]
  142 -> 115 [style=dashed label="INT_LIT"]
  142 -> 116 [style=dashed label="BasicLit"]
  142 -> 117 [style=dashed label="OperandName"]
  142 -> 118 [style=dashed label="QualifiedIdent"]
  142 -> 119 [style=dashed label="CompositeLit"]
  142 -> 120 [style=dashed label="LiteralType"]
  142 -> 121 [style=dashed label="FunctionLit"]
  142 -> 201 [style=dashed label="Block"]
  142 -> 202 [style=dashed label="Statement"]
  142 -> 203 [style=dashed label="LabeledStmt"]
  142 -> 204 [style=dashed label="Label"]
  142 -> 205 [style=dashed label="SimpleStmt"]
  142 -> 206 [style=dashed label="EmptyStmt"]
  142 -> 207 [style=dashed label="ExpressionStmt"]
  142 -> 208 [style=dashed label="IncDecStmt"]
  142 -> 209 [style=dashed label="Assignment"]
  142 -> 210 [style=dashed label="IfStmt"]
  142 -> 211 [style=dashed label="ForStmt"]
  142 -> 212 [style=dashed label="GoStmt"]
  142 -> 213 [style=dashed label="ReturnStmt"]
  142 -> 214 [style=dashed label="BreakStmt"]
  142 -> 215 [style=dashed label="ContinueStmt"]
  142 -> 216 [style=dashed label="GotoStmt"]
  142 -> 217 [style=dashed label="FallthroughStmt"]
  142 -> 122 [style=dashed label="TypeName"]
  142 -> 123 [style=dashed label="ArrayType"]
  142 -> 124 [style=dashed label="StructType"]
  142 -> "142R163" [style=solid]
 "142R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l 18 STAR_CM_ID: STAR_CM_ID ',' ID •\l"]
  143 -> "143R18" [style=solid]
 "143R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec ';' •\l"]
  144 -> "144R20" [style=solid]
 "144R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec ';' •\l"]
  145 -> "145R22" [style=solid]
 "145R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l139 FunctionLit: FUNC Signature • FunctionBody\l"]
  146 -> 81 [style=solid label="'{'"]
  146 -> 218 [style=dashed label="FunctionBody"]
  146 -> 83 [style=dashed label="Block"]
  147 [label="State 147\n\l125 LiteralType: '[' ELIPSIS • ']' ElementType\l"]
  147 -> 219 [style=solid label="']'"]
  148 [label="State 148\n\l 52 Expression: Expression • binary_op Expression\l109 Operand: \"(\" Expression • \")\"\l"]
  148 -> 149 [style=solid label="\"||\""]
  148 -> 150 [style=solid label="\"&&\""]
  148 -> 151 [style=solid label="'|'"]
  148 -> 152 [style=solid label="'^'"]
  148 -> 153 [style=solid label="'&'"]
  148 -> 154 [style=solid label="\"==\""]
  148 -> 155 [style=solid label="\"!=\""]
  148 -> 156 [style=solid label="'>'"]
  148 -> 157 [style=solid label="'<'"]
  148 -> 158 [style=solid label="\">=\""]
  148 -> 159 [style=solid label="\"<=\""]
  148 -> 160 [style=solid label="\">>\""]
  148 -> 161 [style=solid label="\"<<\""]
  148 -> 162 [style=solid label="'+'"]
  148 -> 163 [style=solid label="'-'"]
  148 -> 164 [style=solid label="'*'"]
  148 -> 165 [style=solid label="'/'"]
  148 -> 166 [style=solid label="'%'"]
  148 -> 220 [style=solid label="\")\""]
  148 -> 168 [style=dashed label="binary_op"]
  148 -> 169 [style=dashed label="rel_op"]
  148 -> 170 [style=dashed label="add_op"]
  148 -> 171 [style=dashed label="mul_op"]
  149 [label="State 149\n\l 55 binary_op: \"||\" •\l"]
  149 -> "149R55" [style=solid]
 "149R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 56 binary_op: \"&&\" •\l"]
  150 -> "150R56" [style=solid]
 "150R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 68 add_op: '|' •\l"]
  151 -> "151R68" [style=solid]
 "151R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 69 add_op: '^' •\l"]
  152 -> "152R69" [style=solid]
 "152R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 85 mul_op: '&' •\l"]
  153 -> "153R85" [style=solid]
 "153R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 60 rel_op: \"==\" •\l"]
  154 -> "154R60" [style=solid]
 "154R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 61 rel_op: \"!=\" •\l"]
  155 -> "155R61" [style=solid]
 "155R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 64 rel_op: '>' •\l"]
  156 -> "156R64" [style=solid]
 "156R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 62 rel_op: '<' •\l"]
  157 -> "157R62" [style=solid]
 "157R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 65 rel_op: \">=\" •\l"]
  158 -> "158R65" [style=solid]
 "158R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 63 rel_op: \"<=\" •\l"]
  159 -> "159R63" [style=solid]
 "159R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 84 mul_op: \">>\" •\l"]
  160 -> "160R84" [style=solid]
 "160R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 83 mul_op: \"<<\" •\l"]
  161 -> "161R83" [style=solid]
 "161R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 66 add_op: '+' •\l"]
  162 -> "162R66" [style=solid]
 "162R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 67 add_op: '-' •\l"]
  163 -> "163R67" [style=solid]
 "163R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 80 mul_op: '*' •\l"]
  164 -> "164R80" [style=solid]
 "164R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 81 mul_op: '/' •\l"]
  165 -> "165R81" [style=solid]
 "165R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l 82 mul_op: '%' •\l"]
  166 -> "166R82" [style=solid]
 "166R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 24 STAR_CM_EXP: STAR_CM_EXP • ',' Expression\l 50 ExpressionList: Expression STAR_CM_EXP •\l"]
  167 -> 221 [style=solid label="','"]
  167 -> "167R50d" [label="[',']", style=solid]
 "167R50d" [label="R50", fillcolor=5, shape=diamond, style=filled]
  167 -> "167R50" [style=solid]
 "167R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l 52 Expression: Expression binary_op • Expression\l"]
  168 -> 93 [style=solid label="FUNC"]
  168 -> 57 [style=solid label="STRUCT"]
  168 -> 94 [style=solid label="ID"]
  168 -> 95 [style=solid label="STRING_LIT"]
  168 -> 96 [style=solid label="BINARY_LIT"]
  168 -> 97 [style=solid label="HEX_LIT"]
  168 -> 98 [style=solid label="FLOAT_LIT"]
  168 -> 99 [style=solid label="DEC_LIT"]
  168 -> 100 [style=solid label="'^'"]
  168 -> 101 [style=solid label="'&'"]
  168 -> 102 [style=solid label="'+'"]
  168 -> 103 [style=solid label="'-'"]
  168 -> 104 [style=solid label="'*'"]
  168 -> 105 [style=solid label="'!'"]
  168 -> 106 [style=solid label="'['"]
  168 -> 107 [style=solid label="\"(\""]
  168 -> 63 [style=dashed label="PackageName"]
  168 -> 222 [style=dashed label="Expression"]
  168 -> 110 [style=dashed label="UnaryExpr"]
  168 -> 111 [style=dashed label="unary_op"]
  168 -> 112 [style=dashed label="PrimaryExpr"]
  168 -> 113 [style=dashed label="Operand"]
  168 -> 114 [style=dashed label="Literal"]
  168 -> 115 [style=dashed label="INT_LIT"]
  168 -> 116 [style=dashed label="BasicLit"]
  168 -> 117 [style=dashed label="OperandName"]
  168 -> 118 [style=dashed label="QualifiedIdent"]
  168 -> 119 [style=dashed label="CompositeLit"]
  168 -> 120 [style=dashed label="LiteralType"]
  168 -> 121 [style=dashed label="FunctionLit"]
  168 -> 122 [style=dashed label="TypeName"]
  168 -> 123 [style=dashed label="ArrayType"]
  168 -> 124 [style=dashed label="StructType"]
  169 [label="State 169\n\l 57 binary_op: rel_op •\l"]
  169 -> "169R57" [style=solid]
 "169R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 58 binary_op: add_op •\l"]
  170 -> "170R58" [style=solid]
 "170R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  171 [label="State 171\n\l 59 binary_op: mul_op •\l"]
  171 -> "171R59" [style=solid]
 "171R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 54 UnaryExpr: unary_op UnaryExpr •\l"]
  172 -> "172R54" [style=solid]
 "172R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  173 [label="State 173\n\l 98 Arguments: '(' • ')'\l 99          | '(' • ArgumentInBracket ')'\l"]
  173 -> 56 [style=solid label="FUNC"]
  173 -> 57 [style=solid label="STRUCT"]
  173 -> 58 [style=solid label="ID"]
  173 -> 60 [style=solid label="'*'"]
  173 -> 61 [style=solid label="'('"]
  173 -> 223 [style=solid label="')'"]
  173 -> 62 [style=solid label="'['"]
  173 -> 63 [style=dashed label="PackageName"]
  173 -> 224 [style=dashed label="ArgumentInBracket"]
  173 -> 225 [style=dashed label="ArgumentInBracketFirst"]
  173 -> 64 [style=dashed label="QualifiedIdent"]
  173 -> 226 [style=dashed label="Type"]
  173 -> 66 [style=dashed label="TypeName"]
  173 -> 67 [style=dashed label="TypeLit"]
  173 -> 68 [style=dashed label="ArrayType"]
  173 -> 69 [style=dashed label="StructType"]
  173 -> 70 [style=dashed label="PointerType"]
  173 -> 71 [style=dashed label="FunctionType"]
  174 [label="State 174\n\l 96 Selector: '.' • ID\l"]
  174 -> 227 [style=solid label="ID"]
  175 [label="State 175\n\l 97 Index: '[' • Expression ']'\l"]
  175 -> 93 [style=solid label="FUNC"]
  175 -> 57 [style=solid label="STRUCT"]
  175 -> 94 [style=solid label="ID"]
  175 -> 95 [style=solid label="STRING_LIT"]
  175 -> 96 [style=solid label="BINARY_LIT"]
  175 -> 97 [style=solid label="HEX_LIT"]
  175 -> 98 [style=solid label="FLOAT_LIT"]
  175 -> 99 [style=solid label="DEC_LIT"]
  175 -> 100 [style=solid label="'^'"]
  175 -> 101 [style=solid label="'&'"]
  175 -> 102 [style=solid label="'+'"]
  175 -> 103 [style=solid label="'-'"]
  175 -> 104 [style=solid label="'*'"]
  175 -> 105 [style=solid label="'!'"]
  175 -> 106 [style=solid label="'['"]
  175 -> 107 [style=solid label="\"(\""]
  175 -> 63 [style=dashed label="PackageName"]
  175 -> 228 [style=dashed label="Expression"]
  175 -> 110 [style=dashed label="UnaryExpr"]
  175 -> 111 [style=dashed label="unary_op"]
  175 -> 112 [style=dashed label="PrimaryExpr"]
  175 -> 113 [style=dashed label="Operand"]
  175 -> 114 [style=dashed label="Literal"]
  175 -> 115 [style=dashed label="INT_LIT"]
  175 -> 116 [style=dashed label="BasicLit"]
  175 -> 117 [style=dashed label="OperandName"]
  175 -> 118 [style=dashed label="QualifiedIdent"]
  175 -> 119 [style=dashed label="CompositeLit"]
  175 -> 120 [style=dashed label="LiteralType"]
  175 -> 121 [style=dashed label="FunctionLit"]
  175 -> 122 [style=dashed label="TypeName"]
  175 -> 123 [style=dashed label="ArrayType"]
  175 -> 124 [style=dashed label="StructType"]
  176 [label="State 176\n\l 94 PrimaryExpr: PrimaryExpr Selector •\l"]
  176 -> "176R94" [style=solid]
 "176R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 93 PrimaryExpr: PrimaryExpr Index •\l"]
  177 -> "177R93" [style=solid]
 "177R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 95 PrimaryExpr: PrimaryExpr Arguments •\l"]
  178 -> "178R95" [style=solid]
 "178R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  179 [label="State 179\n\l127 LiteralValue: '{' • '}'\l128             | '{' • ElementList '}'\l129             | '{' • ElementList ',' '}'\l"]
  179 -> 93 [style=solid label="FUNC"]
  179 -> 57 [style=solid label="STRUCT"]
  179 -> 94 [style=solid label="ID"]
  179 -> 95 [style=solid label="STRING_LIT"]
  179 -> 96 [style=solid label="BINARY_LIT"]
  179 -> 97 [style=solid label="HEX_LIT"]
  179 -> 98 [style=solid label="FLOAT_LIT"]
  179 -> 99 [style=solid label="DEC_LIT"]
  179 -> 100 [style=solid label="'^'"]
  179 -> 101 [style=solid label="'&'"]
  179 -> 102 [style=solid label="'+'"]
  179 -> 103 [style=solid label="'-'"]
  179 -> 104 [style=solid label="'*'"]
  179 -> 105 [style=solid label="'!'"]
  179 -> 106 [style=solid label="'['"]
  179 -> 107 [style=solid label="\"(\""]
  179 -> 179 [style=solid label="'{'"]
  179 -> 229 [style=solid label="'}'"]
  179 -> 63 [style=dashed label="PackageName"]
  179 -> 230 [style=dashed label="Expression"]
  179 -> 110 [style=dashed label="UnaryExpr"]
  179 -> 111 [style=dashed label="unary_op"]
  179 -> 112 [style=dashed label="PrimaryExpr"]
  179 -> 113 [style=dashed label="Operand"]
  179 -> 114 [style=dashed label="Literal"]
  179 -> 115 [style=dashed label="INT_LIT"]
  179 -> 116 [style=dashed label="BasicLit"]
  179 -> 117 [style=dashed label="OperandName"]
  179 -> 118 [style=dashed label="QualifiedIdent"]
  179 -> 119 [style=dashed label="CompositeLit"]
  179 -> 120 [style=dashed label="LiteralType"]
  179 -> 231 [style=dashed label="LiteralValue"]
  179 -> 232 [style=dashed label="ElementList"]
  179 -> 233 [style=dashed label="KeyedElement"]
  179 -> 234 [style=dashed label="Key"]
  179 -> 235 [style=dashed label="Element"]
  179 -> 121 [style=dashed label="FunctionLit"]
  179 -> 122 [style=dashed label="TypeName"]
  179 -> 123 [style=dashed label="ArrayType"]
  179 -> 124 [style=dashed label="StructType"]
  180 [label="State 180\n\l122 CompositeLit: LiteralType LiteralValue •\l"]
  180 -> "180R122" [style=solid]
 "180R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC • FieldDecl ';'\l208 StructType: STRUCT '{' STAR_FieldDecl_SC • '}'\l"]
  181 -> 34 [style=solid label="ID"]
  181 -> 236 [style=solid label="'}'"]
  181 -> 237 [style=dashed label="IdentifierList"]
  181 -> 238 [style=dashed label="FieldDecl"]
  182 [label="State 182\n\l198 Type: '(' Type ')' •\l"]
  182 -> "182R198" [style=solid]
 "182R198" [label="R198", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l205 ArrayType: '[' ArrayLength ']' • ElementType\l"]
  183 -> 56 [style=solid label="FUNC"]
  183 -> 57 [style=solid label="STRUCT"]
  183 -> 58 [style=solid label="ID"]
  183 -> 60 [style=solid label="'*'"]
  183 -> 61 [style=solid label="'('"]
  183 -> 62 [style=solid label="'['"]
  183 -> 63 [style=dashed label="PackageName"]
  183 -> 64 [style=dashed label="QualifiedIdent"]
  183 -> 239 [style=dashed label="Type"]
  183 -> 66 [style=dashed label="TypeName"]
  183 -> 67 [style=dashed label="TypeLit"]
  183 -> 68 [style=dashed label="ArrayType"]
  183 -> 240 [style=dashed label="ElementType"]
  183 -> 69 [style=dashed label="StructType"]
  183 -> 70 [style=dashed label="PointerType"]
  183 -> 71 [style=dashed label="FunctionType"]
  184 [label="State 184\n\l121 QualifiedIdent: PackageName '.' ID •\l"]
  184 -> "184R121" [style=solid]
 "184R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  185 [label="State 185\n\l226 ParameterDecl: IdentifierList ELIPSIS Type •\l"]
  185 -> "185R226" [style=solid]
 "185R226" [label="R226", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l222 Parameters: '(' ParameterList ',' ')' •\l"]
  186 -> "186R222" [style=solid]
 "186R222" [label="R222", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' • ParameterDecl\l"]
  187 -> 56 [style=solid label="FUNC"]
  187 -> 57 [style=solid label="STRUCT"]
  187 -> 74 [style=solid label="ID"]
  187 -> 75 [style=solid label="ELIPSIS"]
  187 -> 60 [style=solid label="'*'"]
  187 -> 61 [style=solid label="'('"]
  187 -> 62 [style=solid label="'['"]
  187 -> 63 [style=dashed label="PackageName"]
  187 -> 77 [style=dashed label="IdentifierList"]
  187 -> 64 [style=dashed label="QualifiedIdent"]
  187 -> 78 [style=dashed label="Type"]
  187 -> 66 [style=dashed label="TypeName"]
  187 -> 67 [style=dashed label="TypeLit"]
  187 -> 68 [style=dashed label="ArrayType"]
  187 -> 69 [style=dashed label="StructType"]
  187 -> 70 [style=dashed label="PointerType"]
  187 -> 71 [style=dashed label="FunctionType"]
  187 -> 241 [style=dashed label="ParameterDecl"]
  188 [label="State 188\n\l190 BreakStmt: BREAK • Label\l191          | BREAK •\l"]
  188 -> 242 [style=solid label="ID"]
  188 -> 243 [style=dashed label="Label"]
  188 -> "188R191" [style=solid]
 "188R191" [label="R191", fillcolor=3, shape=diamond, style=filled]
  189 [label="State 189\n\l188 ReturnStmt: RETURN • ExpressionList\l189           | RETURN •\l"]
  189 -> 93 [style=solid label="FUNC"]
  189 -> 57 [style=solid label="STRUCT"]
  189 -> 94 [style=solid label="ID"]
  189 -> 95 [style=solid label="STRING_LIT"]
  189 -> 96 [style=solid label="BINARY_LIT"]
  189 -> 97 [style=solid label="HEX_LIT"]
  189 -> 98 [style=solid label="FLOAT_LIT"]
  189 -> 99 [style=solid label="DEC_LIT"]
  189 -> 100 [style=solid label="'^'"]
  189 -> 101 [style=solid label="'&'"]
  189 -> 102 [style=solid label="'+'"]
  189 -> 103 [style=solid label="'-'"]
  189 -> 104 [style=solid label="'*'"]
  189 -> 105 [style=solid label="'!'"]
  189 -> 106 [style=solid label="'['"]
  189 -> 107 [style=solid label="\"(\""]
  189 -> 63 [style=dashed label="PackageName"]
  189 -> 244 [style=dashed label="ExpressionList"]
  189 -> 109 [style=dashed label="Expression"]
  189 -> 110 [style=dashed label="UnaryExpr"]
  189 -> 111 [style=dashed label="unary_op"]
  189 -> 112 [style=dashed label="PrimaryExpr"]
  189 -> 113 [style=dashed label="Operand"]
  189 -> 114 [style=dashed label="Literal"]
  189 -> 115 [style=dashed label="INT_LIT"]
  189 -> 116 [style=dashed label="BasicLit"]
  189 -> 117 [style=dashed label="OperandName"]
  189 -> 118 [style=dashed label="QualifiedIdent"]
  189 -> 119 [style=dashed label="CompositeLit"]
  189 -> 120 [style=dashed label="LiteralType"]
  189 -> 121 [style=dashed label="FunctionLit"]
  189 -> 122 [style=dashed label="TypeName"]
  189 -> 123 [style=dashed label="ArrayType"]
  189 -> 124 [style=dashed label="StructType"]
  189 -> "189R189" [style=solid]
 "189R189" [label="R189", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l194 GotoStmt: GOTO • Label\l"]
  190 -> 242 [style=solid label="ID"]
  190 -> 245 [style=dashed label="Label"]
  191 [label="State 191\n\l168 IfStmt: IF • Expression Block\l169       | IF • SimpleStmt ';' Expression Block\l170       | IF • SimpleStmt ';' Expression Block ELSE Block\l171       | IF • SimpleStmt ';' Expression Block ELSE IfStmt\l"]
  191 -> 93 [style=solid label="FUNC"]
  191 -> 57 [style=solid label="STRUCT"]
  191 -> 94 [style=solid label="ID"]
  191 -> 95 [style=solid label="STRING_LIT"]
  191 -> 96 [style=solid label="BINARY_LIT"]
  191 -> 97 [style=solid label="HEX_LIT"]
  191 -> 98 [style=solid label="FLOAT_LIT"]
  191 -> 99 [style=solid label="DEC_LIT"]
  191 -> 100 [style=solid label="'^'"]
  191 -> 101 [style=solid label="'&'"]
  191 -> 102 [style=solid label="'+'"]
  191 -> 103 [style=solid label="'-'"]
  191 -> 104 [style=solid label="'*'"]
  191 -> 105 [style=solid label="'!'"]
  191 -> 106 [style=solid label="'['"]
  191 -> 107 [style=solid label="\"(\""]
  191 -> 63 [style=dashed label="PackageName"]
  191 -> 199 [style=dashed label="ExpressionList"]
  191 -> 246 [style=dashed label="Expression"]
  191 -> 110 [style=dashed label="UnaryExpr"]
  191 -> 111 [style=dashed label="unary_op"]
  191 -> 112 [style=dashed label="PrimaryExpr"]
  191 -> 113 [style=dashed label="Operand"]
  191 -> 114 [style=dashed label="Literal"]
  191 -> 115 [style=dashed label="INT_LIT"]
  191 -> 116 [style=dashed label="BasicLit"]
  191 -> 117 [style=dashed label="OperandName"]
  191 -> 118 [style=dashed label="QualifiedIdent"]
  191 -> 119 [style=dashed label="CompositeLit"]
  191 -> 120 [style=dashed label="LiteralType"]
  191 -> 121 [style=dashed label="FunctionLit"]
  191 -> 247 [style=dashed label="SimpleStmt"]
  191 -> 206 [style=dashed label="EmptyStmt"]
  191 -> 207 [style=dashed label="ExpressionStmt"]
  191 -> 208 [style=dashed label="IncDecStmt"]
  191 -> 209 [style=dashed label="Assignment"]
  191 -> 122 [style=dashed label="TypeName"]
  191 -> 123 [style=dashed label="ArrayType"]
  191 -> 124 [style=dashed label="StructType"]
  191 -> "191R163" [style=solid]
 "191R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  192 [label="State 192\n\l192 ContinueStmt: CONTINUE • Label\l193             | CONTINUE •\l"]
  192 -> 242 [style=solid label="ID"]
  192 -> 248 [style=dashed label="Label"]
  192 -> "192R193" [style=solid]
 "192R193" [label="R193", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l172 ForStmt: FOR • Block\l173        | FOR • ForStmtAfter Block\l"]
  193 -> 93 [style=solid label="FUNC"]
  193 -> 57 [style=solid label="STRUCT"]
  193 -> 249 [style=solid label="RANGE"]
  193 -> 94 [style=solid label="ID"]
  193 -> 95 [style=solid label="STRING_LIT"]
  193 -> 96 [style=solid label="BINARY_LIT"]
  193 -> 97 [style=solid label="HEX_LIT"]
  193 -> 98 [style=solid label="FLOAT_LIT"]
  193 -> 99 [style=solid label="DEC_LIT"]
  193 -> 100 [style=solid label="'^'"]
  193 -> 101 [style=solid label="'&'"]
  193 -> 102 [style=solid label="'+'"]
  193 -> 103 [style=solid label="'-'"]
  193 -> 104 [style=solid label="'*'"]
  193 -> 105 [style=solid label="'!'"]
  193 -> 106 [style=solid label="'['"]
  193 -> 107 [style=solid label="\"(\""]
  193 -> 81 [style=solid label="'{'"]
  193 -> 63 [style=dashed label="PackageName"]
  193 -> 250 [style=dashed label="ExpressionList"]
  193 -> 251 [style=dashed label="Expression"]
  193 -> 110 [style=dashed label="UnaryExpr"]
  193 -> 111 [style=dashed label="unary_op"]
  193 -> 112 [style=dashed label="PrimaryExpr"]
  193 -> 113 [style=dashed label="Operand"]
  193 -> 114 [style=dashed label="Literal"]
  193 -> 115 [style=dashed label="INT_LIT"]
  193 -> 116 [style=dashed label="BasicLit"]
  193 -> 117 [style=dashed label="OperandName"]
  193 -> 118 [style=dashed label="QualifiedIdent"]
  193 -> 119 [style=dashed label="CompositeLit"]
  193 -> 120 [style=dashed label="LiteralType"]
  193 -> 121 [style=dashed label="FunctionLit"]
  193 -> 252 [style=dashed label="Block"]
  193 -> 253 [style=dashed label="SimpleStmt"]
  193 -> 206 [style=dashed label="EmptyStmt"]
  193 -> 207 [style=dashed label="ExpressionStmt"]
  193 -> 208 [style=dashed label="IncDecStmt"]
  193 -> 209 [style=dashed label="Assignment"]
  193 -> 254 [style=dashed label="ForStmtAfter"]
  193 -> 255 [style=dashed label="Condition"]
  193 -> 256 [style=dashed label="ForClause"]
  193 -> 257 [style=dashed label="OPT_InitStmt"]
  193 -> 258 [style=dashed label="InitStmt"]
  193 -> 259 [style=dashed label="RangeClause"]
  193 -> 122 [style=dashed label="TypeName"]
  193 -> 123 [style=dashed label="ArrayType"]
  193 -> 124 [style=dashed label="StructType"]
  193 -> "193R163" [style=solid]
 "193R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l  3 PackageName: ID •\l119 OperandName: ID •\l158 Label: ID •\l199 TypeName: ID •\l"]
  194 -> "194R3" [label="['.']", style=solid]
 "194R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  194 -> "194R119d" [label="['.']", style=solid]
 "194R119d" [label="R119", fillcolor=5, shape=diamond, style=filled]
  194 -> "194R119" [style=solid]
 "194R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  194 -> "194R158" [label="[':']", style=solid]
 "194R158" [label="R158", fillcolor=3, shape=diamond, style=filled]
  194 -> "194R199" [label="['{']", style=solid]
 "194R199" [label="R199", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l187 GoStmt: GO • Expression\l"]
  195 -> 93 [style=solid label="FUNC"]
  195 -> 57 [style=solid label="STRUCT"]
  195 -> 94 [style=solid label="ID"]
  195 -> 95 [style=solid label="STRING_LIT"]
  195 -> 96 [style=solid label="BINARY_LIT"]
  195 -> 97 [style=solid label="HEX_LIT"]
  195 -> 98 [style=solid label="FLOAT_LIT"]
  195 -> 99 [style=solid label="DEC_LIT"]
  195 -> 100 [style=solid label="'^'"]
  195 -> 101 [style=solid label="'&'"]
  195 -> 102 [style=solid label="'+'"]
  195 -> 103 [style=solid label="'-'"]
  195 -> 104 [style=solid label="'*'"]
  195 -> 105 [style=solid label="'!'"]
  195 -> 106 [style=solid label="'['"]
  195 -> 107 [style=solid label="\"(\""]
  195 -> 63 [style=dashed label="PackageName"]
  195 -> 260 [style=dashed label="Expression"]
  195 -> 110 [style=dashed label="UnaryExpr"]
  195 -> 111 [style=dashed label="unary_op"]
  195 -> 112 [style=dashed label="PrimaryExpr"]
  195 -> 113 [style=dashed label="Operand"]
  195 -> 114 [style=dashed label="Literal"]
  195 -> 115 [style=dashed label="INT_LIT"]
  195 -> 116 [style=dashed label="BasicLit"]
  195 -> 117 [style=dashed label="OperandName"]
  195 -> 118 [style=dashed label="QualifiedIdent"]
  195 -> 119 [style=dashed label="CompositeLit"]
  195 -> 120 [style=dashed label="LiteralType"]
  195 -> 121 [style=dashed label="FunctionLit"]
  195 -> 122 [style=dashed label="TypeName"]
  195 -> 123 [style=dashed label="ArrayType"]
  195 -> 124 [style=dashed label="StructType"]
  196 [label="State 196\n\l195 FallthroughStmt: FALLTHROUGH •\l"]
  196 -> "196R195" [style=solid]
 "196R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  197 [label="State 197\n\l144 Block: '{' STAR_Statement_SC '}' •\l"]
  197 -> "197R144" [style=solid]
 "197R144" [label="R144", fillcolor=3, shape=diamond, style=filled]
  198 [label="State 198\n\l145 Statement: Declaration •\l"]
  198 -> "198R145" [style=solid]
 "198R145" [label="R145", fillcolor=3, shape=diamond, style=filled]
  199 [label="State 199\n\l167 Assignment: ExpressionList • assign_op ExpressionList\l"]
  199 -> 261 [style=solid label="\"+=\""]
  199 -> 262 [style=solid label="\"-=\""]
  199 -> 263 [style=solid label="\"|=\""]
  199 -> 264 [style=solid label="\"^=\""]
  199 -> 265 [style=solid label="\"*=\""]
  199 -> 266 [style=solid label="\"/=\""]
  199 -> 267 [style=solid label="\"%=\""]
  199 -> 268 [style=solid label="\"<<=\""]
  199 -> 269 [style=solid label="\">>=\""]
  199 -> 270 [style=solid label="\"&=\""]
  199 -> 271 [style=dashed label="assign_op"]
  200 [label="State 200\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l164 ExpressionStmt: Expression •\l165 IncDecStmt: Expression • \"++\"\l166           | Expression • \"--\"\l"]
  200 -> 149 [style=solid label="\"||\""]
  200 -> 150 [style=solid label="\"&&\""]
  200 -> 151 [style=solid label="'|'"]
  200 -> 152 [style=solid label="'^'"]
  200 -> 153 [style=solid label="'&'"]
  200 -> 154 [style=solid label="\"==\""]
  200 -> 155 [style=solid label="\"!=\""]
  200 -> 156 [style=solid label="'>'"]
  200 -> 157 [style=solid label="'<'"]
  200 -> 158 [style=solid label="\">=\""]
  200 -> 159 [style=solid label="\"<=\""]
  200 -> 160 [style=solid label="\">>\""]
  200 -> 161 [style=solid label="\"<<\""]
  200 -> 162 [style=solid label="'+'"]
  200 -> 163 [style=solid label="'-'"]
  200 -> 164 [style=solid label="'*'"]
  200 -> 165 [style=solid label="'/'"]
  200 -> 166 [style=solid label="'%'"]
  200 -> 272 [style=solid label="\"++\""]
  200 -> 273 [style=solid label="\"--\""]
  200 -> 167 [style=dashed label="STAR_CM_EXP"]
  200 -> 168 [style=dashed label="binary_op"]
  200 -> 169 [style=dashed label="rel_op"]
  200 -> 170 [style=dashed label="add_op"]
  200 -> 171 [style=dashed label="mul_op"]
  200 -> "200R25" [style=solid]
 "200R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  200 -> "200R164" [label="[';', '{']", style=solid]
 "200R164" [label="R164", fillcolor=3, shape=diamond, style=filled]
  201 [label="State 201\n\l154 Statement: Block •\l"]
  201 -> "201R154" [style=solid]
 "201R154" [label="R154", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement • ';'\l"]
  202 -> 274 [style=solid label="';'"]
  203 [label="State 203\n\l146 Statement: LabeledStmt •\l"]
  203 -> "203R146" [style=solid]
 "203R146" [label="R146", fillcolor=3, shape=diamond, style=filled]
  204 [label="State 204\n\l157 LabeledStmt: Label • ':' Statement\l"]
  204 -> 275 [style=solid label="':'"]
  205 [label="State 205\n\l147 Statement: SimpleStmt •\l"]
  205 -> "205R147" [style=solid]
 "205R147" [label="R147", fillcolor=3, shape=diamond, style=filled]
  206 [label="State 206\n\l159 SimpleStmt: EmptyStmt •\l"]
  206 -> "206R159" [style=solid]
 "206R159" [label="R159", fillcolor=3, shape=diamond, style=filled]
  207 [label="State 207\n\l160 SimpleStmt: ExpressionStmt •\l"]
  207 -> "207R160" [style=solid]
 "207R160" [label="R160", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l161 SimpleStmt: IncDecStmt •\l"]
  208 -> "208R161" [style=solid]
 "208R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  209 [label="State 209\n\l162 SimpleStmt: Assignment •\l"]
  209 -> "209R162" [style=solid]
 "209R162" [label="R162", fillcolor=3, shape=diamond, style=filled]
  210 [label="State 210\n\l155 Statement: IfStmt •\l"]
  210 -> "210R155" [style=solid]
 "210R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  211 [label="State 211\n\l156 Statement: ForStmt •\l"]
  211 -> "211R156" [style=solid]
 "211R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  212 [label="State 212\n\l148 Statement: GoStmt •\l"]
  212 -> "212R148" [style=solid]
 "212R148" [label="R148", fillcolor=3, shape=diamond, style=filled]
  213 [label="State 213\n\l149 Statement: ReturnStmt •\l"]
  213 -> "213R149" [style=solid]
 "213R149" [label="R149", fillcolor=3, shape=diamond, style=filled]
  214 [label="State 214\n\l150 Statement: BreakStmt •\l"]
  214 -> "214R150" [style=solid]
 "214R150" [label="R150", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l151 Statement: ContinueStmt •\l"]
  215 -> "215R151" [style=solid]
 "215R151" [label="R151", fillcolor=3, shape=diamond, style=filled]
  216 [label="State 216\n\l152 Statement: GotoStmt •\l"]
  216 -> "216R152" [style=solid]
 "216R152" [label="R152", fillcolor=3, shape=diamond, style=filled]
  217 [label="State 217\n\l153 Statement: FallthroughStmt •\l"]
  217 -> "217R153" [style=solid]
 "217R153" [label="R153", fillcolor=3, shape=diamond, style=filled]
  218 [label="State 218\n\l139 FunctionLit: FUNC Signature FunctionBody •\l"]
  218 -> "218R139" [style=solid]
 "218R139" [label="R139", fillcolor=3, shape=diamond, style=filled]
  219 [label="State 219\n\l125 LiteralType: '[' ELIPSIS ']' • ElementType\l"]
  219 -> 56 [style=solid label="FUNC"]
  219 -> 57 [style=solid label="STRUCT"]
  219 -> 58 [style=solid label="ID"]
  219 -> 60 [style=solid label="'*'"]
  219 -> 61 [style=solid label="'('"]
  219 -> 62 [style=solid label="'['"]
  219 -> 63 [style=dashed label="PackageName"]
  219 -> 64 [style=dashed label="QualifiedIdent"]
  219 -> 239 [style=dashed label="Type"]
  219 -> 66 [style=dashed label="TypeName"]
  219 -> 67 [style=dashed label="TypeLit"]
  219 -> 68 [style=dashed label="ArrayType"]
  219 -> 276 [style=dashed label="ElementType"]
  219 -> 69 [style=dashed label="StructType"]
  219 -> 70 [style=dashed label="PointerType"]
  219 -> 71 [style=dashed label="FunctionType"]
  220 [label="State 220\n\l109 Operand: \"(\" Expression \")\" •\l"]
  220 -> "220R109" [style=solid]
 "220R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  221 [label="State 221\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' • Expression\l"]
  221 -> 93 [style=solid label="FUNC"]
  221 -> 57 [style=solid label="STRUCT"]
  221 -> 94 [style=solid label="ID"]
  221 -> 95 [style=solid label="STRING_LIT"]
  221 -> 96 [style=solid label="BINARY_LIT"]
  221 -> 97 [style=solid label="HEX_LIT"]
  221 -> 98 [style=solid label="FLOAT_LIT"]
  221 -> 99 [style=solid label="DEC_LIT"]
  221 -> 100 [style=solid label="'^'"]
  221 -> 101 [style=solid label="'&'"]
  221 -> 102 [style=solid label="'+'"]
  221 -> 103 [style=solid label="'-'"]
  221 -> 104 [style=solid label="'*'"]
  221 -> 105 [style=solid label="'!'"]
  221 -> 106 [style=solid label="'['"]
  221 -> 107 [style=solid label="\"(\""]
  221 -> 63 [style=dashed label="PackageName"]
  221 -> 277 [style=dashed label="Expression"]
  221 -> 110 [style=dashed label="UnaryExpr"]
  221 -> 111 [style=dashed label="unary_op"]
  221 -> 112 [style=dashed label="PrimaryExpr"]
  221 -> 113 [style=dashed label="Operand"]
  221 -> 114 [style=dashed label="Literal"]
  221 -> 115 [style=dashed label="INT_LIT"]
  221 -> 116 [style=dashed label="BasicLit"]
  221 -> 117 [style=dashed label="OperandName"]
  221 -> 118 [style=dashed label="QualifiedIdent"]
  221 -> 119 [style=dashed label="CompositeLit"]
  221 -> 120 [style=dashed label="LiteralType"]
  221 -> 121 [style=dashed label="FunctionLit"]
  221 -> 122 [style=dashed label="TypeName"]
  221 -> 123 [style=dashed label="ArrayType"]
  221 -> 124 [style=dashed label="StructType"]
  222 [label="State 222\n\l 52 Expression: Expression • binary_op Expression\l 52           | Expression binary_op Expression •\l"]
  222 -> 168 [style=dashed label="binary_op"]
  222 -> 169 [style=dashed label="rel_op"]
  222 -> 170 [style=dashed label="add_op"]
  222 -> 171 [style=dashed label="mul_op"]
  222 -> "222R52" [style=solid]
 "222R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  223 [label="State 223\n\l 98 Arguments: '(' ')' •\l"]
  223 -> "223R98" [style=solid]
 "223R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  224 [label="State 224\n\l 99 Arguments: '(' ArgumentInBracket • ')'\l"]
  224 -> 278 [style=solid label="')'"]
  225 [label="State 225\n\l100 ArgumentInBracket: ArgumentInBracketFirst • ArgumentInBracketEnd\l"]
  225 -> 279 [style=solid label="ELIPSIS"]
  225 -> 280 [style=solid label="','"]
  225 -> 281 [style=dashed label="ArgumentInBracketEnd"]
  225 -> "225R106" [style=solid]
 "225R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  226 [label="State 226\n\l101 ArgumentInBracketFirst: Type •\l102                       | Type • ',' ExpressionList\l"]
  226 -> 282 [style=solid label="','"]
  226 -> "226R101d" [label="[',']", style=solid]
 "226R101d" [label="R101", fillcolor=5, shape=diamond, style=filled]
  226 -> "226R101" [style=solid]
 "226R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  227 [label="State 227\n\l 96 Selector: '.' ID •\l"]
  227 -> "227R96" [style=solid]
 "227R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  228 [label="State 228\n\l 52 Expression: Expression • binary_op Expression\l 97 Index: '[' Expression • ']'\l"]
  228 -> 149 [style=solid label="\"||\""]
  228 -> 150 [style=solid label="\"&&\""]
  228 -> 151 [style=solid label="'|'"]
  228 -> 152 [style=solid label="'^'"]
  228 -> 153 [style=solid label="'&'"]
  228 -> 154 [style=solid label="\"==\""]
  228 -> 155 [style=solid label="\"!=\""]
  228 -> 156 [style=solid label="'>'"]
  228 -> 157 [style=solid label="'<'"]
  228 -> 158 [style=solid label="\">=\""]
  228 -> 159 [style=solid label="\"<=\""]
  228 -> 160 [style=solid label="\">>\""]
  228 -> 161 [style=solid label="\"<<\""]
  228 -> 162 [style=solid label="'+'"]
  228 -> 163 [style=solid label="'-'"]
  228 -> 164 [style=solid label="'*'"]
  228 -> 165 [style=solid label="'/'"]
  228 -> 166 [style=solid label="'%'"]
  228 -> 283 [style=solid label="']'"]
  228 -> 168 [style=dashed label="binary_op"]
  228 -> 169 [style=dashed label="rel_op"]
  228 -> 170 [style=dashed label="add_op"]
  228 -> 171 [style=dashed label="mul_op"]
  229 [label="State 229\n\l127 LiteralValue: '{' '}' •\l"]
  229 -> "229R127" [style=solid]
 "229R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  230 [label="State 230\n\l 52 Expression: Expression • binary_op Expression\l135 Key: Expression •\l137 Element: Expression •\l"]
  230 -> 149 [style=solid label="\"||\""]
  230 -> 150 [style=solid label="\"&&\""]
  230 -> 151 [style=solid label="'|'"]
  230 -> 152 [style=solid label="'^'"]
  230 -> 153 [style=solid label="'&'"]
  230 -> 154 [style=solid label="\"==\""]
  230 -> 155 [style=solid label="\"!=\""]
  230 -> 156 [style=solid label="'>'"]
  230 -> 157 [style=solid label="'<'"]
  230 -> 158 [style=solid label="\">=\""]
  230 -> 159 [style=solid label="\"<=\""]
  230 -> 160 [style=solid label="\">>\""]
  230 -> 161 [style=solid label="\"<<\""]
  230 -> 162 [style=solid label="'+'"]
  230 -> 163 [style=solid label="'-'"]
  230 -> 164 [style=solid label="'*'"]
  230 -> 165 [style=solid label="'/'"]
  230 -> 166 [style=solid label="'%'"]
  230 -> 168 [style=dashed label="binary_op"]
  230 -> 169 [style=dashed label="rel_op"]
  230 -> 170 [style=dashed label="add_op"]
  230 -> 171 [style=dashed label="mul_op"]
  230 -> "230R135" [label="[':']", style=solid]
 "230R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  230 -> "230R137" [style=solid]
 "230R137" [label="R137", fillcolor=3, shape=diamond, style=filled]
  231 [label="State 231\n\l136 Key: LiteralValue •\l138 Element: LiteralValue •\l"]
  231 -> "231R136" [label="[':']", style=solid]
 "231R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  231 -> "231R138" [style=solid]
 "231R138" [label="R138", fillcolor=3, shape=diamond, style=filled]
  232 [label="State 232\n\l128 LiteralValue: '{' ElementList • '}'\l129             | '{' ElementList • ',' '}'\l"]
  232 -> 284 [style=solid label="','"]
  232 -> 285 [style=solid label="'}'"]
  233 [label="State 233\n\l130 ElementList: KeyedElement • STAR_CM_KeyedElement\l"]
  233 -> 286 [style=dashed label="STAR_CM_KeyedElement"]
  233 -> "233R132" [style=solid]
 "233R132" [label="R132", fillcolor=3, shape=diamond, style=filled]
  234 [label="State 234\n\l133 KeyedElement: Key • ':' Element\l"]
  234 -> 287 [style=solid label="':'"]
  235 [label="State 235\n\l134 KeyedElement: Element •\l"]
  235 -> "235R134" [style=solid]
 "235R134" [label="R134", fillcolor=3, shape=diamond, style=filled]
  236 [label="State 236\n\l208 StructType: STRUCT '{' STAR_FieldDecl_SC '}' •\l"]
  236 -> "236R208" [style=solid]
 "236R208" [label="R208", fillcolor=3, shape=diamond, style=filled]
  237 [label="State 237\n\l209 FieldDecl: IdentifierList • Type Tag\l210          | IdentifierList • Type\l"]
  237 -> 56 [style=solid label="FUNC"]
  237 -> 57 [style=solid label="STRUCT"]
  237 -> 58 [style=solid label="ID"]
  237 -> 60 [style=solid label="'*'"]
  237 -> 61 [style=solid label="'('"]
  237 -> 62 [style=solid label="'['"]
  237 -> 63 [style=dashed label="PackageName"]
  237 -> 64 [style=dashed label="QualifiedIdent"]
  237 -> 288 [style=dashed label="Type"]
  237 -> 66 [style=dashed label="TypeName"]
  237 -> 67 [style=dashed label="TypeLit"]
  237 -> 68 [style=dashed label="ArrayType"]
  237 -> 69 [style=dashed label="StructType"]
  237 -> 70 [style=dashed label="PointerType"]
  237 -> 71 [style=dashed label="FunctionType"]
  238 [label="State 238\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl • ';'\l"]
  238 -> 289 [style=solid label="';'"]
  239 [label="State 239\n\l207 ElementType: Type •\l"]
  239 -> "239R207" [style=solid]
 "239R207" [label="R207", fillcolor=3, shape=diamond, style=filled]
  240 [label="State 240\n\l205 ArrayType: '[' ArrayLength ']' ElementType •\l"]
  240 -> "240R205" [style=solid]
 "240R205" [label="R205", fillcolor=3, shape=diamond, style=filled]
  241 [label="State 241\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' ParameterDecl •\l"]
  241 -> "241R30" [style=solid]
 "241R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  242 [label="State 242\n\l158 Label: ID •\l"]
  242 -> "242R158" [style=solid]
 "242R158" [label="R158", fillcolor=3, shape=diamond, style=filled]
  243 [label="State 243\n\l190 BreakStmt: BREAK Label •\l"]
  243 -> "243R190" [style=solid]
 "243R190" [label="R190", fillcolor=3, shape=diamond, style=filled]
  244 [label="State 244\n\l188 ReturnStmt: RETURN ExpressionList •\l"]
  244 -> "244R188" [style=solid]
 "244R188" [label="R188", fillcolor=3, shape=diamond, style=filled]
  245 [label="State 245\n\l194 GotoStmt: GOTO Label •\l"]
  245 -> "245R194" [style=solid]
 "245R194" [label="R194", fillcolor=3, shape=diamond, style=filled]
  246 [label="State 246\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l164 ExpressionStmt: Expression •\l165 IncDecStmt: Expression • \"++\"\l166           | Expression • \"--\"\l168 IfStmt: IF Expression • Block\l"]
  246 -> 149 [style=solid label="\"||\""]
  246 -> 150 [style=solid label="\"&&\""]
  246 -> 151 [style=solid label="'|'"]
  246 -> 152 [style=solid label="'^'"]
  246 -> 153 [style=solid label="'&'"]
  246 -> 154 [style=solid label="\"==\""]
  246 -> 155 [style=solid label="\"!=\""]
  246 -> 156 [style=solid label="'>'"]
  246 -> 157 [style=solid label="'<'"]
  246 -> 158 [style=solid label="\">=\""]
  246 -> 159 [style=solid label="\"<=\""]
  246 -> 160 [style=solid label="\">>\""]
  246 -> 161 [style=solid label="\"<<\""]
  246 -> 162 [style=solid label="'+'"]
  246 -> 163 [style=solid label="'-'"]
  246 -> 164 [style=solid label="'*'"]
  246 -> 165 [style=solid label="'/'"]
  246 -> 166 [style=solid label="'%'"]
  246 -> 81 [style=solid label="'{'"]
  246 -> 272 [style=solid label="\"++\""]
  246 -> 273 [style=solid label="\"--\""]
  246 -> 167 [style=dashed label="STAR_CM_EXP"]
  246 -> 168 [style=dashed label="binary_op"]
  246 -> 169 [style=dashed label="rel_op"]
  246 -> 170 [style=dashed label="add_op"]
  246 -> 171 [style=dashed label="mul_op"]
  246 -> 290 [style=dashed label="Block"]
  246 -> "246R25" [style=solid]
 "246R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  246 -> "246R164" [label="[';']", style=solid]
 "246R164" [label="R164", fillcolor=3, shape=diamond, style=filled]
  247 [label="State 247\n\l169 IfStmt: IF SimpleStmt • ';' Expression Block\l170       | IF SimpleStmt • ';' Expression Block ELSE Block\l171       | IF SimpleStmt • ';' Expression Block ELSE IfStmt\l"]
  247 -> 291 [style=solid label="';'"]
  248 [label="State 248\n\l192 ContinueStmt: CONTINUE Label •\l"]
  248 -> "248R192" [style=solid]
 "248R192" [label="R192", fillcolor=3, shape=diamond, style=filled]
  249 [label="State 249\n\l185 RangeClause: RANGE • Expression\l"]
  249 -> 93 [style=solid label="FUNC"]
  249 -> 57 [style=solid label="STRUCT"]
  249 -> 94 [style=solid label="ID"]
  249 -> 95 [style=solid label="STRING_LIT"]
  249 -> 96 [style=solid label="BINARY_LIT"]
  249 -> 97 [style=solid label="HEX_LIT"]
  249 -> 98 [style=solid label="FLOAT_LIT"]
  249 -> 99 [style=solid label="DEC_LIT"]
  249 -> 100 [style=solid label="'^'"]
  249 -> 101 [style=solid label="'&'"]
  249 -> 102 [style=solid label="'+'"]
  249 -> 103 [style=solid label="'-'"]
  249 -> 104 [style=solid label="'*'"]
  249 -> 105 [style=solid label="'!'"]
  249 -> 106 [style=solid label="'['"]
  249 -> 107 [style=solid label="\"(\""]
  249 -> 63 [style=dashed label="PackageName"]
  249 -> 292 [style=dashed label="Expression"]
  249 -> 110 [style=dashed label="UnaryExpr"]
  249 -> 111 [style=dashed label="unary_op"]
  249 -> 112 [style=dashed label="PrimaryExpr"]
  249 -> 113 [style=dashed label="Operand"]
  249 -> 114 [style=dashed label="Literal"]
  249 -> 115 [style=dashed label="INT_LIT"]
  249 -> 116 [style=dashed label="BasicLit"]
  249 -> 117 [style=dashed label="OperandName"]
  249 -> 118 [style=dashed label="QualifiedIdent"]
  249 -> 119 [style=dashed label="CompositeLit"]
  249 -> 120 [style=dashed label="LiteralType"]
  249 -> 121 [style=dashed label="FunctionLit"]
  249 -> 122 [style=dashed label="TypeName"]
  249 -> 123 [style=dashed label="ArrayType"]
  249 -> 124 [style=dashed label="StructType"]
  250 [label="State 250\n\l167 Assignment: ExpressionList • assign_op ExpressionList\l186 RangeClause: ExpressionList • '=' RANGE Expression\l"]
  250 -> 293 [style=solid label="'='"]
  250 -> 261 [style=solid label="\"+=\""]
  250 -> 262 [style=solid label="\"-=\""]
  250 -> 263 [style=solid label="\"|=\""]
  250 -> 264 [style=solid label="\"^=\""]
  250 -> 265 [style=solid label="\"*=\""]
  250 -> 266 [style=solid label="\"/=\""]
  250 -> 267 [style=solid label="\"%=\""]
  250 -> 268 [style=solid label="\"<<=\""]
  250 -> 269 [style=solid label="\">>=\""]
  250 -> 270 [style=solid label="\"&=\""]
  250 -> 271 [style=dashed label="assign_op"]
  251 [label="State 251\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l164 ExpressionStmt: Expression •\l165 IncDecStmt: Expression • \"++\"\l166           | Expression • \"--\"\l177 Condition: Expression •\l"]
  251 -> 149 [style=solid label="\"||\""]
  251 -> 150 [style=solid label="\"&&\""]
  251 -> 151 [style=solid label="'|'"]
  251 -> 152 [style=solid label="'^'"]
  251 -> 153 [style=solid label="'&'"]
  251 -> 154 [style=solid label="\"==\""]
  251 -> 155 [style=solid label="\"!=\""]
  251 -> 156 [style=solid label="'>'"]
  251 -> 157 [style=solid label="'<'"]
  251 -> 158 [style=solid label="\">=\""]
  251 -> 159 [style=solid label="\"<=\""]
  251 -> 160 [style=solid label="\">>\""]
  251 -> 161 [style=solid label="\"<<\""]
  251 -> 162 [style=solid label="'+'"]
  251 -> 163 [style=solid label="'-'"]
  251 -> 164 [style=solid label="'*'"]
  251 -> 165 [style=solid label="'/'"]
  251 -> 166 [style=solid label="'%'"]
  251 -> 272 [style=solid label="\"++\""]
  251 -> 273 [style=solid label="\"--\""]
  251 -> 167 [style=dashed label="STAR_CM_EXP"]
  251 -> 168 [style=dashed label="binary_op"]
  251 -> 169 [style=dashed label="rel_op"]
  251 -> 170 [style=dashed label="add_op"]
  251 -> 171 [style=dashed label="mul_op"]
  251 -> "251R25" [style=solid]
 "251R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  251 -> "251R164" [label="[';']", style=solid]
 "251R164" [label="R164", fillcolor=3, shape=diamond, style=filled]
  251 -> "251R177" [label="['{']", style=solid]
 "251R177" [label="R177", fillcolor=3, shape=diamond, style=filled]
  252 [label="State 252\n\l172 ForStmt: FOR Block •\l"]
  252 -> "252R172" [style=solid]
 "252R172" [label="R172", fillcolor=3, shape=diamond, style=filled]
  253 [label="State 253\n\l183 InitStmt: SimpleStmt •\l"]
  253 -> "253R183" [style=solid]
 "253R183" [label="R183", fillcolor=3, shape=diamond, style=filled]
  254 [label="State 254\n\l173 ForStmt: FOR ForStmtAfter • Block\l"]
  254 -> 81 [style=solid label="'{'"]
  254 -> 294 [style=dashed label="Block"]
  255 [label="State 255\n\l174 ForStmtAfter: Condition •\l"]
  255 -> "255R174" [style=solid]
 "255R174" [label="R174", fillcolor=3, shape=diamond, style=filled]
  256 [label="State 256\n\l175 ForStmtAfter: ForClause •\l"]
  256 -> "256R175" [style=solid]
 "256R175" [label="R175", fillcolor=3, shape=diamond, style=filled]
  257 [label="State 257\n\l178 ForClause: OPT_InitStmt • ';' OPT_Condition ';' OPT_PostStmt\l"]
  257 -> 295 [style=solid label="';'"]
  258 [label="State 258\n\l179 OPT_InitStmt: InitStmt •\l"]
  258 -> "258R179" [style=solid]
 "258R179" [label="R179", fillcolor=3, shape=diamond, style=filled]
  259 [label="State 259\n\l176 ForStmtAfter: RangeClause •\l"]
  259 -> "259R176" [style=solid]
 "259R176" [label="R176", fillcolor=3, shape=diamond, style=filled]
  260 [label="State 260\n\l 52 Expression: Expression • binary_op Expression\l187 GoStmt: GO Expression •\l"]
  260 -> 149 [style=solid label="\"||\""]
  260 -> 150 [style=solid label="\"&&\""]
  260 -> 151 [style=solid label="'|'"]
  260 -> 152 [style=solid label="'^'"]
  260 -> 153 [style=solid label="'&'"]
  260 -> 154 [style=solid label="\"==\""]
  260 -> 155 [style=solid label="\"!=\""]
  260 -> 156 [style=solid label="'>'"]
  260 -> 157 [style=solid label="'<'"]
  260 -> 158 [style=solid label="\">=\""]
  260 -> 159 [style=solid label="\"<=\""]
  260 -> 160 [style=solid label="\">>\""]
  260 -> 161 [style=solid label="\"<<\""]
  260 -> 162 [style=solid label="'+'"]
  260 -> 163 [style=solid label="'-'"]
  260 -> 164 [style=solid label="'*'"]
  260 -> 165 [style=solid label="'/'"]
  260 -> 166 [style=solid label="'%'"]
  260 -> 168 [style=dashed label="binary_op"]
  260 -> 169 [style=dashed label="rel_op"]
  260 -> 170 [style=dashed label="add_op"]
  260 -> 171 [style=dashed label="mul_op"]
  260 -> "260R187" [style=solid]
 "260R187" [label="R187", fillcolor=3, shape=diamond, style=filled]
  261 [label="State 261\n\l 70 assign_op: \"+=\" •\l"]
  261 -> "261R70" [style=solid]
 "261R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  262 [label="State 262\n\l 71 assign_op: \"-=\" •\l"]
  262 -> "262R71" [style=solid]
 "262R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  263 [label="State 263\n\l 72 assign_op: \"|=\" •\l"]
  263 -> "263R72" [style=solid]
 "263R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  264 [label="State 264\n\l 73 assign_op: \"^=\" •\l"]
  264 -> "264R73" [style=solid]
 "264R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  265 [label="State 265\n\l 74 assign_op: \"*=\" •\l"]
  265 -> "265R74" [style=solid]
 "265R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  266 [label="State 266\n\l 75 assign_op: \"/=\" •\l"]
  266 -> "266R75" [style=solid]
 "266R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  267 [label="State 267\n\l 76 assign_op: \"%=\" •\l"]
  267 -> "267R76" [style=solid]
 "267R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  268 [label="State 268\n\l 77 assign_op: \"<<=\" •\l"]
  268 -> "268R77" [style=solid]
 "268R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  269 [label="State 269\n\l 78 assign_op: \">>=\" •\l"]
  269 -> "269R78" [style=solid]
 "269R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  270 [label="State 270\n\l 79 assign_op: \"&=\" •\l"]
  270 -> "270R79" [style=solid]
 "270R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  271 [label="State 271\n\l167 Assignment: ExpressionList assign_op • ExpressionList\l"]
  271 -> 93 [style=solid label="FUNC"]
  271 -> 57 [style=solid label="STRUCT"]
  271 -> 94 [style=solid label="ID"]
  271 -> 95 [style=solid label="STRING_LIT"]
  271 -> 96 [style=solid label="BINARY_LIT"]
  271 -> 97 [style=solid label="HEX_LIT"]
  271 -> 98 [style=solid label="FLOAT_LIT"]
  271 -> 99 [style=solid label="DEC_LIT"]
  271 -> 100 [style=solid label="'^'"]
  271 -> 101 [style=solid label="'&'"]
  271 -> 102 [style=solid label="'+'"]
  271 -> 103 [style=solid label="'-'"]
  271 -> 104 [style=solid label="'*'"]
  271 -> 105 [style=solid label="'!'"]
  271 -> 106 [style=solid label="'['"]
  271 -> 107 [style=solid label="\"(\""]
  271 -> 63 [style=dashed label="PackageName"]
  271 -> 296 [style=dashed label="ExpressionList"]
  271 -> 109 [style=dashed label="Expression"]
  271 -> 110 [style=dashed label="UnaryExpr"]
  271 -> 111 [style=dashed label="unary_op"]
  271 -> 112 [style=dashed label="PrimaryExpr"]
  271 -> 113 [style=dashed label="Operand"]
  271 -> 114 [style=dashed label="Literal"]
  271 -> 115 [style=dashed label="INT_LIT"]
  271 -> 116 [style=dashed label="BasicLit"]
  271 -> 117 [style=dashed label="OperandName"]
  271 -> 118 [style=dashed label="QualifiedIdent"]
  271 -> 119 [style=dashed label="CompositeLit"]
  271 -> 120 [style=dashed label="LiteralType"]
  271 -> 121 [style=dashed label="FunctionLit"]
  271 -> 122 [style=dashed label="TypeName"]
  271 -> 123 [style=dashed label="ArrayType"]
  271 -> 124 [style=dashed label="StructType"]
  272 [label="State 272\n\l165 IncDecStmt: Expression \"++\" •\l"]
  272 -> "272R165" [style=solid]
 "272R165" [label="R165", fillcolor=3, shape=diamond, style=filled]
  273 [label="State 273\n\l166 IncDecStmt: Expression \"--\" •\l"]
  273 -> "273R166" [style=solid]
 "273R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  274 [label="State 274\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement ';' •\l"]
  274 -> "274R28" [style=solid]
 "274R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  275 [label="State 275\n\l157 LabeledStmt: Label ':' • Statement\l"]
  275 -> 188 [style=solid label="BREAK"]
  275 -> 93 [style=solid label="FUNC"]
  275 -> 57 [style=solid label="STRUCT"]
  275 -> 189 [style=solid label="RETURN"]
  275 -> 190 [style=solid label="GOTO"]
  275 -> 20 [style=solid label="CONST"]
  275 -> 191 [style=solid label="IF"]
  275 -> 192 [style=solid label="CONTINUE"]
  275 -> 193 [style=solid label="FOR"]
  275 -> 194 [style=solid label="ID"]
  275 -> 21 [style=solid label="VAR"]
  275 -> 95 [style=solid label="STRING_LIT"]
  275 -> 96 [style=solid label="BINARY_LIT"]
  275 -> 97 [style=solid label="HEX_LIT"]
  275 -> 98 [style=solid label="FLOAT_LIT"]
  275 -> 99 [style=solid label="DEC_LIT"]
  275 -> 195 [style=solid label="GO"]
  275 -> 196 [style=solid label="FALLTHROUGH"]
  275 -> 22 [style=solid label="TYPE_TOK"]
  275 -> 100 [style=solid label="'^'"]
  275 -> 101 [style=solid label="'&'"]
  275 -> 102 [style=solid label="'+'"]
  275 -> 103 [style=solid label="'-'"]
  275 -> 104 [style=solid label="'*'"]
  275 -> 105 [style=solid label="'!'"]
  275 -> 106 [style=solid label="'['"]
  275 -> 107 [style=solid label="\"(\""]
  275 -> 81 [style=solid label="'{'"]
  275 -> 63 [style=dashed label="PackageName"]
  275 -> 198 [style=dashed label="Declaration"]
  275 -> 25 [style=dashed label="ConstDecl"]
  275 -> 26 [style=dashed label="TypeDecl"]
  275 -> 27 [style=dashed label="VarDecl"]
  275 -> 199 [style=dashed label="ExpressionList"]
  275 -> 200 [style=dashed label="Expression"]
  275 -> 110 [style=dashed label="UnaryExpr"]
  275 -> 111 [style=dashed label="unary_op"]
  275 -> 112 [style=dashed label="PrimaryExpr"]
  275 -> 113 [style=dashed label="Operand"]
  275 -> 114 [style=dashed label="Literal"]
  275 -> 115 [style=dashed label="INT_LIT"]
  275 -> 116 [style=dashed label="BasicLit"]
  275 -> 117 [style=dashed label="OperandName"]
  275 -> 118 [style=dashed label="QualifiedIdent"]
  275 -> 119 [style=dashed label="CompositeLit"]
  275 -> 120 [style=dashed label="LiteralType"]
  275 -> 121 [style=dashed label="FunctionLit"]
  275 -> 201 [style=dashed label="Block"]
  275 -> 297 [style=dashed label="Statement"]
  275 -> 203 [style=dashed label="LabeledStmt"]
  275 -> 204 [style=dashed label="Label"]
  275 -> 205 [style=dashed label="SimpleStmt"]
  275 -> 206 [style=dashed label="EmptyStmt"]
  275 -> 207 [style=dashed label="ExpressionStmt"]
  275 -> 208 [style=dashed label="IncDecStmt"]
  275 -> 209 [style=dashed label="Assignment"]
  275 -> 210 [style=dashed label="IfStmt"]
  275 -> 211 [style=dashed label="ForStmt"]
  275 -> 212 [style=dashed label="GoStmt"]
  275 -> 213 [style=dashed label="ReturnStmt"]
  275 -> 214 [style=dashed label="BreakStmt"]
  275 -> 215 [style=dashed label="ContinueStmt"]
  275 -> 216 [style=dashed label="GotoStmt"]
  275 -> 217 [style=dashed label="FallthroughStmt"]
  275 -> 122 [style=dashed label="TypeName"]
  275 -> 123 [style=dashed label="ArrayType"]
  275 -> 124 [style=dashed label="StructType"]
  275 -> "275R163" [style=solid]
 "275R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  276 [label="State 276\n\l125 LiteralType: '[' ELIPSIS ']' ElementType •\l"]
  276 -> "276R125" [style=solid]
 "276R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  277 [label="State 277\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' Expression •\l 52 Expression: Expression • binary_op Expression\l"]
  277 -> 149 [style=solid label="\"||\""]
  277 -> 150 [style=solid label="\"&&\""]
  277 -> 151 [style=solid label="'|'"]
  277 -> 152 [style=solid label="'^'"]
  277 -> 153 [style=solid label="'&'"]
  277 -> 154 [style=solid label="\"==\""]
  277 -> 155 [style=solid label="\"!=\""]
  277 -> 156 [style=solid label="'>'"]
  277 -> 157 [style=solid label="'<'"]
  277 -> 158 [style=solid label="\">=\""]
  277 -> 159 [style=solid label="\"<=\""]
  277 -> 160 [style=solid label="\">>\""]
  277 -> 161 [style=solid label="\"<<\""]
  277 -> 162 [style=solid label="'+'"]
  277 -> 163 [style=solid label="'-'"]
  277 -> 164 [style=solid label="'*'"]
  277 -> 165 [style=solid label="'/'"]
  277 -> 166 [style=solid label="'%'"]
  277 -> 168 [style=dashed label="binary_op"]
  277 -> 169 [style=dashed label="rel_op"]
  277 -> 170 [style=dashed label="add_op"]
  277 -> 171 [style=dashed label="mul_op"]
  277 -> "277R24" [style=solid]
 "277R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  278 [label="State 278\n\l 99 Arguments: '(' ArgumentInBracket ')' •\l"]
  278 -> "278R99" [style=solid]
 "278R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  279 [label="State 279\n\l103 ArgumentInBracketEnd: ELIPSIS • ','\l104                     | ELIPSIS •\l"]
  279 -> 298 [style=solid label="','"]
  279 -> "279R104" [style=solid]
 "279R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  280 [label="State 280\n\l105 ArgumentInBracketEnd: ',' •\l"]
  280 -> "280R105" [style=solid]
 "280R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  281 [label="State 281\n\l100 ArgumentInBracket: ArgumentInBracketFirst ArgumentInBracketEnd •\l"]
  281 -> "281R100" [style=solid]
 "281R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  282 [label="State 282\n\l102 ArgumentInBracketFirst: Type ',' • ExpressionList\l"]
  282 -> 93 [style=solid label="FUNC"]
  282 -> 57 [style=solid label="STRUCT"]
  282 -> 94 [style=solid label="ID"]
  282 -> 95 [style=solid label="STRING_LIT"]
  282 -> 96 [style=solid label="BINARY_LIT"]
  282 -> 97 [style=solid label="HEX_LIT"]
  282 -> 98 [style=solid label="FLOAT_LIT"]
  282 -> 99 [style=solid label="DEC_LIT"]
  282 -> 100 [style=solid label="'^'"]
  282 -> 101 [style=solid label="'&'"]
  282 -> 102 [style=solid label="'+'"]
  282 -> 103 [style=solid label="'-'"]
  282 -> 104 [style=solid label="'*'"]
  282 -> 105 [style=solid label="'!'"]
  282 -> 106 [style=solid label="'['"]
  282 -> 107 [style=solid label="\"(\""]
  282 -> 63 [style=dashed label="PackageName"]
  282 -> 299 [style=dashed label="ExpressionList"]
  282 -> 109 [style=dashed label="Expression"]
  282 -> 110 [style=dashed label="UnaryExpr"]
  282 -> 111 [style=dashed label="unary_op"]
  282 -> 112 [style=dashed label="PrimaryExpr"]
  282 -> 113 [style=dashed label="Operand"]
  282 -> 114 [style=dashed label="Literal"]
  282 -> 115 [style=dashed label="INT_LIT"]
  282 -> 116 [style=dashed label="BasicLit"]
  282 -> 117 [style=dashed label="OperandName"]
  282 -> 118 [style=dashed label="QualifiedIdent"]
  282 -> 119 [style=dashed label="CompositeLit"]
  282 -> 120 [style=dashed label="LiteralType"]
  282 -> 121 [style=dashed label="FunctionLit"]
  282 -> 122 [style=dashed label="TypeName"]
  282 -> 123 [style=dashed label="ArrayType"]
  282 -> 124 [style=dashed label="StructType"]
  283 [label="State 283\n\l 97 Index: '[' Expression ']' •\l"]
  283 -> "283R97" [style=solid]
 "283R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  284 [label="State 284\n\l129 LiteralValue: '{' ElementList ',' • '}'\l"]
  284 -> 300 [style=solid label="'}'"]
  285 [label="State 285\n\l128 LiteralValue: '{' ElementList '}' •\l"]
  285 -> "285R128" [style=solid]
 "285R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  286 [label="State 286\n\l130 ElementList: KeyedElement STAR_CM_KeyedElement •\l131 STAR_CM_KeyedElement: STAR_CM_KeyedElement • ',' KeyedElement\l"]
  286 -> 301 [style=solid label="','"]
  286 -> "286R130d" [label="[',']", style=solid]
 "286R130d" [label="R130", fillcolor=5, shape=diamond, style=filled]
  286 -> "286R130" [style=solid]
 "286R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  287 [label="State 287\n\l133 KeyedElement: Key ':' • Element\l"]
  287 -> 93 [style=solid label="FUNC"]
  287 -> 57 [style=solid label="STRUCT"]
  287 -> 94 [style=solid label="ID"]
  287 -> 95 [style=solid label="STRING_LIT"]
  287 -> 96 [style=solid label="BINARY_LIT"]
  287 -> 97 [style=solid label="HEX_LIT"]
  287 -> 98 [style=solid label="FLOAT_LIT"]
  287 -> 99 [style=solid label="DEC_LIT"]
  287 -> 100 [style=solid label="'^'"]
  287 -> 101 [style=solid label="'&'"]
  287 -> 102 [style=solid label="'+'"]
  287 -> 103 [style=solid label="'-'"]
  287 -> 104 [style=solid label="'*'"]
  287 -> 105 [style=solid label="'!'"]
  287 -> 106 [style=solid label="'['"]
  287 -> 107 [style=solid label="\"(\""]
  287 -> 179 [style=solid label="'{'"]
  287 -> 63 [style=dashed label="PackageName"]
  287 -> 302 [style=dashed label="Expression"]
  287 -> 110 [style=dashed label="UnaryExpr"]
  287 -> 111 [style=dashed label="unary_op"]
  287 -> 112 [style=dashed label="PrimaryExpr"]
  287 -> 113 [style=dashed label="Operand"]
  287 -> 114 [style=dashed label="Literal"]
  287 -> 115 [style=dashed label="INT_LIT"]
  287 -> 116 [style=dashed label="BasicLit"]
  287 -> 117 [style=dashed label="OperandName"]
  287 -> 118 [style=dashed label="QualifiedIdent"]
  287 -> 119 [style=dashed label="CompositeLit"]
  287 -> 120 [style=dashed label="LiteralType"]
  287 -> 303 [style=dashed label="LiteralValue"]
  287 -> 304 [style=dashed label="Element"]
  287 -> 121 [style=dashed label="FunctionLit"]
  287 -> 122 [style=dashed label="TypeName"]
  287 -> 123 [style=dashed label="ArrayType"]
  287 -> 124 [style=dashed label="StructType"]
  288 [label="State 288\n\l209 FieldDecl: IdentifierList Type • Tag\l210          | IdentifierList Type •\l"]
  288 -> 305 [style=solid label="STRING_LIT"]
  288 -> 306 [style=dashed label="Tag"]
  288 -> "288R210" [style=solid]
 "288R210" [label="R210", fillcolor=3, shape=diamond, style=filled]
  289 [label="State 289\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl ';' •\l"]
  289 -> "289R32" [style=solid]
 "289R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  290 [label="State 290\n\l168 IfStmt: IF Expression Block •\l"]
  290 -> "290R168" [style=solid]
 "290R168" [label="R168", fillcolor=3, shape=diamond, style=filled]
  291 [label="State 291\n\l169 IfStmt: IF SimpleStmt ';' • Expression Block\l170       | IF SimpleStmt ';' • Expression Block ELSE Block\l171       | IF SimpleStmt ';' • Expression Block ELSE IfStmt\l"]
  291 -> 93 [style=solid label="FUNC"]
  291 -> 57 [style=solid label="STRUCT"]
  291 -> 94 [style=solid label="ID"]
  291 -> 95 [style=solid label="STRING_LIT"]
  291 -> 96 [style=solid label="BINARY_LIT"]
  291 -> 97 [style=solid label="HEX_LIT"]
  291 -> 98 [style=solid label="FLOAT_LIT"]
  291 -> 99 [style=solid label="DEC_LIT"]
  291 -> 100 [style=solid label="'^'"]
  291 -> 101 [style=solid label="'&'"]
  291 -> 102 [style=solid label="'+'"]
  291 -> 103 [style=solid label="'-'"]
  291 -> 104 [style=solid label="'*'"]
  291 -> 105 [style=solid label="'!'"]
  291 -> 106 [style=solid label="'['"]
  291 -> 107 [style=solid label="\"(\""]
  291 -> 63 [style=dashed label="PackageName"]
  291 -> 307 [style=dashed label="Expression"]
  291 -> 110 [style=dashed label="UnaryExpr"]
  291 -> 111 [style=dashed label="unary_op"]
  291 -> 112 [style=dashed label="PrimaryExpr"]
  291 -> 113 [style=dashed label="Operand"]
  291 -> 114 [style=dashed label="Literal"]
  291 -> 115 [style=dashed label="INT_LIT"]
  291 -> 116 [style=dashed label="BasicLit"]
  291 -> 117 [style=dashed label="OperandName"]
  291 -> 118 [style=dashed label="QualifiedIdent"]
  291 -> 119 [style=dashed label="CompositeLit"]
  291 -> 120 [style=dashed label="LiteralType"]
  291 -> 121 [style=dashed label="FunctionLit"]
  291 -> 122 [style=dashed label="TypeName"]
  291 -> 123 [style=dashed label="ArrayType"]
  291 -> 124 [style=dashed label="StructType"]
  292 [label="State 292\n\l 52 Expression: Expression • binary_op Expression\l185 RangeClause: RANGE Expression •\l"]
  292 -> 149 [style=solid label="\"||\""]
  292 -> 150 [style=solid label="\"&&\""]
  292 -> 151 [style=solid label="'|'"]
  292 -> 152 [style=solid label="'^'"]
  292 -> 153 [style=solid label="'&'"]
  292 -> 154 [style=solid label="\"==\""]
  292 -> 155 [style=solid label="\"!=\""]
  292 -> 156 [style=solid label="'>'"]
  292 -> 157 [style=solid label="'<'"]
  292 -> 158 [style=solid label="\">=\""]
  292 -> 159 [style=solid label="\"<=\""]
  292 -> 160 [style=solid label="\">>\""]
  292 -> 161 [style=solid label="\"<<\""]
  292 -> 162 [style=solid label="'+'"]
  292 -> 163 [style=solid label="'-'"]
  292 -> 164 [style=solid label="'*'"]
  292 -> 165 [style=solid label="'/'"]
  292 -> 166 [style=solid label="'%'"]
  292 -> 168 [style=dashed label="binary_op"]
  292 -> 169 [style=dashed label="rel_op"]
  292 -> 170 [style=dashed label="add_op"]
  292 -> 171 [style=dashed label="mul_op"]
  292 -> "292R185" [style=solid]
 "292R185" [label="R185", fillcolor=3, shape=diamond, style=filled]
  293 [label="State 293\n\l186 RangeClause: ExpressionList '=' • RANGE Expression\l"]
  293 -> 308 [style=solid label="RANGE"]
  294 [label="State 294\n\l173 ForStmt: FOR ForStmtAfter Block •\l"]
  294 -> "294R173" [style=solid]
 "294R173" [label="R173", fillcolor=3, shape=diamond, style=filled]
  295 [label="State 295\n\l178 ForClause: OPT_InitStmt ';' • OPT_Condition ';' OPT_PostStmt\l"]
  295 -> 93 [style=solid label="FUNC"]
  295 -> 57 [style=solid label="STRUCT"]
  295 -> 94 [style=solid label="ID"]
  295 -> 95 [style=solid label="STRING_LIT"]
  295 -> 96 [style=solid label="BINARY_LIT"]
  295 -> 97 [style=solid label="HEX_LIT"]
  295 -> 98 [style=solid label="FLOAT_LIT"]
  295 -> 99 [style=solid label="DEC_LIT"]
  295 -> 100 [style=solid label="'^'"]
  295 -> 101 [style=solid label="'&'"]
  295 -> 102 [style=solid label="'+'"]
  295 -> 103 [style=solid label="'-'"]
  295 -> 104 [style=solid label="'*'"]
  295 -> 105 [style=solid label="'!'"]
  295 -> 106 [style=solid label="'['"]
  295 -> 107 [style=solid label="\"(\""]
  295 -> 63 [style=dashed label="PackageName"]
  295 -> 309 [style=dashed label="Expression"]
  295 -> 110 [style=dashed label="UnaryExpr"]
  295 -> 111 [style=dashed label="unary_op"]
  295 -> 112 [style=dashed label="PrimaryExpr"]
  295 -> 113 [style=dashed label="Operand"]
  295 -> 114 [style=dashed label="Literal"]
  295 -> 115 [style=dashed label="INT_LIT"]
  295 -> 116 [style=dashed label="BasicLit"]
  295 -> 117 [style=dashed label="OperandName"]
  295 -> 118 [style=dashed label="QualifiedIdent"]
  295 -> 119 [style=dashed label="CompositeLit"]
  295 -> 120 [style=dashed label="LiteralType"]
  295 -> 121 [style=dashed label="FunctionLit"]
  295 -> 310 [style=dashed label="Condition"]
  295 -> 311 [style=dashed label="OPT_Condition"]
  295 -> 122 [style=dashed label="TypeName"]
  295 -> 123 [style=dashed label="ArrayType"]
  295 -> 124 [style=dashed label="StructType"]
  295 -> "295R181" [style=solid]
 "295R181" [label="R181", fillcolor=3, shape=diamond, style=filled]
  296 [label="State 296\n\l167 Assignment: ExpressionList assign_op ExpressionList •\l"]
  296 -> "296R167" [style=solid]
 "296R167" [label="R167", fillcolor=3, shape=diamond, style=filled]
  297 [label="State 297\n\l157 LabeledStmt: Label ':' Statement •\l"]
  297 -> "297R157" [style=solid]
 "297R157" [label="R157", fillcolor=3, shape=diamond, style=filled]
  298 [label="State 298\n\l103 ArgumentInBracketEnd: ELIPSIS ',' •\l"]
  298 -> "298R103" [style=solid]
 "298R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  299 [label="State 299\n\l102 ArgumentInBracketFirst: Type ',' ExpressionList •\l"]
  299 -> "299R102" [style=solid]
 "299R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  300 [label="State 300\n\l129 LiteralValue: '{' ElementList ',' '}' •\l"]
  300 -> "300R129" [style=solid]
 "300R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  301 [label="State 301\n\l131 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' • KeyedElement\l"]
  301 -> 93 [style=solid label="FUNC"]
  301 -> 57 [style=solid label="STRUCT"]
  301 -> 94 [style=solid label="ID"]
  301 -> 95 [style=solid label="STRING_LIT"]
  301 -> 96 [style=solid label="BINARY_LIT"]
  301 -> 97 [style=solid label="HEX_LIT"]
  301 -> 98 [style=solid label="FLOAT_LIT"]
  301 -> 99 [style=solid label="DEC_LIT"]
  301 -> 100 [style=solid label="'^'"]
  301 -> 101 [style=solid label="'&'"]
  301 -> 102 [style=solid label="'+'"]
  301 -> 103 [style=solid label="'-'"]
  301 -> 104 [style=solid label="'*'"]
  301 -> 105 [style=solid label="'!'"]
  301 -> 106 [style=solid label="'['"]
  301 -> 107 [style=solid label="\"(\""]
  301 -> 179 [style=solid label="'{'"]
  301 -> 63 [style=dashed label="PackageName"]
  301 -> 230 [style=dashed label="Expression"]
  301 -> 110 [style=dashed label="UnaryExpr"]
  301 -> 111 [style=dashed label="unary_op"]
  301 -> 112 [style=dashed label="PrimaryExpr"]
  301 -> 113 [style=dashed label="Operand"]
  301 -> 114 [style=dashed label="Literal"]
  301 -> 115 [style=dashed label="INT_LIT"]
  301 -> 116 [style=dashed label="BasicLit"]
  301 -> 117 [style=dashed label="OperandName"]
  301 -> 118 [style=dashed label="QualifiedIdent"]
  301 -> 119 [style=dashed label="CompositeLit"]
  301 -> 120 [style=dashed label="LiteralType"]
  301 -> 231 [style=dashed label="LiteralValue"]
  301 -> 312 [style=dashed label="KeyedElement"]
  301 -> 234 [style=dashed label="Key"]
  301 -> 235 [style=dashed label="Element"]
  301 -> 121 [style=dashed label="FunctionLit"]
  301 -> 122 [style=dashed label="TypeName"]
  301 -> 123 [style=dashed label="ArrayType"]
  301 -> 124 [style=dashed label="StructType"]
  302 [label="State 302\n\l 52 Expression: Expression • binary_op Expression\l137 Element: Expression •\l"]
  302 -> 149 [style=solid label="\"||\""]
  302 -> 150 [style=solid label="\"&&\""]
  302 -> 151 [style=solid label="'|'"]
  302 -> 152 [style=solid label="'^'"]
  302 -> 153 [style=solid label="'&'"]
  302 -> 154 [style=solid label="\"==\""]
  302 -> 155 [style=solid label="\"!=\""]
  302 -> 156 [style=solid label="'>'"]
  302 -> 157 [style=solid label="'<'"]
  302 -> 158 [style=solid label="\">=\""]
  302 -> 159 [style=solid label="\"<=\""]
  302 -> 160 [style=solid label="\">>\""]
  302 -> 161 [style=solid label="\"<<\""]
  302 -> 162 [style=solid label="'+'"]
  302 -> 163 [style=solid label="'-'"]
  302 -> 164 [style=solid label="'*'"]
  302 -> 165 [style=solid label="'/'"]
  302 -> 166 [style=solid label="'%'"]
  302 -> 168 [style=dashed label="binary_op"]
  302 -> 169 [style=dashed label="rel_op"]
  302 -> 170 [style=dashed label="add_op"]
  302 -> 171 [style=dashed label="mul_op"]
  302 -> "302R137" [style=solid]
 "302R137" [label="R137", fillcolor=3, shape=diamond, style=filled]
  303 [label="State 303\n\l138 Element: LiteralValue •\l"]
  303 -> "303R138" [style=solid]
 "303R138" [label="R138", fillcolor=3, shape=diamond, style=filled]
  304 [label="State 304\n\l133 KeyedElement: Key ':' Element •\l"]
  304 -> "304R133" [style=solid]
 "304R133" [label="R133", fillcolor=3, shape=diamond, style=filled]
  305 [label="State 305\n\l211 Tag: STRING_LIT •\l"]
  305 -> "305R211" [style=solid]
 "305R211" [label="R211", fillcolor=3, shape=diamond, style=filled]
  306 [label="State 306\n\l209 FieldDecl: IdentifierList Type Tag •\l"]
  306 -> "306R209" [style=solid]
 "306R209" [label="R209", fillcolor=3, shape=diamond, style=filled]
  307 [label="State 307\n\l 52 Expression: Expression • binary_op Expression\l169 IfStmt: IF SimpleStmt ';' Expression • Block\l170       | IF SimpleStmt ';' Expression • Block ELSE Block\l171       | IF SimpleStmt ';' Expression • Block ELSE IfStmt\l"]
  307 -> 149 [style=solid label="\"||\""]
  307 -> 150 [style=solid label="\"&&\""]
  307 -> 151 [style=solid label="'|'"]
  307 -> 152 [style=solid label="'^'"]
  307 -> 153 [style=solid label="'&'"]
  307 -> 154 [style=solid label="\"==\""]
  307 -> 155 [style=solid label="\"!=\""]
  307 -> 156 [style=solid label="'>'"]
  307 -> 157 [style=solid label="'<'"]
  307 -> 158 [style=solid label="\">=\""]
  307 -> 159 [style=solid label="\"<=\""]
  307 -> 160 [style=solid label="\">>\""]
  307 -> 161 [style=solid label="\"<<\""]
  307 -> 162 [style=solid label="'+'"]
  307 -> 163 [style=solid label="'-'"]
  307 -> 164 [style=solid label="'*'"]
  307 -> 165 [style=solid label="'/'"]
  307 -> 166 [style=solid label="'%'"]
  307 -> 81 [style=solid label="'{'"]
  307 -> 168 [style=dashed label="binary_op"]
  307 -> 169 [style=dashed label="rel_op"]
  307 -> 170 [style=dashed label="add_op"]
  307 -> 171 [style=dashed label="mul_op"]
  307 -> 313 [style=dashed label="Block"]
  308 [label="State 308\n\l186 RangeClause: ExpressionList '=' RANGE • Expression\l"]
  308 -> 93 [style=solid label="FUNC"]
  308 -> 57 [style=solid label="STRUCT"]
  308 -> 94 [style=solid label="ID"]
  308 -> 95 [style=solid label="STRING_LIT"]
  308 -> 96 [style=solid label="BINARY_LIT"]
  308 -> 97 [style=solid label="HEX_LIT"]
  308 -> 98 [style=solid label="FLOAT_LIT"]
  308 -> 99 [style=solid label="DEC_LIT"]
  308 -> 100 [style=solid label="'^'"]
  308 -> 101 [style=solid label="'&'"]
  308 -> 102 [style=solid label="'+'"]
  308 -> 103 [style=solid label="'-'"]
  308 -> 104 [style=solid label="'*'"]
  308 -> 105 [style=solid label="'!'"]
  308 -> 106 [style=solid label="'['"]
  308 -> 107 [style=solid label="\"(\""]
  308 -> 63 [style=dashed label="PackageName"]
  308 -> 314 [style=dashed label="Expression"]
  308 -> 110 [style=dashed label="UnaryExpr"]
  308 -> 111 [style=dashed label="unary_op"]
  308 -> 112 [style=dashed label="PrimaryExpr"]
  308 -> 113 [style=dashed label="Operand"]
  308 -> 114 [style=dashed label="Literal"]
  308 -> 115 [style=dashed label="INT_LIT"]
  308 -> 116 [style=dashed label="BasicLit"]
  308 -> 117 [style=dashed label="OperandName"]
  308 -> 118 [style=dashed label="QualifiedIdent"]
  308 -> 119 [style=dashed label="CompositeLit"]
  308 -> 120 [style=dashed label="LiteralType"]
  308 -> 121 [style=dashed label="FunctionLit"]
  308 -> 122 [style=dashed label="TypeName"]
  308 -> 123 [style=dashed label="ArrayType"]
  308 -> 124 [style=dashed label="StructType"]
  309 [label="State 309\n\l 52 Expression: Expression • binary_op Expression\l177 Condition: Expression •\l"]
  309 -> 149 [style=solid label="\"||\""]
  309 -> 150 [style=solid label="\"&&\""]
  309 -> 151 [style=solid label="'|'"]
  309 -> 152 [style=solid label="'^'"]
  309 -> 153 [style=solid label="'&'"]
  309 -> 154 [style=solid label="\"==\""]
  309 -> 155 [style=solid label="\"!=\""]
  309 -> 156 [style=solid label="'>'"]
  309 -> 157 [style=solid label="'<'"]
  309 -> 158 [style=solid label="\">=\""]
  309 -> 159 [style=solid label="\"<=\""]
  309 -> 160 [style=solid label="\">>\""]
  309 -> 161 [style=solid label="\"<<\""]
  309 -> 162 [style=solid label="'+'"]
  309 -> 163 [style=solid label="'-'"]
  309 -> 164 [style=solid label="'*'"]
  309 -> 165 [style=solid label="'/'"]
  309 -> 166 [style=solid label="'%'"]
  309 -> 168 [style=dashed label="binary_op"]
  309 -> 169 [style=dashed label="rel_op"]
  309 -> 170 [style=dashed label="add_op"]
  309 -> 171 [style=dashed label="mul_op"]
  309 -> "309R177" [style=solid]
 "309R177" [label="R177", fillcolor=3, shape=diamond, style=filled]
  310 [label="State 310\n\l180 OPT_Condition: Condition •\l"]
  310 -> "310R180" [style=solid]
 "310R180" [label="R180", fillcolor=3, shape=diamond, style=filled]
  311 [label="State 311\n\l178 ForClause: OPT_InitStmt ';' OPT_Condition • ';' OPT_PostStmt\l"]
  311 -> 315 [style=solid label="';'"]
  312 [label="State 312\n\l131 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' KeyedElement •\l"]
  312 -> "312R131" [style=solid]
 "312R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  313 [label="State 313\n\l169 IfStmt: IF SimpleStmt ';' Expression Block •\l170       | IF SimpleStmt ';' Expression Block • ELSE Block\l171       | IF SimpleStmt ';' Expression Block • ELSE IfStmt\l"]
  313 -> 316 [style=solid label="ELSE"]
  313 -> "313R169" [style=solid]
 "313R169" [label="R169", fillcolor=3, shape=diamond, style=filled]
  314 [label="State 314\n\l 52 Expression: Expression • binary_op Expression\l186 RangeClause: ExpressionList '=' RANGE Expression •\l"]
  314 -> 149 [style=solid label="\"||\""]
  314 -> 150 [style=solid label="\"&&\""]
  314 -> 151 [style=solid label="'|'"]
  314 -> 152 [style=solid label="'^'"]
  314 -> 153 [style=solid label="'&'"]
  314 -> 154 [style=solid label="\"==\""]
  314 -> 155 [style=solid label="\"!=\""]
  314 -> 156 [style=solid label="'>'"]
  314 -> 157 [style=solid label="'<'"]
  314 -> 158 [style=solid label="\">=\""]
  314 -> 159 [style=solid label="\"<=\""]
  314 -> 160 [style=solid label="\">>\""]
  314 -> 161 [style=solid label="\"<<\""]
  314 -> 162 [style=solid label="'+'"]
  314 -> 163 [style=solid label="'-'"]
  314 -> 164 [style=solid label="'*'"]
  314 -> 165 [style=solid label="'/'"]
  314 -> 166 [style=solid label="'%'"]
  314 -> 168 [style=dashed label="binary_op"]
  314 -> 169 [style=dashed label="rel_op"]
  314 -> 170 [style=dashed label="add_op"]
  314 -> 171 [style=dashed label="mul_op"]
  314 -> "314R186" [style=solid]
 "314R186" [label="R186", fillcolor=3, shape=diamond, style=filled]
  315 [label="State 315\n\l178 ForClause: OPT_InitStmt ';' OPT_Condition ';' • OPT_PostStmt\l"]
  315 -> 93 [style=solid label="FUNC"]
  315 -> 57 [style=solid label="STRUCT"]
  315 -> 94 [style=solid label="ID"]
  315 -> 95 [style=solid label="STRING_LIT"]
  315 -> 96 [style=solid label="BINARY_LIT"]
  315 -> 97 [style=solid label="HEX_LIT"]
  315 -> 98 [style=solid label="FLOAT_LIT"]
  315 -> 99 [style=solid label="DEC_LIT"]
  315 -> 100 [style=solid label="'^'"]
  315 -> 101 [style=solid label="'&'"]
  315 -> 102 [style=solid label="'+'"]
  315 -> 103 [style=solid label="'-'"]
  315 -> 104 [style=solid label="'*'"]
  315 -> 105 [style=solid label="'!'"]
  315 -> 106 [style=solid label="'['"]
  315 -> 107 [style=solid label="\"(\""]
  315 -> 63 [style=dashed label="PackageName"]
  315 -> 199 [style=dashed label="ExpressionList"]
  315 -> 200 [style=dashed label="Expression"]
  315 -> 110 [style=dashed label="UnaryExpr"]
  315 -> 111 [style=dashed label="unary_op"]
  315 -> 112 [style=dashed label="PrimaryExpr"]
  315 -> 113 [style=dashed label="Operand"]
  315 -> 114 [style=dashed label="Literal"]
  315 -> 115 [style=dashed label="INT_LIT"]
  315 -> 116 [style=dashed label="BasicLit"]
  315 -> 117 [style=dashed label="OperandName"]
  315 -> 118 [style=dashed label="QualifiedIdent"]
  315 -> 119 [style=dashed label="CompositeLit"]
  315 -> 120 [style=dashed label="LiteralType"]
  315 -> 121 [style=dashed label="FunctionLit"]
  315 -> 317 [style=dashed label="SimpleStmt"]
  315 -> 206 [style=dashed label="EmptyStmt"]
  315 -> 207 [style=dashed label="ExpressionStmt"]
  315 -> 208 [style=dashed label="IncDecStmt"]
  315 -> 209 [style=dashed label="Assignment"]
  315 -> 318 [style=dashed label="OPT_PostStmt"]
  315 -> 319 [style=dashed label="PostStmt"]
  315 -> 122 [style=dashed label="TypeName"]
  315 -> 123 [style=dashed label="ArrayType"]
  315 -> 124 [style=dashed label="StructType"]
  315 -> "315R163" [style=solid]
 "315R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  316 [label="State 316\n\l170 IfStmt: IF SimpleStmt ';' Expression Block ELSE • Block\l171       | IF SimpleStmt ';' Expression Block ELSE • IfStmt\l"]
  316 -> 191 [style=solid label="IF"]
  316 -> 81 [style=solid label="'{'"]
  316 -> 320 [style=dashed label="Block"]
  316 -> 321 [style=dashed label="IfStmt"]
  317 [label="State 317\n\l184 PostStmt: SimpleStmt •\l"]
  317 -> "317R184" [style=solid]
 "317R184" [label="R184", fillcolor=3, shape=diamond, style=filled]
  318 [label="State 318\n\l178 ForClause: OPT_InitStmt ';' OPT_Condition ';' OPT_PostStmt •\l"]
  318 -> "318R178" [style=solid]
 "318R178" [label="R178", fillcolor=3, shape=diamond, style=filled]
  319 [label="State 319\n\l182 OPT_PostStmt: PostStmt •\l"]
  319 -> "319R182" [style=solid]
 "319R182" [label="R182", fillcolor=3, shape=diamond, style=filled]
  320 [label="State 320\n\l170 IfStmt: IF SimpleStmt ';' Expression Block ELSE Block •\l"]
  320 -> "320R170" [style=solid]
 "320R170" [label="R170", fillcolor=3, shape=diamond, style=filled]
  321 [label="State 321\n\l171 IfStmt: IF SimpleStmt ';' Expression Block ELSE IfStmt •\l"]
  321 -> "321R171" [style=solid]
 "321R171" [label="R171", fillcolor=3, shape=diamond, style=filled]
}
