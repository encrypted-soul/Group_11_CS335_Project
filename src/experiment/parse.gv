// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parse.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • SourceFile $end\l"]
  0 -> 1 [style=solid label="PACKAGE"]
  0 -> 2 [style=dashed label="SourceFile"]
  0 -> 3 [style=dashed label="PackageClause"]
  1 [label="State 1\n\l  2 PackageClause: PACKAGE • PackageName\l"]
  1 -> 4 [style=solid label="ID"]
  1 -> 5 [style=dashed label="PackageName"]
  2 [label="State 2\n\l  0 $accept: SourceFile • $end\l"]
  2 -> 6 [style=solid label="$end"]
  3 [label="State 3\n\l  1 SourceFile: PackageClause • ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  3 -> 7 [style=solid label="';'"]
  4 [label="State 4\n\l  3 PackageName: ID •\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  2 PackageClause: PACKAGE PackageName •\l"]
  5 -> "5R2" [style=solid]
 "5R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  0 $accept: SourceFile $end •\l"]
  6 -> "6R0" [style=solid]
 "6R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  7 [label="State 7\n\l  1 SourceFile: PackageClause ';' • STAR_ImportDecl_SC STAR_TopLevelDecl_SC\l"]
  7 -> 8 [style=dashed label="STAR_ImportDecl_SC"]
  7 -> "7R15" [style=solid]
 "7R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC • STAR_TopLevelDecl_SC\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC • ImportDecl ';'\l"]
  8 -> 9 [style=solid label="IMPORT"]
  8 -> 10 [style=dashed label="ImportDecl"]
  8 -> 11 [style=dashed label="STAR_TopLevelDecl_SC"]
  8 -> "8R13" [style=solid]
 "8R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  4 ImportDecl: IMPORT • ImportSpec\l  5           | IMPORT • '(' STAR_ImportSpec_SC ')'\l"]
  9 -> 4 [style=solid label="ID"]
  9 -> 12 [style=solid label="STRING_LIT"]
  9 -> 13 [style=solid label="'('"]
  9 -> 14 [style=solid label="'.'"]
  9 -> 15 [style=dashed label="PackageName"]
  9 -> 16 [style=dashed label="ImportSpec"]
  9 -> 17 [style=dashed label="ImportPath"]
  10 [label="State 10\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl • ';'\l"]
  10 -> 18 [style=solid label="';'"]
  11 [label="State 11\n\l  1 SourceFile: PackageClause ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC •\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC • TopLevelDecl ';'\l"]
  11 -> 19 [style=solid label="FUNC"]
  11 -> 20 [style=solid label="CONST"]
  11 -> 21 [style=solid label="VAR"]
  11 -> 22 [style=solid label="TYPE_TOK"]
  11 -> 23 [style=dashed label="TopLevelDecl"]
  11 -> 24 [style=dashed label="Declaration"]
  11 -> 25 [style=dashed label="ConstDecl"]
  11 -> 26 [style=dashed label="TypeDecl"]
  11 -> 27 [style=dashed label="VarDecl"]
  11 -> 28 [style=dashed label="FunctionDecl"]
  11 -> "11R1" [style=solid]
 "11R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  9 ImportPath: STRING_LIT •\l"]
  12 -> "12R9" [style=solid]
 "12R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  5 ImportDecl: IMPORT '(' • STAR_ImportSpec_SC ')'\l"]
  13 -> 29 [style=dashed label="STAR_ImportSpec_SC"]
  13 -> "13R17" [style=solid]
 "13R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  7 ImportSpec: '.' • ImportPath\l"]
  14 -> 12 [style=solid label="STRING_LIT"]
  14 -> 30 [style=dashed label="ImportPath"]
  15 [label="State 15\n\l  8 ImportSpec: PackageName • ImportPath\l"]
  15 -> 12 [style=solid label="STRING_LIT"]
  15 -> 31 [style=dashed label="ImportPath"]
  16 [label="State 16\n\l  4 ImportDecl: IMPORT ImportSpec •\l"]
  16 -> "16R4" [style=solid]
 "16R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  6 ImportSpec: ImportPath •\l"]
  17 -> "17R6" [style=solid]
 "17R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl ';' •\l"]
  18 -> "18R14" [style=solid]
 "18R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l138 FunctionDecl: FUNC • FunctionName Signature FunctionBody\l139             | FUNC • FunctionName Signature\l"]
  19 -> 32 [style=solid label="ID"]
  19 -> 33 [style=dashed label="FunctionName"]
  20 [label="State 20\n\l 37 ConstDecl: CONST • ConstSpec\l 38          | CONST • '(' STAR_ConstSpec_SC ')'\l"]
  20 -> 34 [style=solid label="ID"]
  20 -> 35 [style=solid label="'('"]
  20 -> 36 [style=dashed label="ConstSpec"]
  20 -> 37 [style=dashed label="IdentifierList"]
  21 [label="State 21\n\l 47 VarDecl: VAR • VarSpec\l 48        | VAR • '(' STAR_VarSpec_SC ')'\l"]
  21 -> 34 [style=solid label="ID"]
  21 -> 38 [style=solid label="'('"]
  21 -> 39 [style=dashed label="IdentifierList"]
  21 -> 40 [style=dashed label="VarSpec"]
  22 [label="State 22\n\l 41 TypeDecl: TYPE_TOK • TypeSpec\l 42         | TYPE_TOK • '(' STAR_TypeSpec_SC ')'\l"]
  22 -> 41 [style=solid label="ID"]
  22 -> 42 [style=solid label="'('"]
  22 -> 43 [style=dashed label="TypeSpec"]
  22 -> 44 [style=dashed label="AliasDecl"]
  22 -> 45 [style=dashed label="TypeDef"]
  23 [label="State 23\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl • ';'\l"]
  23 -> 46 [style=solid label="';'"]
  24 [label="State 24\n\l 10 TopLevelDecl: Declaration •\l"]
  24 -> "24R10" [style=solid]
 "24R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 34 Declaration: ConstDecl •\l"]
  25 -> "25R34" [style=solid]
 "25R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 35 Declaration: TypeDecl •\l"]
  26 -> "26R35" [style=solid]
 "26R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 36 Declaration: VarDecl •\l"]
  27 -> "27R36" [style=solid]
 "27R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 11 TopLevelDecl: FunctionDecl •\l"]
  28 -> "28R11" [style=solid]
 "28R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC • ')'\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC • ImportSpec ';'\l"]
  29 -> 4 [style=solid label="ID"]
  29 -> 12 [style=solid label="STRING_LIT"]
  29 -> 47 [style=solid label="')'"]
  29 -> 14 [style=solid label="'.'"]
  29 -> 15 [style=dashed label="PackageName"]
  29 -> 48 [style=dashed label="ImportSpec"]
  29 -> 17 [style=dashed label="ImportPath"]
  30 [label="State 30\n\l  7 ImportSpec: '.' ImportPath •\l"]
  30 -> "30R7" [style=solid]
 "30R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l  8 ImportSpec: PackageName ImportPath •\l"]
  31 -> "31R8" [style=solid]
 "31R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l140 FunctionName: ID •\l"]
  32 -> "32R140" [style=solid]
 "32R140" [label="R140", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l138 FunctionDecl: FUNC FunctionName • Signature FunctionBody\l139             | FUNC FunctionName • Signature\l"]
  33 -> 49 [style=solid label="'('"]
  33 -> 50 [style=dashed label="Signature"]
  33 -> 51 [style=dashed label="Parameters"]
  34 [label="State 34\n\l 40 IdentifierList: ID • STAR_CM_ID\l"]
  34 -> 52 [style=dashed label="STAR_CM_ID"]
  34 -> "34R19" [style=solid]
 "34R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 38 ConstDecl: CONST '(' • STAR_ConstSpec_SC ')'\l"]
  35 -> 53 [style=dashed label="STAR_ConstSpec_SC"]
  35 -> "35R21" [style=solid]
 "35R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 37 ConstDecl: CONST ConstSpec •\l"]
  36 -> "36R37" [style=solid]
 "36R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 39 ConstSpec: IdentifierList •\l"]
  37 -> "37R39" [style=solid]
 "37R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 48 VarDecl: VAR '(' • STAR_VarSpec_SC ')'\l"]
  38 -> 54 [style=dashed label="STAR_VarSpec_SC"]
  38 -> "38R23" [style=solid]
 "38R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 49 VarSpec: IdentifierList • \"=\" ExpressionList\l"]
  39 -> 55 [style=solid label="\"=\""]
  40 [label="State 40\n\l 47 VarDecl: VAR VarSpec •\l"]
  40 -> "40R47" [style=solid]
 "40R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 45 AliasDecl: ID • '=' Type\l 46 TypeDef: ID • Type\l"]
  41 -> 56 [style=solid label="FUNC"]
  41 -> 57 [style=solid label="STRUCT"]
  41 -> 58 [style=solid label="ID"]
  41 -> 59 [style=solid label="'='"]
  41 -> 60 [style=solid label="'*'"]
  41 -> 61 [style=solid label="'('"]
  41 -> 62 [style=solid label="'['"]
  41 -> 63 [style=dashed label="PackageName"]
  41 -> 64 [style=dashed label="QualifiedIdent"]
  41 -> 65 [style=dashed label="Type"]
  41 -> 66 [style=dashed label="TypeName"]
  41 -> 67 [style=dashed label="TypeLit"]
  41 -> 68 [style=dashed label="ArrayType"]
  41 -> 69 [style=dashed label="StructType"]
  41 -> 70 [style=dashed label="PointerType"]
  41 -> 71 [style=dashed label="FunctionType"]
  42 [label="State 42\n\l 42 TypeDecl: TYPE_TOK '(' • STAR_TypeSpec_SC ')'\l"]
  42 -> 72 [style=dashed label="STAR_TypeSpec_SC"]
  42 -> "42R27" [style=solid]
 "42R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 41 TypeDecl: TYPE_TOK TypeSpec •\l"]
  43 -> "43R41" [style=solid]
 "43R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 43 TypeSpec: AliasDecl •\l"]
  44 -> "44R43" [style=solid]
 "44R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 44 TypeSpec: TypeDef •\l"]
  45 -> "45R44" [style=solid]
 "45R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl ';' •\l"]
  46 -> "46R12" [style=solid]
 "46R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l  5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC ')' •\l"]
  47 -> "47R5" [style=solid]
 "47R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec • ';'\l"]
  48 -> 73 [style=solid label="';'"]
  49 [label="State 49\n\l218 Parameters: '(' • ')'\l219           | '(' • ParameterList ')'\l"]
  49 -> 34 [style=solid label="ID"]
  49 -> 74 [style=solid label="ELIPSIS"]
  49 -> 75 [style=solid label="')'"]
  49 -> 76 [style=dashed label="IdentifierList"]
  49 -> 77 [style=dashed label="ParameterList"]
  49 -> 78 [style=dashed label="ParameterDecl"]
  50 [label="State 50\n\l138 FunctionDecl: FUNC FunctionName Signature • FunctionBody\l139             | FUNC FunctionName Signature •\l"]
  50 -> 79 [style=solid label="'{'"]
  50 -> 80 [style=dashed label="FunctionBody"]
  50 -> 81 [style=dashed label="Block"]
  50 -> "50R139" [style=solid]
 "50R139" [label="R139", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l213 Signature: Parameters •\l214          | Parameters • Result\l"]
  51 -> 56 [style=solid label="FUNC"]
  51 -> 57 [style=solid label="STRUCT"]
  51 -> 58 [style=solid label="ID"]
  51 -> 60 [style=solid label="'*'"]
  51 -> 49 [style=solid label="'('"]
  51 -> 62 [style=solid label="'['"]
  51 -> 63 [style=dashed label="PackageName"]
  51 -> 64 [style=dashed label="QualifiedIdent"]
  51 -> 82 [style=dashed label="TypeName"]
  51 -> 83 [style=dashed label="TypeLit"]
  51 -> 68 [style=dashed label="ArrayType"]
  51 -> 69 [style=dashed label="StructType"]
  51 -> 70 [style=dashed label="PointerType"]
  51 -> 71 [style=dashed label="FunctionType"]
  51 -> 84 [style=dashed label="Result"]
  51 -> 85 [style=dashed label="Parameters"]
  51 -> "51R213" [style=solid]
 "51R213" [label="R213", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 18 STAR_CM_ID: STAR_CM_ID • ',' ID\l 40 IdentifierList: ID STAR_CM_ID •\l"]
  52 -> 86 [style=solid label="','"]
  52 -> "52R40" [style=solid]
 "52R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC • ConstSpec ';'\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC • ')'\l"]
  53 -> 34 [style=solid label="ID"]
  53 -> 87 [style=solid label="')'"]
  53 -> 88 [style=dashed label="ConstSpec"]
  53 -> 37 [style=dashed label="IdentifierList"]
  54 [label="State 54\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC • VarSpec ';'\l 48 VarDecl: VAR '(' STAR_VarSpec_SC • ')'\l"]
  54 -> 34 [style=solid label="ID"]
  54 -> 89 [style=solid label="')'"]
  54 -> 39 [style=dashed label="IdentifierList"]
  54 -> 90 [style=dashed label="VarSpec"]
  55 [label="State 55\n\l 49 VarSpec: IdentifierList \"=\" • ExpressionList\l"]
  55 -> 91 [style=solid label="FUNC"]
  55 -> 57 [style=solid label="STRUCT"]
  55 -> 92 [style=solid label="ID"]
  55 -> 93 [style=solid label="STRING_LIT"]
  55 -> 94 [style=solid label="BINARY_LIT"]
  55 -> 95 [style=solid label="HEX_LIT"]
  55 -> 96 [style=solid label="FLOAT_LIT"]
  55 -> 97 [style=solid label="DEC_LIT"]
  55 -> 98 [style=solid label="'^'"]
  55 -> 99 [style=solid label="'&'"]
  55 -> 100 [style=solid label="'+'"]
  55 -> 101 [style=solid label="'-'"]
  55 -> 102 [style=solid label="'*'"]
  55 -> 103 [style=solid label="'!'"]
  55 -> 104 [style=solid label="'['"]
  55 -> 105 [style=solid label="\"(\""]
  55 -> 63 [style=dashed label="PackageName"]
  55 -> 106 [style=dashed label="ExpressionList"]
  55 -> 107 [style=dashed label="Expression"]
  55 -> 108 [style=dashed label="UnaryExpr"]
  55 -> 109 [style=dashed label="unary_op"]
  55 -> 110 [style=dashed label="PrimaryExpr"]
  55 -> 111 [style=dashed label="Operand"]
  55 -> 112 [style=dashed label="Literal"]
  55 -> 113 [style=dashed label="INT_LIT"]
  55 -> 114 [style=dashed label="BasicLit"]
  55 -> 115 [style=dashed label="OperandName"]
  55 -> 116 [style=dashed label="QualifiedIdent"]
  55 -> 117 [style=dashed label="CompositeLit"]
  55 -> 118 [style=dashed label="LiteralType"]
  55 -> 119 [style=dashed label="FunctionLit"]
  55 -> 120 [style=dashed label="TypeName"]
  55 -> 121 [style=dashed label="ArrayType"]
  55 -> 122 [style=dashed label="StructType"]
  56 [label="State 56\n\l212 FunctionType: FUNC • Signature\l"]
  56 -> 49 [style=solid label="'('"]
  56 -> 123 [style=dashed label="Signature"]
  56 -> 51 [style=dashed label="Parameters"]
  57 [label="State 57\n\l206 StructType: STRUCT • '{' STAR_FieldDecl_SC '}'\l"]
  57 -> 124 [style=solid label="'{'"]
  58 [label="State 58\n\l  3 PackageName: ID •\l197 TypeName: ID •\l"]
  58 -> "58R3" [label="['.']", style=solid]
 "58R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  58 -> "58R197" [style=solid]
 "58R197" [label="R197", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 45 AliasDecl: ID '=' • Type\l"]
  59 -> 56 [style=solid label="FUNC"]
  59 -> 57 [style=solid label="STRUCT"]
  59 -> 58 [style=solid label="ID"]
  59 -> 60 [style=solid label="'*'"]
  59 -> 61 [style=solid label="'('"]
  59 -> 62 [style=solid label="'['"]
  59 -> 63 [style=dashed label="PackageName"]
  59 -> 64 [style=dashed label="QualifiedIdent"]
  59 -> 125 [style=dashed label="Type"]
  59 -> 66 [style=dashed label="TypeName"]
  59 -> 67 [style=dashed label="TypeLit"]
  59 -> 68 [style=dashed label="ArrayType"]
  59 -> 69 [style=dashed label="StructType"]
  59 -> 70 [style=dashed label="PointerType"]
  59 -> 71 [style=dashed label="FunctionType"]
  60 [label="State 60\n\l210 PointerType: '*' • BaseType\l"]
  60 -> 56 [style=solid label="FUNC"]
  60 -> 57 [style=solid label="STRUCT"]
  60 -> 58 [style=solid label="ID"]
  60 -> 60 [style=solid label="'*'"]
  60 -> 61 [style=solid label="'('"]
  60 -> 62 [style=solid label="'['"]
  60 -> 63 [style=dashed label="PackageName"]
  60 -> 64 [style=dashed label="QualifiedIdent"]
  60 -> 126 [style=dashed label="Type"]
  60 -> 66 [style=dashed label="TypeName"]
  60 -> 67 [style=dashed label="TypeLit"]
  60 -> 68 [style=dashed label="ArrayType"]
  60 -> 69 [style=dashed label="StructType"]
  60 -> 70 [style=dashed label="PointerType"]
  60 -> 127 [style=dashed label="BaseType"]
  60 -> 71 [style=dashed label="FunctionType"]
  61 [label="State 61\n\l196 Type: '(' • Type ')'\l"]
  61 -> 56 [style=solid label="FUNC"]
  61 -> 57 [style=solid label="STRUCT"]
  61 -> 58 [style=solid label="ID"]
  61 -> 60 [style=solid label="'*'"]
  61 -> 61 [style=solid label="'('"]
  61 -> 62 [style=solid label="'['"]
  61 -> 63 [style=dashed label="PackageName"]
  61 -> 64 [style=dashed label="QualifiedIdent"]
  61 -> 128 [style=dashed label="Type"]
  61 -> 66 [style=dashed label="TypeName"]
  61 -> 67 [style=dashed label="TypeLit"]
  61 -> 68 [style=dashed label="ArrayType"]
  61 -> 69 [style=dashed label="StructType"]
  61 -> 70 [style=dashed label="PointerType"]
  61 -> 71 [style=dashed label="FunctionType"]
  62 [label="State 62\n\l203 ArrayType: '[' • ArrayLength ']' ElementType\l"]
  62 -> 91 [style=solid label="FUNC"]
  62 -> 57 [style=solid label="STRUCT"]
  62 -> 92 [style=solid label="ID"]
  62 -> 93 [style=solid label="STRING_LIT"]
  62 -> 94 [style=solid label="BINARY_LIT"]
  62 -> 95 [style=solid label="HEX_LIT"]
  62 -> 96 [style=solid label="FLOAT_LIT"]
  62 -> 97 [style=solid label="DEC_LIT"]
  62 -> 98 [style=solid label="'^'"]
  62 -> 99 [style=solid label="'&'"]
  62 -> 100 [style=solid label="'+'"]
  62 -> 101 [style=solid label="'-'"]
  62 -> 102 [style=solid label="'*'"]
  62 -> 103 [style=solid label="'!'"]
  62 -> 104 [style=solid label="'['"]
  62 -> 105 [style=solid label="\"(\""]
  62 -> 63 [style=dashed label="PackageName"]
  62 -> 129 [style=dashed label="Expression"]
  62 -> 108 [style=dashed label="UnaryExpr"]
  62 -> 109 [style=dashed label="unary_op"]
  62 -> 110 [style=dashed label="PrimaryExpr"]
  62 -> 111 [style=dashed label="Operand"]
  62 -> 112 [style=dashed label="Literal"]
  62 -> 113 [style=dashed label="INT_LIT"]
  62 -> 114 [style=dashed label="BasicLit"]
  62 -> 115 [style=dashed label="OperandName"]
  62 -> 116 [style=dashed label="QualifiedIdent"]
  62 -> 117 [style=dashed label="CompositeLit"]
  62 -> 118 [style=dashed label="LiteralType"]
  62 -> 119 [style=dashed label="FunctionLit"]
  62 -> 120 [style=dashed label="TypeName"]
  62 -> 121 [style=dashed label="ArrayType"]
  62 -> 130 [style=dashed label="ArrayLength"]
  62 -> 122 [style=dashed label="StructType"]
  63 [label="State 63\n\l120 QualifiedIdent: PackageName • '.' ID\l"]
  63 -> 131 [style=solid label="'.'"]
  64 [label="State 64\n\l198 TypeName: QualifiedIdent •\l"]
  64 -> "64R198" [style=solid]
 "64R198" [label="R198", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 46 TypeDef: ID Type •\l"]
  65 -> "65R46" [style=solid]
 "65R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l194 Type: TypeName •\l"]
  66 -> "66R194" [style=solid]
 "66R194" [label="R194", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l195 Type: TypeLit •\l"]
  67 -> "67R195" [style=solid]
 "67R195" [label="R195", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l199 TypeLit: ArrayType •\l"]
  68 -> "68R199" [style=solid]
 "68R199" [label="R199", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l200 TypeLit: StructType •\l"]
  69 -> "69R200" [style=solid]
 "69R200" [label="R200", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l201 TypeLit: PointerType •\l"]
  70 -> "70R201" [style=solid]
 "70R201" [label="R201", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l202 TypeLit: FunctionType •\l"]
  71 -> "71R202" [style=solid]
 "71R202" [label="R202", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC • ';'\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC • ')'\l"]
  72 -> 132 [style=solid label="';'"]
  72 -> 133 [style=solid label="')'"]
  73 [label="State 73\n\l 16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec ';' •\l"]
  73 -> "73R16" [style=solid]
 "73R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l223 ParameterDecl: ELIPSIS • Type\l"]
  74 -> 56 [style=solid label="FUNC"]
  74 -> 57 [style=solid label="STRUCT"]
  74 -> 58 [style=solid label="ID"]
  74 -> 60 [style=solid label="'*'"]
  74 -> 61 [style=solid label="'('"]
  74 -> 62 [style=solid label="'['"]
  74 -> 63 [style=dashed label="PackageName"]
  74 -> 64 [style=dashed label="QualifiedIdent"]
  74 -> 134 [style=dashed label="Type"]
  74 -> 66 [style=dashed label="TypeName"]
  74 -> 67 [style=dashed label="TypeLit"]
  74 -> 68 [style=dashed label="ArrayType"]
  74 -> 69 [style=dashed label="StructType"]
  74 -> 70 [style=dashed label="PointerType"]
  74 -> 71 [style=dashed label="FunctionType"]
  75 [label="State 75\n\l218 Parameters: '(' ')' •\l"]
  75 -> "75R218" [style=solid]
 "75R218" [label="R218", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l221 ParameterDecl: IdentifierList • Type\l222              | IdentifierList • ELIPSIS Type\l"]
  76 -> 56 [style=solid label="FUNC"]
  76 -> 57 [style=solid label="STRUCT"]
  76 -> 58 [style=solid label="ID"]
  76 -> 135 [style=solid label="ELIPSIS"]
  76 -> 60 [style=solid label="'*'"]
  76 -> 61 [style=solid label="'('"]
  76 -> 62 [style=solid label="'['"]
  76 -> 63 [style=dashed label="PackageName"]
  76 -> 64 [style=dashed label="QualifiedIdent"]
  76 -> 136 [style=dashed label="Type"]
  76 -> 66 [style=dashed label="TypeName"]
  76 -> 67 [style=dashed label="TypeLit"]
  76 -> 68 [style=dashed label="ArrayType"]
  76 -> 69 [style=dashed label="StructType"]
  76 -> 70 [style=dashed label="PointerType"]
  76 -> 71 [style=dashed label="FunctionType"]
  77 [label="State 77\n\l219 Parameters: '(' ParameterList • ')'\l"]
  77 -> 137 [style=solid label="')'"]
  78 [label="State 78\n\l220 ParameterList: ParameterDecl • STAR_CM_ParameterDecl\l"]
  78 -> 138 [style=dashed label="STAR_CM_ParameterDecl"]
  78 -> "78R31" [style=solid]
 "78R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l142 Block: '{' • STAR_Statement_SC '}'\l"]
  79 -> 139 [style=dashed label="STAR_Statement_SC"]
  79 -> "79R29" [style=solid]
 "79R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l138 FunctionDecl: FUNC FunctionName Signature FunctionBody •\l"]
  80 -> "80R138" [style=solid]
 "80R138" [label="R138", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l141 FunctionBody: Block •\l"]
  81 -> "81R141" [style=solid]
 "81R141" [label="R141", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l216 Result: TypeName •\l"]
  82 -> "82R216" [style=solid]
 "82R216" [label="R216", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l217 Result: TypeLit •\l"]
  83 -> "83R217" [style=solid]
 "83R217" [label="R217", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l214 Signature: Parameters Result •\l"]
  84 -> "84R214" [style=solid]
 "84R214" [label="R214", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l215 Result: Parameters •\l"]
  85 -> "85R215" [style=solid]
 "85R215" [label="R215", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 18 STAR_CM_ID: STAR_CM_ID ',' • ID\l"]
  86 -> 140 [style=solid label="ID"]
  87 [label="State 87\n\l 38 ConstDecl: CONST '(' STAR_ConstSpec_SC ')' •\l"]
  87 -> "87R38" [style=solid]
 "87R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec • ';'\l"]
  88 -> 141 [style=solid label="';'"]
  89 [label="State 89\n\l 48 VarDecl: VAR '(' STAR_VarSpec_SC ')' •\l"]
  89 -> "89R48" [style=solid]
 "89R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec • ';'\l"]
  90 -> 142 [style=solid label="';'"]
  91 [label="State 91\n\l137 FunctionLit: FUNC • Signature FunctionBody\l"]
  91 -> 49 [style=solid label="'('"]
  91 -> 143 [style=dashed label="Signature"]
  91 -> 51 [style=dashed label="Parameters"]
  92 [label="State 92\n\l  3 PackageName: ID •\l118 OperandName: ID •\l197 TypeName: ID •\l"]
  92 -> "92R3" [label="['.']", style=solid]
 "92R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  92 -> "92R118d" [label="['.']", style=solid]
 "92R118d" [label="R118", fillcolor=5, shape=diamond, style=filled]
  92 -> "92R118" [style=solid]
 "92R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  92 -> "92R197d" [label="['{']", style=solid]
 "92R197d" [label="R197", fillcolor=5, shape=diamond, style=filled]
  93 [label="State 93\n\l117 BasicLit: STRING_LIT •\l"]
  93 -> "93R117" [style=solid]
 "93R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l113 INT_LIT: BINARY_LIT •\l"]
  94 -> "94R113" [style=solid]
 "94R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l114 INT_LIT: HEX_LIT •\l"]
  95 -> "95R114" [style=solid]
 "95R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l116 BasicLit: FLOAT_LIT •\l"]
  96 -> "96R116" [style=solid]
 "96R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l112 INT_LIT: DEC_LIT •\l"]
  97 -> "97R112" [style=solid]
 "97R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 89 unary_op: '^' •\l"]
  98 -> "98R89" [style=solid]
 "98R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 91 unary_op: '&' •\l"]
  99 -> "99R91" [style=solid]
 "99R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 86 unary_op: '+' •\l"]
  100 -> "100R86" [style=solid]
 "100R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 87 unary_op: '-' •\l"]
  101 -> "101R87" [style=solid]
 "101R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 90 unary_op: '*' •\l"]
  102 -> "102R90" [style=solid]
 "102R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 88 unary_op: '!' •\l"]
  103 -> "103R88" [style=solid]
 "103R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l124 LiteralType: '[' • ELIPSIS ']' ElementType\l203 ArrayType: '[' • ArrayLength ']' ElementType\l"]
  104 -> 91 [style=solid label="FUNC"]
  104 -> 57 [style=solid label="STRUCT"]
  104 -> 92 [style=solid label="ID"]
  104 -> 93 [style=solid label="STRING_LIT"]
  104 -> 94 [style=solid label="BINARY_LIT"]
  104 -> 95 [style=solid label="HEX_LIT"]
  104 -> 96 [style=solid label="FLOAT_LIT"]
  104 -> 97 [style=solid label="DEC_LIT"]
  104 -> 144 [style=solid label="ELIPSIS"]
  104 -> 98 [style=solid label="'^'"]
  104 -> 99 [style=solid label="'&'"]
  104 -> 100 [style=solid label="'+'"]
  104 -> 101 [style=solid label="'-'"]
  104 -> 102 [style=solid label="'*'"]
  104 -> 103 [style=solid label="'!'"]
  104 -> 104 [style=solid label="'['"]
  104 -> 105 [style=solid label="\"(\""]
  104 -> 63 [style=dashed label="PackageName"]
  104 -> 129 [style=dashed label="Expression"]
  104 -> 108 [style=dashed label="UnaryExpr"]
  104 -> 109 [style=dashed label="unary_op"]
  104 -> 110 [style=dashed label="PrimaryExpr"]
  104 -> 111 [style=dashed label="Operand"]
  104 -> 112 [style=dashed label="Literal"]
  104 -> 113 [style=dashed label="INT_LIT"]
  104 -> 114 [style=dashed label="BasicLit"]
  104 -> 115 [style=dashed label="OperandName"]
  104 -> 116 [style=dashed label="QualifiedIdent"]
  104 -> 117 [style=dashed label="CompositeLit"]
  104 -> 118 [style=dashed label="LiteralType"]
  104 -> 119 [style=dashed label="FunctionLit"]
  104 -> 120 [style=dashed label="TypeName"]
  104 -> 121 [style=dashed label="ArrayType"]
  104 -> 130 [style=dashed label="ArrayLength"]
  104 -> 122 [style=dashed label="StructType"]
  105 [label="State 105\n\l108 Operand: \"(\" • Expression \")\"\l"]
  105 -> 91 [style=solid label="FUNC"]
  105 -> 57 [style=solid label="STRUCT"]
  105 -> 92 [style=solid label="ID"]
  105 -> 93 [style=solid label="STRING_LIT"]
  105 -> 94 [style=solid label="BINARY_LIT"]
  105 -> 95 [style=solid label="HEX_LIT"]
  105 -> 96 [style=solid label="FLOAT_LIT"]
  105 -> 97 [style=solid label="DEC_LIT"]
  105 -> 98 [style=solid label="'^'"]
  105 -> 99 [style=solid label="'&'"]
  105 -> 100 [style=solid label="'+'"]
  105 -> 101 [style=solid label="'-'"]
  105 -> 102 [style=solid label="'*'"]
  105 -> 103 [style=solid label="'!'"]
  105 -> 104 [style=solid label="'['"]
  105 -> 105 [style=solid label="\"(\""]
  105 -> 63 [style=dashed label="PackageName"]
  105 -> 145 [style=dashed label="Expression"]
  105 -> 108 [style=dashed label="UnaryExpr"]
  105 -> 109 [style=dashed label="unary_op"]
  105 -> 110 [style=dashed label="PrimaryExpr"]
  105 -> 111 [style=dashed label="Operand"]
  105 -> 112 [style=dashed label="Literal"]
  105 -> 113 [style=dashed label="INT_LIT"]
  105 -> 114 [style=dashed label="BasicLit"]
  105 -> 115 [style=dashed label="OperandName"]
  105 -> 116 [style=dashed label="QualifiedIdent"]
  105 -> 117 [style=dashed label="CompositeLit"]
  105 -> 118 [style=dashed label="LiteralType"]
  105 -> 119 [style=dashed label="FunctionLit"]
  105 -> 120 [style=dashed label="TypeName"]
  105 -> 121 [style=dashed label="ArrayType"]
  105 -> 122 [style=dashed label="StructType"]
  106 [label="State 106\n\l 49 VarSpec: IdentifierList \"=\" ExpressionList •\l"]
  106 -> "106R49" [style=solid]
 "106R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l"]
  107 -> 146 [style=solid label="\"||\""]
  107 -> 147 [style=solid label="\"&&\""]
  107 -> 148 [style=solid label="'|'"]
  107 -> 149 [style=solid label="'^'"]
  107 -> 150 [style=solid label="'&'"]
  107 -> 151 [style=solid label="\"==\""]
  107 -> 152 [style=solid label="\"!=\""]
  107 -> 153 [style=solid label="'>'"]
  107 -> 154 [style=solid label="'<'"]
  107 -> 155 [style=solid label="\">=\""]
  107 -> 156 [style=solid label="\"<=\""]
  107 -> 157 [style=solid label="\">>\""]
  107 -> 158 [style=solid label="\"<<\""]
  107 -> 159 [style=solid label="'+'"]
  107 -> 160 [style=solid label="'-'"]
  107 -> 161 [style=solid label="'*'"]
  107 -> 162 [style=solid label="'/'"]
  107 -> 163 [style=solid label="'%'"]
  107 -> 164 [style=dashed label="STAR_CM_EXP"]
  107 -> 165 [style=dashed label="binary_op"]
  107 -> 166 [style=dashed label="rel_op"]
  107 -> 167 [style=dashed label="add_op"]
  107 -> 168 [style=dashed label="mul_op"]
  107 -> "107R25" [style=solid]
 "107R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 51 Expression: UnaryExpr •\l"]
  108 -> "108R51" [style=solid]
 "108R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 54 UnaryExpr: unary_op • UnaryExpr\l"]
  109 -> 91 [style=solid label="FUNC"]
  109 -> 57 [style=solid label="STRUCT"]
  109 -> 92 [style=solid label="ID"]
  109 -> 93 [style=solid label="STRING_LIT"]
  109 -> 94 [style=solid label="BINARY_LIT"]
  109 -> 95 [style=solid label="HEX_LIT"]
  109 -> 96 [style=solid label="FLOAT_LIT"]
  109 -> 97 [style=solid label="DEC_LIT"]
  109 -> 98 [style=solid label="'^'"]
  109 -> 99 [style=solid label="'&'"]
  109 -> 100 [style=solid label="'+'"]
  109 -> 101 [style=solid label="'-'"]
  109 -> 102 [style=solid label="'*'"]
  109 -> 103 [style=solid label="'!'"]
  109 -> 104 [style=solid label="'['"]
  109 -> 105 [style=solid label="\"(\""]
  109 -> 63 [style=dashed label="PackageName"]
  109 -> 169 [style=dashed label="UnaryExpr"]
  109 -> 109 [style=dashed label="unary_op"]
  109 -> 110 [style=dashed label="PrimaryExpr"]
  109 -> 111 [style=dashed label="Operand"]
  109 -> 112 [style=dashed label="Literal"]
  109 -> 113 [style=dashed label="INT_LIT"]
  109 -> 114 [style=dashed label="BasicLit"]
  109 -> 115 [style=dashed label="OperandName"]
  109 -> 116 [style=dashed label="QualifiedIdent"]
  109 -> 117 [style=dashed label="CompositeLit"]
  109 -> 118 [style=dashed label="LiteralType"]
  109 -> 119 [style=dashed label="FunctionLit"]
  109 -> 120 [style=dashed label="TypeName"]
  109 -> 121 [style=dashed label="ArrayType"]
  109 -> 122 [style=dashed label="StructType"]
  110 [label="State 110\n\l 53 UnaryExpr: PrimaryExpr •\l 93 PrimaryExpr: PrimaryExpr • Index\l 94            | PrimaryExpr • Selector\l 95            | PrimaryExpr • Arguments\l"]
  110 -> 170 [style=solid label="'('"]
  110 -> 171 [style=solid label="'.'"]
  110 -> 172 [style=solid label="'['"]
  110 -> 173 [style=dashed label="Selector"]
  110 -> 174 [style=dashed label="Index"]
  110 -> 175 [style=dashed label="Arguments"]
  110 -> "110R53" [style=solid]
 "110R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 92 PrimaryExpr: Operand •\l"]
  111 -> "111R92" [style=solid]
 "111R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l106 Operand: Literal •\l"]
  112 -> "112R106" [style=solid]
 "112R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  113 [label="State 113\n\l115 BasicLit: INT_LIT •\l"]
  113 -> "113R115" [style=solid]
 "113R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l109 Literal: BasicLit •\l"]
  114 -> "114R109" [style=solid]
 "114R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l107 Operand: OperandName •\l"]
  115 -> "115R107" [style=solid]
 "115R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l119 OperandName: QualifiedIdent •\l198 TypeName: QualifiedIdent •\l"]
  116 -> "116R119" [style=solid]
 "116R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  116 -> "116R198d" [label="['{']", style=solid]
 "116R198d" [label="R198", fillcolor=5, shape=diamond, style=filled]
  117 [label="State 117\n\l110 Literal: CompositeLit •\l"]
  117 -> "117R110" [style=solid]
 "117R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l121 CompositeLit: LiteralType • LiteralValue\l"]
  118 -> 176 [style=solid label="'{'"]
  118 -> 177 [style=dashed label="LiteralValue"]
  119 [label="State 119\n\l111 Literal: FunctionLit •\l"]
  119 -> "119R111" [style=solid]
 "119R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l125 LiteralType: TypeName •\l"]
  120 -> "120R125" [style=solid]
 "120R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l123 LiteralType: ArrayType •\l"]
  121 -> "121R123" [style=solid]
 "121R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l122 LiteralType: StructType •\l"]
  122 -> "122R122" [style=solid]
 "122R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l212 FunctionType: FUNC Signature •\l"]
  123 -> "123R212" [style=solid]
 "123R212" [label="R212", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l206 StructType: STRUCT '{' • STAR_FieldDecl_SC '}'\l"]
  124 -> 178 [style=dashed label="STAR_FieldDecl_SC"]
  124 -> "124R33" [style=solid]
 "124R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 45 AliasDecl: ID '=' Type •\l"]
  125 -> "125R45" [style=solid]
 "125R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l211 BaseType: Type •\l"]
  126 -> "126R211" [style=solid]
 "126R211" [label="R211", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l210 PointerType: '*' BaseType •\l"]
  127 -> "127R210" [style=solid]
 "127R210" [label="R210", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l196 Type: '(' Type • ')'\l"]
  128 -> 179 [style=solid label="')'"]
  129 [label="State 129\n\l 52 Expression: Expression • binary_op Expression\l204 ArrayLength: Expression •\l"]
  129 -> 146 [style=solid label="\"||\""]
  129 -> 147 [style=solid label="\"&&\""]
  129 -> 148 [style=solid label="'|'"]
  129 -> 149 [style=solid label="'^'"]
  129 -> 150 [style=solid label="'&'"]
  129 -> 151 [style=solid label="\"==\""]
  129 -> 152 [style=solid label="\"!=\""]
  129 -> 153 [style=solid label="'>'"]
  129 -> 154 [style=solid label="'<'"]
  129 -> 155 [style=solid label="\">=\""]
  129 -> 156 [style=solid label="\"<=\""]
  129 -> 157 [style=solid label="\">>\""]
  129 -> 158 [style=solid label="\"<<\""]
  129 -> 159 [style=solid label="'+'"]
  129 -> 160 [style=solid label="'-'"]
  129 -> 161 [style=solid label="'*'"]
  129 -> 162 [style=solid label="'/'"]
  129 -> 163 [style=solid label="'%'"]
  129 -> 165 [style=dashed label="binary_op"]
  129 -> 166 [style=dashed label="rel_op"]
  129 -> 167 [style=dashed label="add_op"]
  129 -> 168 [style=dashed label="mul_op"]
  129 -> "129R204" [style=solid]
 "129R204" [label="R204", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l203 ArrayType: '[' ArrayLength • ']' ElementType\l"]
  130 -> 180 [style=solid label="']'"]
  131 [label="State 131\n\l120 QualifiedIdent: PackageName '.' • ID\l"]
  131 -> 181 [style=solid label="ID"]
  132 [label="State 132\n\l 26 STAR_TypeSpec_SC: STAR_TypeSpec_SC ';' •\l"]
  132 -> "132R26" [style=solid]
 "132R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC ')' •\l"]
  133 -> "133R42" [style=solid]
 "133R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l223 ParameterDecl: ELIPSIS Type •\l"]
  134 -> "134R223" [style=solid]
 "134R223" [label="R223", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l222 ParameterDecl: IdentifierList ELIPSIS • Type\l"]
  135 -> 56 [style=solid label="FUNC"]
  135 -> 57 [style=solid label="STRUCT"]
  135 -> 58 [style=solid label="ID"]
  135 -> 60 [style=solid label="'*'"]
  135 -> 61 [style=solid label="'('"]
  135 -> 62 [style=solid label="'['"]
  135 -> 63 [style=dashed label="PackageName"]
  135 -> 64 [style=dashed label="QualifiedIdent"]
  135 -> 182 [style=dashed label="Type"]
  135 -> 66 [style=dashed label="TypeName"]
  135 -> 67 [style=dashed label="TypeLit"]
  135 -> 68 [style=dashed label="ArrayType"]
  135 -> 69 [style=dashed label="StructType"]
  135 -> 70 [style=dashed label="PointerType"]
  135 -> 71 [style=dashed label="FunctionType"]
  136 [label="State 136\n\l221 ParameterDecl: IdentifierList Type •\l"]
  136 -> "136R221" [style=solid]
 "136R221" [label="R221", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l219 Parameters: '(' ParameterList ')' •\l"]
  137 -> "137R219" [style=solid]
 "137R219" [label="R219", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl • ',' ParameterDecl\l220 ParameterList: ParameterDecl STAR_CM_ParameterDecl •\l"]
  138 -> 183 [style=solid label="','"]
  138 -> "138R220" [style=solid]
 "138R220" [label="R220", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l 28 STAR_Statement_SC: STAR_Statement_SC • Statement ';'\l142 Block: '{' STAR_Statement_SC • '}'\l"]
  139 -> 184 [style=solid label="BREAK"]
  139 -> 91 [style=solid label="FUNC"]
  139 -> 57 [style=solid label="STRUCT"]
  139 -> 185 [style=solid label="RETURN"]
  139 -> 186 [style=solid label="GOTO"]
  139 -> 20 [style=solid label="CONST"]
  139 -> 187 [style=solid label="IF"]
  139 -> 188 [style=solid label="CONTINUE"]
  139 -> 189 [style=solid label="FOR"]
  139 -> 190 [style=solid label="ID"]
  139 -> 21 [style=solid label="VAR"]
  139 -> 93 [style=solid label="STRING_LIT"]
  139 -> 94 [style=solid label="BINARY_LIT"]
  139 -> 95 [style=solid label="HEX_LIT"]
  139 -> 96 [style=solid label="FLOAT_LIT"]
  139 -> 97 [style=solid label="DEC_LIT"]
  139 -> 191 [style=solid label="GO"]
  139 -> 192 [style=solid label="FALLTHROUGH"]
  139 -> 22 [style=solid label="TYPE_TOK"]
  139 -> 98 [style=solid label="'^'"]
  139 -> 99 [style=solid label="'&'"]
  139 -> 100 [style=solid label="'+'"]
  139 -> 101 [style=solid label="'-'"]
  139 -> 102 [style=solid label="'*'"]
  139 -> 103 [style=solid label="'!'"]
  139 -> 104 [style=solid label="'['"]
  139 -> 105 [style=solid label="\"(\""]
  139 -> 79 [style=solid label="'{'"]
  139 -> 193 [style=solid label="'}'"]
  139 -> 63 [style=dashed label="PackageName"]
  139 -> 194 [style=dashed label="Declaration"]
  139 -> 25 [style=dashed label="ConstDecl"]
  139 -> 26 [style=dashed label="TypeDecl"]
  139 -> 27 [style=dashed label="VarDecl"]
  139 -> 195 [style=dashed label="ExpressionList"]
  139 -> 196 [style=dashed label="Expression"]
  139 -> 108 [style=dashed label="UnaryExpr"]
  139 -> 109 [style=dashed label="unary_op"]
  139 -> 110 [style=dashed label="PrimaryExpr"]
  139 -> 111 [style=dashed label="Operand"]
  139 -> 112 [style=dashed label="Literal"]
  139 -> 113 [style=dashed label="INT_LIT"]
  139 -> 114 [style=dashed label="BasicLit"]
  139 -> 115 [style=dashed label="OperandName"]
  139 -> 116 [style=dashed label="QualifiedIdent"]
  139 -> 117 [style=dashed label="CompositeLit"]
  139 -> 118 [style=dashed label="LiteralType"]
  139 -> 119 [style=dashed label="FunctionLit"]
  139 -> 197 [style=dashed label="Block"]
  139 -> 198 [style=dashed label="Statement"]
  139 -> 199 [style=dashed label="LabeledStmt"]
  139 -> 200 [style=dashed label="Label"]
  139 -> 201 [style=dashed label="SimpleStmt"]
  139 -> 202 [style=dashed label="EmptyStmt"]
  139 -> 203 [style=dashed label="ExpressionStmt"]
  139 -> 204 [style=dashed label="IncDecStmt"]
  139 -> 205 [style=dashed label="Assignment"]
  139 -> 206 [style=dashed label="IfStmt"]
  139 -> 207 [style=dashed label="ForStmt"]
  139 -> 208 [style=dashed label="GoStmt"]
  139 -> 209 [style=dashed label="ReturnStmt"]
  139 -> 210 [style=dashed label="BreakStmt"]
  139 -> 211 [style=dashed label="ContinueStmt"]
  139 -> 212 [style=dashed label="GotoStmt"]
  139 -> 213 [style=dashed label="FallthroughStmt"]
  139 -> 120 [style=dashed label="TypeName"]
  139 -> 121 [style=dashed label="ArrayType"]
  139 -> 122 [style=dashed label="StructType"]
  139 -> "139R161" [style=solid]
 "139R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 18 STAR_CM_ID: STAR_CM_ID ',' ID •\l"]
  140 -> "140R18" [style=solid]
 "140R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec ';' •\l"]
  141 -> "141R20" [style=solid]
 "141R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec ';' •\l"]
  142 -> "142R22" [style=solid]
 "142R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l137 FunctionLit: FUNC Signature • FunctionBody\l"]
  143 -> 79 [style=solid label="'{'"]
  143 -> 214 [style=dashed label="FunctionBody"]
  143 -> 81 [style=dashed label="Block"]
  144 [label="State 144\n\l124 LiteralType: '[' ELIPSIS • ']' ElementType\l"]
  144 -> 215 [style=solid label="']'"]
  145 [label="State 145\n\l 52 Expression: Expression • binary_op Expression\l108 Operand: \"(\" Expression • \")\"\l"]
  145 -> 146 [style=solid label="\"||\""]
  145 -> 147 [style=solid label="\"&&\""]
  145 -> 148 [style=solid label="'|'"]
  145 -> 149 [style=solid label="'^'"]
  145 -> 150 [style=solid label="'&'"]
  145 -> 151 [style=solid label="\"==\""]
  145 -> 152 [style=solid label="\"!=\""]
  145 -> 153 [style=solid label="'>'"]
  145 -> 154 [style=solid label="'<'"]
  145 -> 155 [style=solid label="\">=\""]
  145 -> 156 [style=solid label="\"<=\""]
  145 -> 157 [style=solid label="\">>\""]
  145 -> 158 [style=solid label="\"<<\""]
  145 -> 159 [style=solid label="'+'"]
  145 -> 160 [style=solid label="'-'"]
  145 -> 161 [style=solid label="'*'"]
  145 -> 162 [style=solid label="'/'"]
  145 -> 163 [style=solid label="'%'"]
  145 -> 216 [style=solid label="\")\""]
  145 -> 165 [style=dashed label="binary_op"]
  145 -> 166 [style=dashed label="rel_op"]
  145 -> 167 [style=dashed label="add_op"]
  145 -> 168 [style=dashed label="mul_op"]
  146 [label="State 146\n\l 55 binary_op: \"||\" •\l"]
  146 -> "146R55" [style=solid]
 "146R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 56 binary_op: \"&&\" •\l"]
  147 -> "147R56" [style=solid]
 "147R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 68 add_op: '|' •\l"]
  148 -> "148R68" [style=solid]
 "148R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 69 add_op: '^' •\l"]
  149 -> "149R69" [style=solid]
 "149R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 85 mul_op: '&' •\l"]
  150 -> "150R85" [style=solid]
 "150R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 60 rel_op: \"==\" •\l"]
  151 -> "151R60" [style=solid]
 "151R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 61 rel_op: \"!=\" •\l"]
  152 -> "152R61" [style=solid]
 "152R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 64 rel_op: '>' •\l"]
  153 -> "153R64" [style=solid]
 "153R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 62 rel_op: '<' •\l"]
  154 -> "154R62" [style=solid]
 "154R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 65 rel_op: \">=\" •\l"]
  155 -> "155R65" [style=solid]
 "155R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 63 rel_op: \"<=\" •\l"]
  156 -> "156R63" [style=solid]
 "156R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 84 mul_op: \">>\" •\l"]
  157 -> "157R84" [style=solid]
 "157R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 83 mul_op: \"<<\" •\l"]
  158 -> "158R83" [style=solid]
 "158R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 66 add_op: '+' •\l"]
  159 -> "159R66" [style=solid]
 "159R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 67 add_op: '-' •\l"]
  160 -> "160R67" [style=solid]
 "160R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 80 mul_op: '*' •\l"]
  161 -> "161R80" [style=solid]
 "161R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 81 mul_op: '/' •\l"]
  162 -> "162R81" [style=solid]
 "162R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 82 mul_op: '%' •\l"]
  163 -> "163R82" [style=solid]
 "163R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 24 STAR_CM_EXP: STAR_CM_EXP • ',' Expression\l 50 ExpressionList: Expression STAR_CM_EXP •\l"]
  164 -> 217 [style=solid label="','"]
  164 -> "164R50" [style=solid]
 "164R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 52 Expression: Expression binary_op • Expression\l"]
  165 -> 91 [style=solid label="FUNC"]
  165 -> 57 [style=solid label="STRUCT"]
  165 -> 92 [style=solid label="ID"]
  165 -> 93 [style=solid label="STRING_LIT"]
  165 -> 94 [style=solid label="BINARY_LIT"]
  165 -> 95 [style=solid label="HEX_LIT"]
  165 -> 96 [style=solid label="FLOAT_LIT"]
  165 -> 97 [style=solid label="DEC_LIT"]
  165 -> 98 [style=solid label="'^'"]
  165 -> 99 [style=solid label="'&'"]
  165 -> 100 [style=solid label="'+'"]
  165 -> 101 [style=solid label="'-'"]
  165 -> 102 [style=solid label="'*'"]
  165 -> 103 [style=solid label="'!'"]
  165 -> 104 [style=solid label="'['"]
  165 -> 105 [style=solid label="\"(\""]
  165 -> 63 [style=dashed label="PackageName"]
  165 -> 218 [style=dashed label="Expression"]
  165 -> 108 [style=dashed label="UnaryExpr"]
  165 -> 109 [style=dashed label="unary_op"]
  165 -> 110 [style=dashed label="PrimaryExpr"]
  165 -> 111 [style=dashed label="Operand"]
  165 -> 112 [style=dashed label="Literal"]
  165 -> 113 [style=dashed label="INT_LIT"]
  165 -> 114 [style=dashed label="BasicLit"]
  165 -> 115 [style=dashed label="OperandName"]
  165 -> 116 [style=dashed label="QualifiedIdent"]
  165 -> 117 [style=dashed label="CompositeLit"]
  165 -> 118 [style=dashed label="LiteralType"]
  165 -> 119 [style=dashed label="FunctionLit"]
  165 -> 120 [style=dashed label="TypeName"]
  165 -> 121 [style=dashed label="ArrayType"]
  165 -> 122 [style=dashed label="StructType"]
  166 [label="State 166\n\l 57 binary_op: rel_op •\l"]
  166 -> "166R57" [style=solid]
 "166R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 58 binary_op: add_op •\l"]
  167 -> "167R58" [style=solid]
 "167R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l 59 binary_op: mul_op •\l"]
  168 -> "168R59" [style=solid]
 "168R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 54 UnaryExpr: unary_op UnaryExpr •\l"]
  169 -> "169R54" [style=solid]
 "169R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 98 Arguments: '(' • ')'\l 99          | '(' • ArgumentInBracket ')'\l"]
  170 -> 56 [style=solid label="FUNC"]
  170 -> 57 [style=solid label="STRUCT"]
  170 -> 58 [style=solid label="ID"]
  170 -> 60 [style=solid label="'*'"]
  170 -> 61 [style=solid label="'('"]
  170 -> 219 [style=solid label="')'"]
  170 -> 62 [style=solid label="'['"]
  170 -> 63 [style=dashed label="PackageName"]
  170 -> 220 [style=dashed label="ArgumentInBracket"]
  170 -> 221 [style=dashed label="ArgumentInBracketFirst"]
  170 -> 64 [style=dashed label="QualifiedIdent"]
  170 -> 222 [style=dashed label="Type"]
  170 -> 66 [style=dashed label="TypeName"]
  170 -> 67 [style=dashed label="TypeLit"]
  170 -> 68 [style=dashed label="ArrayType"]
  170 -> 69 [style=dashed label="StructType"]
  170 -> 70 [style=dashed label="PointerType"]
  170 -> 71 [style=dashed label="FunctionType"]
  171 [label="State 171\n\l 96 Selector: '.' • ID\l"]
  171 -> 223 [style=solid label="ID"]
  172 [label="State 172\n\l 97 Index: '[' • Expression ']'\l"]
  172 -> 91 [style=solid label="FUNC"]
  172 -> 57 [style=solid label="STRUCT"]
  172 -> 92 [style=solid label="ID"]
  172 -> 93 [style=solid label="STRING_LIT"]
  172 -> 94 [style=solid label="BINARY_LIT"]
  172 -> 95 [style=solid label="HEX_LIT"]
  172 -> 96 [style=solid label="FLOAT_LIT"]
  172 -> 97 [style=solid label="DEC_LIT"]
  172 -> 98 [style=solid label="'^'"]
  172 -> 99 [style=solid label="'&'"]
  172 -> 100 [style=solid label="'+'"]
  172 -> 101 [style=solid label="'-'"]
  172 -> 102 [style=solid label="'*'"]
  172 -> 103 [style=solid label="'!'"]
  172 -> 104 [style=solid label="'['"]
  172 -> 105 [style=solid label="\"(\""]
  172 -> 63 [style=dashed label="PackageName"]
  172 -> 224 [style=dashed label="Expression"]
  172 -> 108 [style=dashed label="UnaryExpr"]
  172 -> 109 [style=dashed label="unary_op"]
  172 -> 110 [style=dashed label="PrimaryExpr"]
  172 -> 111 [style=dashed label="Operand"]
  172 -> 112 [style=dashed label="Literal"]
  172 -> 113 [style=dashed label="INT_LIT"]
  172 -> 114 [style=dashed label="BasicLit"]
  172 -> 115 [style=dashed label="OperandName"]
  172 -> 116 [style=dashed label="QualifiedIdent"]
  172 -> 117 [style=dashed label="CompositeLit"]
  172 -> 118 [style=dashed label="LiteralType"]
  172 -> 119 [style=dashed label="FunctionLit"]
  172 -> 120 [style=dashed label="TypeName"]
  172 -> 121 [style=dashed label="ArrayType"]
  172 -> 122 [style=dashed label="StructType"]
  173 [label="State 173\n\l 94 PrimaryExpr: PrimaryExpr Selector •\l"]
  173 -> "173R94" [style=solid]
 "173R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  174 [label="State 174\n\l 93 PrimaryExpr: PrimaryExpr Index •\l"]
  174 -> "174R93" [style=solid]
 "174R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  175 [label="State 175\n\l 95 PrimaryExpr: PrimaryExpr Arguments •\l"]
  175 -> "175R95" [style=solid]
 "175R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l126 LiteralValue: '{' • '}'\l127             | '{' • ElementList '}'\l"]
  176 -> 91 [style=solid label="FUNC"]
  176 -> 57 [style=solid label="STRUCT"]
  176 -> 92 [style=solid label="ID"]
  176 -> 93 [style=solid label="STRING_LIT"]
  176 -> 94 [style=solid label="BINARY_LIT"]
  176 -> 95 [style=solid label="HEX_LIT"]
  176 -> 96 [style=solid label="FLOAT_LIT"]
  176 -> 97 [style=solid label="DEC_LIT"]
  176 -> 98 [style=solid label="'^'"]
  176 -> 99 [style=solid label="'&'"]
  176 -> 100 [style=solid label="'+'"]
  176 -> 101 [style=solid label="'-'"]
  176 -> 102 [style=solid label="'*'"]
  176 -> 103 [style=solid label="'!'"]
  176 -> 104 [style=solid label="'['"]
  176 -> 105 [style=solid label="\"(\""]
  176 -> 176 [style=solid label="'{'"]
  176 -> 225 [style=solid label="'}'"]
  176 -> 63 [style=dashed label="PackageName"]
  176 -> 226 [style=dashed label="Expression"]
  176 -> 108 [style=dashed label="UnaryExpr"]
  176 -> 109 [style=dashed label="unary_op"]
  176 -> 110 [style=dashed label="PrimaryExpr"]
  176 -> 111 [style=dashed label="Operand"]
  176 -> 112 [style=dashed label="Literal"]
  176 -> 113 [style=dashed label="INT_LIT"]
  176 -> 114 [style=dashed label="BasicLit"]
  176 -> 115 [style=dashed label="OperandName"]
  176 -> 116 [style=dashed label="QualifiedIdent"]
  176 -> 117 [style=dashed label="CompositeLit"]
  176 -> 118 [style=dashed label="LiteralType"]
  176 -> 227 [style=dashed label="LiteralValue"]
  176 -> 228 [style=dashed label="ElementList"]
  176 -> 229 [style=dashed label="KeyedElement"]
  176 -> 230 [style=dashed label="Key"]
  176 -> 231 [style=dashed label="Element"]
  176 -> 119 [style=dashed label="FunctionLit"]
  176 -> 120 [style=dashed label="TypeName"]
  176 -> 121 [style=dashed label="ArrayType"]
  176 -> 122 [style=dashed label="StructType"]
  177 [label="State 177\n\l121 CompositeLit: LiteralType LiteralValue •\l"]
  177 -> "177R121" [style=solid]
 "177R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC • FieldDecl ';'\l206 StructType: STRUCT '{' STAR_FieldDecl_SC • '}'\l"]
  178 -> 34 [style=solid label="ID"]
  178 -> 232 [style=solid label="'}'"]
  178 -> 233 [style=dashed label="IdentifierList"]
  178 -> 234 [style=dashed label="FieldDecl"]
  179 [label="State 179\n\l196 Type: '(' Type ')' •\l"]
  179 -> "179R196" [style=solid]
 "179R196" [label="R196", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l203 ArrayType: '[' ArrayLength ']' • ElementType\l"]
  180 -> 56 [style=solid label="FUNC"]
  180 -> 57 [style=solid label="STRUCT"]
  180 -> 58 [style=solid label="ID"]
  180 -> 60 [style=solid label="'*'"]
  180 -> 61 [style=solid label="'('"]
  180 -> 62 [style=solid label="'['"]
  180 -> 63 [style=dashed label="PackageName"]
  180 -> 64 [style=dashed label="QualifiedIdent"]
  180 -> 235 [style=dashed label="Type"]
  180 -> 66 [style=dashed label="TypeName"]
  180 -> 67 [style=dashed label="TypeLit"]
  180 -> 68 [style=dashed label="ArrayType"]
  180 -> 236 [style=dashed label="ElementType"]
  180 -> 69 [style=dashed label="StructType"]
  180 -> 70 [style=dashed label="PointerType"]
  180 -> 71 [style=dashed label="FunctionType"]
  181 [label="State 181\n\l120 QualifiedIdent: PackageName '.' ID •\l"]
  181 -> "181R120" [style=solid]
 "181R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l222 ParameterDecl: IdentifierList ELIPSIS Type •\l"]
  182 -> "182R222" [style=solid]
 "182R222" [label="R222", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' • ParameterDecl\l"]
  183 -> 34 [style=solid label="ID"]
  183 -> 74 [style=solid label="ELIPSIS"]
  183 -> 76 [style=dashed label="IdentifierList"]
  183 -> 237 [style=dashed label="ParameterDecl"]
  184 [label="State 184\n\l188 BreakStmt: BREAK • Label\l189          | BREAK •\l"]
  184 -> 238 [style=solid label="ID"]
  184 -> 239 [style=dashed label="Label"]
  184 -> "184R189" [style=solid]
 "184R189" [label="R189", fillcolor=3, shape=diamond, style=filled]
  185 [label="State 185\n\l186 ReturnStmt: RETURN • ExpressionList\l187           | RETURN •\l"]
  185 -> 91 [style=solid label="FUNC"]
  185 -> 57 [style=solid label="STRUCT"]
  185 -> 92 [style=solid label="ID"]
  185 -> 93 [style=solid label="STRING_LIT"]
  185 -> 94 [style=solid label="BINARY_LIT"]
  185 -> 95 [style=solid label="HEX_LIT"]
  185 -> 96 [style=solid label="FLOAT_LIT"]
  185 -> 97 [style=solid label="DEC_LIT"]
  185 -> 98 [style=solid label="'^'"]
  185 -> 99 [style=solid label="'&'"]
  185 -> 100 [style=solid label="'+'"]
  185 -> 101 [style=solid label="'-'"]
  185 -> 102 [style=solid label="'*'"]
  185 -> 103 [style=solid label="'!'"]
  185 -> 104 [style=solid label="'['"]
  185 -> 105 [style=solid label="\"(\""]
  185 -> 63 [style=dashed label="PackageName"]
  185 -> 240 [style=dashed label="ExpressionList"]
  185 -> 107 [style=dashed label="Expression"]
  185 -> 108 [style=dashed label="UnaryExpr"]
  185 -> 109 [style=dashed label="unary_op"]
  185 -> 110 [style=dashed label="PrimaryExpr"]
  185 -> 111 [style=dashed label="Operand"]
  185 -> 112 [style=dashed label="Literal"]
  185 -> 113 [style=dashed label="INT_LIT"]
  185 -> 114 [style=dashed label="BasicLit"]
  185 -> 115 [style=dashed label="OperandName"]
  185 -> 116 [style=dashed label="QualifiedIdent"]
  185 -> 117 [style=dashed label="CompositeLit"]
  185 -> 118 [style=dashed label="LiteralType"]
  185 -> 119 [style=dashed label="FunctionLit"]
  185 -> 120 [style=dashed label="TypeName"]
  185 -> 121 [style=dashed label="ArrayType"]
  185 -> 122 [style=dashed label="StructType"]
  185 -> "185R187" [style=solid]
 "185R187" [label="R187", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l192 GotoStmt: GOTO • Label\l"]
  186 -> 238 [style=solid label="ID"]
  186 -> 241 [style=dashed label="Label"]
  187 [label="State 187\n\l166 IfStmt: IF • Expression Block\l167       | IF • SimpleStmt ';' Expression Block\l168       | IF • SimpleStmt ';' Expression Block ELSE Block\l169       | IF • SimpleStmt ';' Expression Block ELSE IfStmt\l"]
  187 -> 91 [style=solid label="FUNC"]
  187 -> 57 [style=solid label="STRUCT"]
  187 -> 92 [style=solid label="ID"]
  187 -> 93 [style=solid label="STRING_LIT"]
  187 -> 94 [style=solid label="BINARY_LIT"]
  187 -> 95 [style=solid label="HEX_LIT"]
  187 -> 96 [style=solid label="FLOAT_LIT"]
  187 -> 97 [style=solid label="DEC_LIT"]
  187 -> 98 [style=solid label="'^'"]
  187 -> 99 [style=solid label="'&'"]
  187 -> 100 [style=solid label="'+'"]
  187 -> 101 [style=solid label="'-'"]
  187 -> 102 [style=solid label="'*'"]
  187 -> 103 [style=solid label="'!'"]
  187 -> 104 [style=solid label="'['"]
  187 -> 105 [style=solid label="\"(\""]
  187 -> 63 [style=dashed label="PackageName"]
  187 -> 195 [style=dashed label="ExpressionList"]
  187 -> 242 [style=dashed label="Expression"]
  187 -> 108 [style=dashed label="UnaryExpr"]
  187 -> 109 [style=dashed label="unary_op"]
  187 -> 110 [style=dashed label="PrimaryExpr"]
  187 -> 111 [style=dashed label="Operand"]
  187 -> 112 [style=dashed label="Literal"]
  187 -> 113 [style=dashed label="INT_LIT"]
  187 -> 114 [style=dashed label="BasicLit"]
  187 -> 115 [style=dashed label="OperandName"]
  187 -> 116 [style=dashed label="QualifiedIdent"]
  187 -> 117 [style=dashed label="CompositeLit"]
  187 -> 118 [style=dashed label="LiteralType"]
  187 -> 119 [style=dashed label="FunctionLit"]
  187 -> 243 [style=dashed label="SimpleStmt"]
  187 -> 202 [style=dashed label="EmptyStmt"]
  187 -> 203 [style=dashed label="ExpressionStmt"]
  187 -> 204 [style=dashed label="IncDecStmt"]
  187 -> 205 [style=dashed label="Assignment"]
  187 -> 120 [style=dashed label="TypeName"]
  187 -> 121 [style=dashed label="ArrayType"]
  187 -> 122 [style=dashed label="StructType"]
  187 -> "187R161" [style=solid]
 "187R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l190 ContinueStmt: CONTINUE • Label\l191             | CONTINUE •\l"]
  188 -> 238 [style=solid label="ID"]
  188 -> 244 [style=dashed label="Label"]
  188 -> "188R191" [style=solid]
 "188R191" [label="R191", fillcolor=3, shape=diamond, style=filled]
  189 [label="State 189\n\l170 ForStmt: FOR • Block\l171        | FOR • ForStmtAfter Block\l"]
  189 -> 91 [style=solid label="FUNC"]
  189 -> 57 [style=solid label="STRUCT"]
  189 -> 245 [style=solid label="RANGE"]
  189 -> 92 [style=solid label="ID"]
  189 -> 93 [style=solid label="STRING_LIT"]
  189 -> 94 [style=solid label="BINARY_LIT"]
  189 -> 95 [style=solid label="HEX_LIT"]
  189 -> 96 [style=solid label="FLOAT_LIT"]
  189 -> 97 [style=solid label="DEC_LIT"]
  189 -> 98 [style=solid label="'^'"]
  189 -> 99 [style=solid label="'&'"]
  189 -> 100 [style=solid label="'+'"]
  189 -> 101 [style=solid label="'-'"]
  189 -> 102 [style=solid label="'*'"]
  189 -> 103 [style=solid label="'!'"]
  189 -> 104 [style=solid label="'['"]
  189 -> 105 [style=solid label="\"(\""]
  189 -> 79 [style=solid label="'{'"]
  189 -> 63 [style=dashed label="PackageName"]
  189 -> 246 [style=dashed label="ExpressionList"]
  189 -> 247 [style=dashed label="Expression"]
  189 -> 108 [style=dashed label="UnaryExpr"]
  189 -> 109 [style=dashed label="unary_op"]
  189 -> 110 [style=dashed label="PrimaryExpr"]
  189 -> 111 [style=dashed label="Operand"]
  189 -> 112 [style=dashed label="Literal"]
  189 -> 113 [style=dashed label="INT_LIT"]
  189 -> 114 [style=dashed label="BasicLit"]
  189 -> 115 [style=dashed label="OperandName"]
  189 -> 116 [style=dashed label="QualifiedIdent"]
  189 -> 117 [style=dashed label="CompositeLit"]
  189 -> 118 [style=dashed label="LiteralType"]
  189 -> 119 [style=dashed label="FunctionLit"]
  189 -> 248 [style=dashed label="Block"]
  189 -> 249 [style=dashed label="SimpleStmt"]
  189 -> 202 [style=dashed label="EmptyStmt"]
  189 -> 203 [style=dashed label="ExpressionStmt"]
  189 -> 204 [style=dashed label="IncDecStmt"]
  189 -> 205 [style=dashed label="Assignment"]
  189 -> 250 [style=dashed label="ForStmtAfter"]
  189 -> 251 [style=dashed label="Condition"]
  189 -> 252 [style=dashed label="ForClause"]
  189 -> 253 [style=dashed label="OPT_InitStmt"]
  189 -> 254 [style=dashed label="InitStmt"]
  189 -> 255 [style=dashed label="RangeClause"]
  189 -> 120 [style=dashed label="TypeName"]
  189 -> 121 [style=dashed label="ArrayType"]
  189 -> 122 [style=dashed label="StructType"]
  189 -> "189R161" [style=solid]
 "189R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l  3 PackageName: ID •\l118 OperandName: ID •\l156 Label: ID •\l197 TypeName: ID •\l"]
  190 -> "190R3" [label="['.']", style=solid]
 "190R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  190 -> "190R118d" [label="['.']", style=solid]
 "190R118d" [label="R118", fillcolor=5, shape=diamond, style=filled]
  190 -> "190R118" [style=solid]
 "190R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  190 -> "190R156" [label="[':']", style=solid]
 "190R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  190 -> "190R197" [label="['{']", style=solid]
 "190R197" [label="R197", fillcolor=3, shape=diamond, style=filled]
  191 [label="State 191\n\l185 GoStmt: GO • Expression\l"]
  191 -> 91 [style=solid label="FUNC"]
  191 -> 57 [style=solid label="STRUCT"]
  191 -> 92 [style=solid label="ID"]
  191 -> 93 [style=solid label="STRING_LIT"]
  191 -> 94 [style=solid label="BINARY_LIT"]
  191 -> 95 [style=solid label="HEX_LIT"]
  191 -> 96 [style=solid label="FLOAT_LIT"]
  191 -> 97 [style=solid label="DEC_LIT"]
  191 -> 98 [style=solid label="'^'"]
  191 -> 99 [style=solid label="'&'"]
  191 -> 100 [style=solid label="'+'"]
  191 -> 101 [style=solid label="'-'"]
  191 -> 102 [style=solid label="'*'"]
  191 -> 103 [style=solid label="'!'"]
  191 -> 104 [style=solid label="'['"]
  191 -> 105 [style=solid label="\"(\""]
  191 -> 63 [style=dashed label="PackageName"]
  191 -> 256 [style=dashed label="Expression"]
  191 -> 108 [style=dashed label="UnaryExpr"]
  191 -> 109 [style=dashed label="unary_op"]
  191 -> 110 [style=dashed label="PrimaryExpr"]
  191 -> 111 [style=dashed label="Operand"]
  191 -> 112 [style=dashed label="Literal"]
  191 -> 113 [style=dashed label="INT_LIT"]
  191 -> 114 [style=dashed label="BasicLit"]
  191 -> 115 [style=dashed label="OperandName"]
  191 -> 116 [style=dashed label="QualifiedIdent"]
  191 -> 117 [style=dashed label="CompositeLit"]
  191 -> 118 [style=dashed label="LiteralType"]
  191 -> 119 [style=dashed label="FunctionLit"]
  191 -> 120 [style=dashed label="TypeName"]
  191 -> 121 [style=dashed label="ArrayType"]
  191 -> 122 [style=dashed label="StructType"]
  192 [label="State 192\n\l193 FallthroughStmt: FALLTHROUGH •\l"]
  192 -> "192R193" [style=solid]
 "192R193" [label="R193", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l142 Block: '{' STAR_Statement_SC '}' •\l"]
  193 -> "193R142" [style=solid]
 "193R142" [label="R142", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l143 Statement: Declaration •\l"]
  194 -> "194R143" [style=solid]
 "194R143" [label="R143", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l165 Assignment: ExpressionList • assign_op ExpressionList\l"]
  195 -> 257 [style=solid label="\"+=\""]
  195 -> 258 [style=solid label="\"-=\""]
  195 -> 259 [style=solid label="\"|=\""]
  195 -> 260 [style=solid label="\"^=\""]
  195 -> 261 [style=solid label="\"*=\""]
  195 -> 262 [style=solid label="\"/=\""]
  195 -> 263 [style=solid label="\"%=\""]
  195 -> 264 [style=solid label="\"<<=\""]
  195 -> 265 [style=solid label="\">>=\""]
  195 -> 266 [style=solid label="\"&=\""]
  195 -> 267 [style=dashed label="assign_op"]
  196 [label="State 196\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l162 ExpressionStmt: Expression •\l163 IncDecStmt: Expression • \"++\"\l164           | Expression • \"--\"\l"]
  196 -> 146 [style=solid label="\"||\""]
  196 -> 147 [style=solid label="\"&&\""]
  196 -> 148 [style=solid label="'|'"]
  196 -> 149 [style=solid label="'^'"]
  196 -> 150 [style=solid label="'&'"]
  196 -> 151 [style=solid label="\"==\""]
  196 -> 152 [style=solid label="\"!=\""]
  196 -> 153 [style=solid label="'>'"]
  196 -> 154 [style=solid label="'<'"]
  196 -> 155 [style=solid label="\">=\""]
  196 -> 156 [style=solid label="\"<=\""]
  196 -> 157 [style=solid label="\">>\""]
  196 -> 158 [style=solid label="\"<<\""]
  196 -> 159 [style=solid label="'+'"]
  196 -> 160 [style=solid label="'-'"]
  196 -> 161 [style=solid label="'*'"]
  196 -> 162 [style=solid label="'/'"]
  196 -> 163 [style=solid label="'%'"]
  196 -> 268 [style=solid label="\"++\""]
  196 -> 269 [style=solid label="\"--\""]
  196 -> 164 [style=dashed label="STAR_CM_EXP"]
  196 -> 165 [style=dashed label="binary_op"]
  196 -> 166 [style=dashed label="rel_op"]
  196 -> 167 [style=dashed label="add_op"]
  196 -> 168 [style=dashed label="mul_op"]
  196 -> "196R25" [style=solid]
 "196R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  196 -> "196R162" [label="[';', '{']", style=solid]
 "196R162" [label="R162", fillcolor=3, shape=diamond, style=filled]
  197 [label="State 197\n\l152 Statement: Block •\l"]
  197 -> "197R152" [style=solid]
 "197R152" [label="R152", fillcolor=3, shape=diamond, style=filled]
  198 [label="State 198\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement • ';'\l"]
  198 -> 270 [style=solid label="';'"]
  199 [label="State 199\n\l144 Statement: LabeledStmt •\l"]
  199 -> "199R144" [style=solid]
 "199R144" [label="R144", fillcolor=3, shape=diamond, style=filled]
  200 [label="State 200\n\l155 LabeledStmt: Label • ':' Statement\l"]
  200 -> 271 [style=solid label="':'"]
  201 [label="State 201\n\l145 Statement: SimpleStmt •\l"]
  201 -> "201R145" [style=solid]
 "201R145" [label="R145", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l157 SimpleStmt: EmptyStmt •\l"]
  202 -> "202R157" [style=solid]
 "202R157" [label="R157", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l158 SimpleStmt: ExpressionStmt •\l"]
  203 -> "203R158" [style=solid]
 "203R158" [label="R158", fillcolor=3, shape=diamond, style=filled]
  204 [label="State 204\n\l159 SimpleStmt: IncDecStmt •\l"]
  204 -> "204R159" [style=solid]
 "204R159" [label="R159", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l160 SimpleStmt: Assignment •\l"]
  205 -> "205R160" [style=solid]
 "205R160" [label="R160", fillcolor=3, shape=diamond, style=filled]
  206 [label="State 206\n\l153 Statement: IfStmt •\l"]
  206 -> "206R153" [style=solid]
 "206R153" [label="R153", fillcolor=3, shape=diamond, style=filled]
  207 [label="State 207\n\l154 Statement: ForStmt •\l"]
  207 -> "207R154" [style=solid]
 "207R154" [label="R154", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l146 Statement: GoStmt •\l"]
  208 -> "208R146" [style=solid]
 "208R146" [label="R146", fillcolor=3, shape=diamond, style=filled]
  209 [label="State 209\n\l147 Statement: ReturnStmt •\l"]
  209 -> "209R147" [style=solid]
 "209R147" [label="R147", fillcolor=3, shape=diamond, style=filled]
  210 [label="State 210\n\l148 Statement: BreakStmt •\l"]
  210 -> "210R148" [style=solid]
 "210R148" [label="R148", fillcolor=3, shape=diamond, style=filled]
  211 [label="State 211\n\l149 Statement: ContinueStmt •\l"]
  211 -> "211R149" [style=solid]
 "211R149" [label="R149", fillcolor=3, shape=diamond, style=filled]
  212 [label="State 212\n\l150 Statement: GotoStmt •\l"]
  212 -> "212R150" [style=solid]
 "212R150" [label="R150", fillcolor=3, shape=diamond, style=filled]
  213 [label="State 213\n\l151 Statement: FallthroughStmt •\l"]
  213 -> "213R151" [style=solid]
 "213R151" [label="R151", fillcolor=3, shape=diamond, style=filled]
  214 [label="State 214\n\l137 FunctionLit: FUNC Signature FunctionBody •\l"]
  214 -> "214R137" [style=solid]
 "214R137" [label="R137", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l124 LiteralType: '[' ELIPSIS ']' • ElementType\l"]
  215 -> 56 [style=solid label="FUNC"]
  215 -> 57 [style=solid label="STRUCT"]
  215 -> 58 [style=solid label="ID"]
  215 -> 60 [style=solid label="'*'"]
  215 -> 61 [style=solid label="'('"]
  215 -> 62 [style=solid label="'['"]
  215 -> 63 [style=dashed label="PackageName"]
  215 -> 64 [style=dashed label="QualifiedIdent"]
  215 -> 235 [style=dashed label="Type"]
  215 -> 66 [style=dashed label="TypeName"]
  215 -> 67 [style=dashed label="TypeLit"]
  215 -> 68 [style=dashed label="ArrayType"]
  215 -> 272 [style=dashed label="ElementType"]
  215 -> 69 [style=dashed label="StructType"]
  215 -> 70 [style=dashed label="PointerType"]
  215 -> 71 [style=dashed label="FunctionType"]
  216 [label="State 216\n\l108 Operand: \"(\" Expression \")\" •\l"]
  216 -> "216R108" [style=solid]
 "216R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  217 [label="State 217\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' • Expression\l"]
  217 -> 91 [style=solid label="FUNC"]
  217 -> 57 [style=solid label="STRUCT"]
  217 -> 92 [style=solid label="ID"]
  217 -> 93 [style=solid label="STRING_LIT"]
  217 -> 94 [style=solid label="BINARY_LIT"]
  217 -> 95 [style=solid label="HEX_LIT"]
  217 -> 96 [style=solid label="FLOAT_LIT"]
  217 -> 97 [style=solid label="DEC_LIT"]
  217 -> 98 [style=solid label="'^'"]
  217 -> 99 [style=solid label="'&'"]
  217 -> 100 [style=solid label="'+'"]
  217 -> 101 [style=solid label="'-'"]
  217 -> 102 [style=solid label="'*'"]
  217 -> 103 [style=solid label="'!'"]
  217 -> 104 [style=solid label="'['"]
  217 -> 105 [style=solid label="\"(\""]
  217 -> 63 [style=dashed label="PackageName"]
  217 -> 273 [style=dashed label="Expression"]
  217 -> 108 [style=dashed label="UnaryExpr"]
  217 -> 109 [style=dashed label="unary_op"]
  217 -> 110 [style=dashed label="PrimaryExpr"]
  217 -> 111 [style=dashed label="Operand"]
  217 -> 112 [style=dashed label="Literal"]
  217 -> 113 [style=dashed label="INT_LIT"]
  217 -> 114 [style=dashed label="BasicLit"]
  217 -> 115 [style=dashed label="OperandName"]
  217 -> 116 [style=dashed label="QualifiedIdent"]
  217 -> 117 [style=dashed label="CompositeLit"]
  217 -> 118 [style=dashed label="LiteralType"]
  217 -> 119 [style=dashed label="FunctionLit"]
  217 -> 120 [style=dashed label="TypeName"]
  217 -> 121 [style=dashed label="ArrayType"]
  217 -> 122 [style=dashed label="StructType"]
  218 [label="State 218\n\l 52 Expression: Expression • binary_op Expression\l 52           | Expression binary_op Expression •\l"]
  218 -> 165 [style=dashed label="binary_op"]
  218 -> 166 [style=dashed label="rel_op"]
  218 -> 167 [style=dashed label="add_op"]
  218 -> 168 [style=dashed label="mul_op"]
  218 -> "218R52" [style=solid]
 "218R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  219 [label="State 219\n\l 98 Arguments: '(' ')' •\l"]
  219 -> "219R98" [style=solid]
 "219R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  220 [label="State 220\n\l 99 Arguments: '(' ArgumentInBracket • ')'\l"]
  220 -> 274 [style=solid label="')'"]
  221 [label="State 221\n\l100 ArgumentInBracket: ArgumentInBracketFirst • ArgumentInBracketEnd\l"]
  221 -> 275 [style=solid label="ELIPSIS"]
  221 -> 276 [style=dashed label="ArgumentInBracketEnd"]
  221 -> "221R105" [style=solid]
 "221R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  222 [label="State 222\n\l101 ArgumentInBracketFirst: Type •\l102                       | Type • ',' ExpressionList\l"]
  222 -> 277 [style=solid label="','"]
  222 -> "222R101" [style=solid]
 "222R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  223 [label="State 223\n\l 96 Selector: '.' ID •\l"]
  223 -> "223R96" [style=solid]
 "223R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  224 [label="State 224\n\l 52 Expression: Expression • binary_op Expression\l 97 Index: '[' Expression • ']'\l"]
  224 -> 146 [style=solid label="\"||\""]
  224 -> 147 [style=solid label="\"&&\""]
  224 -> 148 [style=solid label="'|'"]
  224 -> 149 [style=solid label="'^'"]
  224 -> 150 [style=solid label="'&'"]
  224 -> 151 [style=solid label="\"==\""]
  224 -> 152 [style=solid label="\"!=\""]
  224 -> 153 [style=solid label="'>'"]
  224 -> 154 [style=solid label="'<'"]
  224 -> 155 [style=solid label="\">=\""]
  224 -> 156 [style=solid label="\"<=\""]
  224 -> 157 [style=solid label="\">>\""]
  224 -> 158 [style=solid label="\"<<\""]
  224 -> 159 [style=solid label="'+'"]
  224 -> 160 [style=solid label="'-'"]
  224 -> 161 [style=solid label="'*'"]
  224 -> 162 [style=solid label="'/'"]
  224 -> 163 [style=solid label="'%'"]
  224 -> 278 [style=solid label="']'"]
  224 -> 165 [style=dashed label="binary_op"]
  224 -> 166 [style=dashed label="rel_op"]
  224 -> 167 [style=dashed label="add_op"]
  224 -> 168 [style=dashed label="mul_op"]
  225 [label="State 225\n\l126 LiteralValue: '{' '}' •\l"]
  225 -> "225R126" [style=solid]
 "225R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  226 [label="State 226\n\l 52 Expression: Expression • binary_op Expression\l133 Key: Expression •\l135 Element: Expression •\l"]
  226 -> 146 [style=solid label="\"||\""]
  226 -> 147 [style=solid label="\"&&\""]
  226 -> 148 [style=solid label="'|'"]
  226 -> 149 [style=solid label="'^'"]
  226 -> 150 [style=solid label="'&'"]
  226 -> 151 [style=solid label="\"==\""]
  226 -> 152 [style=solid label="\"!=\""]
  226 -> 153 [style=solid label="'>'"]
  226 -> 154 [style=solid label="'<'"]
  226 -> 155 [style=solid label="\">=\""]
  226 -> 156 [style=solid label="\"<=\""]
  226 -> 157 [style=solid label="\">>\""]
  226 -> 158 [style=solid label="\"<<\""]
  226 -> 159 [style=solid label="'+'"]
  226 -> 160 [style=solid label="'-'"]
  226 -> 161 [style=solid label="'*'"]
  226 -> 162 [style=solid label="'/'"]
  226 -> 163 [style=solid label="'%'"]
  226 -> 165 [style=dashed label="binary_op"]
  226 -> 166 [style=dashed label="rel_op"]
  226 -> 167 [style=dashed label="add_op"]
  226 -> 168 [style=dashed label="mul_op"]
  226 -> "226R133" [label="[':']", style=solid]
 "226R133" [label="R133", fillcolor=3, shape=diamond, style=filled]
  226 -> "226R135" [style=solid]
 "226R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  227 [label="State 227\n\l134 Key: LiteralValue •\l136 Element: LiteralValue •\l"]
  227 -> "227R134" [label="[':']", style=solid]
 "227R134" [label="R134", fillcolor=3, shape=diamond, style=filled]
  227 -> "227R136" [style=solid]
 "227R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  228 [label="State 228\n\l127 LiteralValue: '{' ElementList • '}'\l"]
  228 -> 279 [style=solid label="'}'"]
  229 [label="State 229\n\l128 ElementList: KeyedElement • STAR_CM_KeyedElement\l"]
  229 -> 280 [style=dashed label="STAR_CM_KeyedElement"]
  229 -> "229R130" [style=solid]
 "229R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  230 [label="State 230\n\l131 KeyedElement: Key • ':' Element\l"]
  230 -> 281 [style=solid label="':'"]
  231 [label="State 231\n\l132 KeyedElement: Element •\l"]
  231 -> "231R132" [style=solid]
 "231R132" [label="R132", fillcolor=3, shape=diamond, style=filled]
  232 [label="State 232\n\l206 StructType: STRUCT '{' STAR_FieldDecl_SC '}' •\l"]
  232 -> "232R206" [style=solid]
 "232R206" [label="R206", fillcolor=3, shape=diamond, style=filled]
  233 [label="State 233\n\l207 FieldDecl: IdentifierList • Type Tag\l208          | IdentifierList • Type\l"]
  233 -> 56 [style=solid label="FUNC"]
  233 -> 57 [style=solid label="STRUCT"]
  233 -> 58 [style=solid label="ID"]
  233 -> 60 [style=solid label="'*'"]
  233 -> 61 [style=solid label="'('"]
  233 -> 62 [style=solid label="'['"]
  233 -> 63 [style=dashed label="PackageName"]
  233 -> 64 [style=dashed label="QualifiedIdent"]
  233 -> 282 [style=dashed label="Type"]
  233 -> 66 [style=dashed label="TypeName"]
  233 -> 67 [style=dashed label="TypeLit"]
  233 -> 68 [style=dashed label="ArrayType"]
  233 -> 69 [style=dashed label="StructType"]
  233 -> 70 [style=dashed label="PointerType"]
  233 -> 71 [style=dashed label="FunctionType"]
  234 [label="State 234\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl • ';'\l"]
  234 -> 283 [style=solid label="';'"]
  235 [label="State 235\n\l205 ElementType: Type •\l"]
  235 -> "235R205" [style=solid]
 "235R205" [label="R205", fillcolor=3, shape=diamond, style=filled]
  236 [label="State 236\n\l203 ArrayType: '[' ArrayLength ']' ElementType •\l"]
  236 -> "236R203" [style=solid]
 "236R203" [label="R203", fillcolor=3, shape=diamond, style=filled]
  237 [label="State 237\n\l 30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' ParameterDecl •\l"]
  237 -> "237R30" [style=solid]
 "237R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  238 [label="State 238\n\l156 Label: ID •\l"]
  238 -> "238R156" [style=solid]
 "238R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  239 [label="State 239\n\l188 BreakStmt: BREAK Label •\l"]
  239 -> "239R188" [style=solid]
 "239R188" [label="R188", fillcolor=3, shape=diamond, style=filled]
  240 [label="State 240\n\l186 ReturnStmt: RETURN ExpressionList •\l"]
  240 -> "240R186" [style=solid]
 "240R186" [label="R186", fillcolor=3, shape=diamond, style=filled]
  241 [label="State 241\n\l192 GotoStmt: GOTO Label •\l"]
  241 -> "241R192" [style=solid]
 "241R192" [label="R192", fillcolor=3, shape=diamond, style=filled]
  242 [label="State 242\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l162 ExpressionStmt: Expression •\l163 IncDecStmt: Expression • \"++\"\l164           | Expression • \"--\"\l166 IfStmt: IF Expression • Block\l"]
  242 -> 146 [style=solid label="\"||\""]
  242 -> 147 [style=solid label="\"&&\""]
  242 -> 148 [style=solid label="'|'"]
  242 -> 149 [style=solid label="'^'"]
  242 -> 150 [style=solid label="'&'"]
  242 -> 151 [style=solid label="\"==\""]
  242 -> 152 [style=solid label="\"!=\""]
  242 -> 153 [style=solid label="'>'"]
  242 -> 154 [style=solid label="'<'"]
  242 -> 155 [style=solid label="\">=\""]
  242 -> 156 [style=solid label="\"<=\""]
  242 -> 157 [style=solid label="\">>\""]
  242 -> 158 [style=solid label="\"<<\""]
  242 -> 159 [style=solid label="'+'"]
  242 -> 160 [style=solid label="'-'"]
  242 -> 161 [style=solid label="'*'"]
  242 -> 162 [style=solid label="'/'"]
  242 -> 163 [style=solid label="'%'"]
  242 -> 79 [style=solid label="'{'"]
  242 -> 268 [style=solid label="\"++\""]
  242 -> 269 [style=solid label="\"--\""]
  242 -> 164 [style=dashed label="STAR_CM_EXP"]
  242 -> 165 [style=dashed label="binary_op"]
  242 -> 166 [style=dashed label="rel_op"]
  242 -> 167 [style=dashed label="add_op"]
  242 -> 168 [style=dashed label="mul_op"]
  242 -> 284 [style=dashed label="Block"]
  242 -> "242R25" [style=solid]
 "242R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  242 -> "242R162" [label="[';']", style=solid]
 "242R162" [label="R162", fillcolor=3, shape=diamond, style=filled]
  243 [label="State 243\n\l167 IfStmt: IF SimpleStmt • ';' Expression Block\l168       | IF SimpleStmt • ';' Expression Block ELSE Block\l169       | IF SimpleStmt • ';' Expression Block ELSE IfStmt\l"]
  243 -> 285 [style=solid label="';'"]
  244 [label="State 244\n\l190 ContinueStmt: CONTINUE Label •\l"]
  244 -> "244R190" [style=solid]
 "244R190" [label="R190", fillcolor=3, shape=diamond, style=filled]
  245 [label="State 245\n\l183 RangeClause: RANGE • Expression\l"]
  245 -> 91 [style=solid label="FUNC"]
  245 -> 57 [style=solid label="STRUCT"]
  245 -> 92 [style=solid label="ID"]
  245 -> 93 [style=solid label="STRING_LIT"]
  245 -> 94 [style=solid label="BINARY_LIT"]
  245 -> 95 [style=solid label="HEX_LIT"]
  245 -> 96 [style=solid label="FLOAT_LIT"]
  245 -> 97 [style=solid label="DEC_LIT"]
  245 -> 98 [style=solid label="'^'"]
  245 -> 99 [style=solid label="'&'"]
  245 -> 100 [style=solid label="'+'"]
  245 -> 101 [style=solid label="'-'"]
  245 -> 102 [style=solid label="'*'"]
  245 -> 103 [style=solid label="'!'"]
  245 -> 104 [style=solid label="'['"]
  245 -> 105 [style=solid label="\"(\""]
  245 -> 63 [style=dashed label="PackageName"]
  245 -> 286 [style=dashed label="Expression"]
  245 -> 108 [style=dashed label="UnaryExpr"]
  245 -> 109 [style=dashed label="unary_op"]
  245 -> 110 [style=dashed label="PrimaryExpr"]
  245 -> 111 [style=dashed label="Operand"]
  245 -> 112 [style=dashed label="Literal"]
  245 -> 113 [style=dashed label="INT_LIT"]
  245 -> 114 [style=dashed label="BasicLit"]
  245 -> 115 [style=dashed label="OperandName"]
  245 -> 116 [style=dashed label="QualifiedIdent"]
  245 -> 117 [style=dashed label="CompositeLit"]
  245 -> 118 [style=dashed label="LiteralType"]
  245 -> 119 [style=dashed label="FunctionLit"]
  245 -> 120 [style=dashed label="TypeName"]
  245 -> 121 [style=dashed label="ArrayType"]
  245 -> 122 [style=dashed label="StructType"]
  246 [label="State 246\n\l165 Assignment: ExpressionList • assign_op ExpressionList\l184 RangeClause: ExpressionList • '=' RANGE Expression\l"]
  246 -> 287 [style=solid label="'='"]
  246 -> 257 [style=solid label="\"+=\""]
  246 -> 258 [style=solid label="\"-=\""]
  246 -> 259 [style=solid label="\"|=\""]
  246 -> 260 [style=solid label="\"^=\""]
  246 -> 261 [style=solid label="\"*=\""]
  246 -> 262 [style=solid label="\"/=\""]
  246 -> 263 [style=solid label="\"%=\""]
  246 -> 264 [style=solid label="\"<<=\""]
  246 -> 265 [style=solid label="\">>=\""]
  246 -> 266 [style=solid label="\"&=\""]
  246 -> 267 [style=dashed label="assign_op"]
  247 [label="State 247\n\l 50 ExpressionList: Expression • STAR_CM_EXP\l 52 Expression: Expression • binary_op Expression\l162 ExpressionStmt: Expression •\l163 IncDecStmt: Expression • \"++\"\l164           | Expression • \"--\"\l175 Condition: Expression •\l"]
  247 -> 146 [style=solid label="\"||\""]
  247 -> 147 [style=solid label="\"&&\""]
  247 -> 148 [style=solid label="'|'"]
  247 -> 149 [style=solid label="'^'"]
  247 -> 150 [style=solid label="'&'"]
  247 -> 151 [style=solid label="\"==\""]
  247 -> 152 [style=solid label="\"!=\""]
  247 -> 153 [style=solid label="'>'"]
  247 -> 154 [style=solid label="'<'"]
  247 -> 155 [style=solid label="\">=\""]
  247 -> 156 [style=solid label="\"<=\""]
  247 -> 157 [style=solid label="\">>\""]
  247 -> 158 [style=solid label="\"<<\""]
  247 -> 159 [style=solid label="'+'"]
  247 -> 160 [style=solid label="'-'"]
  247 -> 161 [style=solid label="'*'"]
  247 -> 162 [style=solid label="'/'"]
  247 -> 163 [style=solid label="'%'"]
  247 -> 268 [style=solid label="\"++\""]
  247 -> 269 [style=solid label="\"--\""]
  247 -> 164 [style=dashed label="STAR_CM_EXP"]
  247 -> 165 [style=dashed label="binary_op"]
  247 -> 166 [style=dashed label="rel_op"]
  247 -> 167 [style=dashed label="add_op"]
  247 -> 168 [style=dashed label="mul_op"]
  247 -> "247R25" [style=solid]
 "247R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  247 -> "247R162" [label="[';']", style=solid]
 "247R162" [label="R162", fillcolor=3, shape=diamond, style=filled]
  247 -> "247R175" [label="['{']", style=solid]
 "247R175" [label="R175", fillcolor=3, shape=diamond, style=filled]
  248 [label="State 248\n\l170 ForStmt: FOR Block •\l"]
  248 -> "248R170" [style=solid]
 "248R170" [label="R170", fillcolor=3, shape=diamond, style=filled]
  249 [label="State 249\n\l181 InitStmt: SimpleStmt •\l"]
  249 -> "249R181" [style=solid]
 "249R181" [label="R181", fillcolor=3, shape=diamond, style=filled]
  250 [label="State 250\n\l171 ForStmt: FOR ForStmtAfter • Block\l"]
  250 -> 79 [style=solid label="'{'"]
  250 -> 288 [style=dashed label="Block"]
  251 [label="State 251\n\l172 ForStmtAfter: Condition •\l"]
  251 -> "251R172" [style=solid]
 "251R172" [label="R172", fillcolor=3, shape=diamond, style=filled]
  252 [label="State 252\n\l173 ForStmtAfter: ForClause •\l"]
  252 -> "252R173" [style=solid]
 "252R173" [label="R173", fillcolor=3, shape=diamond, style=filled]
  253 [label="State 253\n\l176 ForClause: OPT_InitStmt • ';' OPT_Condition ';' OPT_PostStmt\l"]
  253 -> 289 [style=solid label="';'"]
  254 [label="State 254\n\l177 OPT_InitStmt: InitStmt •\l"]
  254 -> "254R177" [style=solid]
 "254R177" [label="R177", fillcolor=3, shape=diamond, style=filled]
  255 [label="State 255\n\l174 ForStmtAfter: RangeClause •\l"]
  255 -> "255R174" [style=solid]
 "255R174" [label="R174", fillcolor=3, shape=diamond, style=filled]
  256 [label="State 256\n\l 52 Expression: Expression • binary_op Expression\l185 GoStmt: GO Expression •\l"]
  256 -> 146 [style=solid label="\"||\""]
  256 -> 147 [style=solid label="\"&&\""]
  256 -> 148 [style=solid label="'|'"]
  256 -> 149 [style=solid label="'^'"]
  256 -> 150 [style=solid label="'&'"]
  256 -> 151 [style=solid label="\"==\""]
  256 -> 152 [style=solid label="\"!=\""]
  256 -> 153 [style=solid label="'>'"]
  256 -> 154 [style=solid label="'<'"]
  256 -> 155 [style=solid label="\">=\""]
  256 -> 156 [style=solid label="\"<=\""]
  256 -> 157 [style=solid label="\">>\""]
  256 -> 158 [style=solid label="\"<<\""]
  256 -> 159 [style=solid label="'+'"]
  256 -> 160 [style=solid label="'-'"]
  256 -> 161 [style=solid label="'*'"]
  256 -> 162 [style=solid label="'/'"]
  256 -> 163 [style=solid label="'%'"]
  256 -> 165 [style=dashed label="binary_op"]
  256 -> 166 [style=dashed label="rel_op"]
  256 -> 167 [style=dashed label="add_op"]
  256 -> 168 [style=dashed label="mul_op"]
  256 -> "256R185" [style=solid]
 "256R185" [label="R185", fillcolor=3, shape=diamond, style=filled]
  257 [label="State 257\n\l 70 assign_op: \"+=\" •\l"]
  257 -> "257R70" [style=solid]
 "257R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  258 [label="State 258\n\l 71 assign_op: \"-=\" •\l"]
  258 -> "258R71" [style=solid]
 "258R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  259 [label="State 259\n\l 72 assign_op: \"|=\" •\l"]
  259 -> "259R72" [style=solid]
 "259R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  260 [label="State 260\n\l 73 assign_op: \"^=\" •\l"]
  260 -> "260R73" [style=solid]
 "260R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  261 [label="State 261\n\l 74 assign_op: \"*=\" •\l"]
  261 -> "261R74" [style=solid]
 "261R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  262 [label="State 262\n\l 75 assign_op: \"/=\" •\l"]
  262 -> "262R75" [style=solid]
 "262R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  263 [label="State 263\n\l 76 assign_op: \"%=\" •\l"]
  263 -> "263R76" [style=solid]
 "263R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  264 [label="State 264\n\l 77 assign_op: \"<<=\" •\l"]
  264 -> "264R77" [style=solid]
 "264R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  265 [label="State 265\n\l 78 assign_op: \">>=\" •\l"]
  265 -> "265R78" [style=solid]
 "265R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  266 [label="State 266\n\l 79 assign_op: \"&=\" •\l"]
  266 -> "266R79" [style=solid]
 "266R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  267 [label="State 267\n\l165 Assignment: ExpressionList assign_op • ExpressionList\l"]
  267 -> 91 [style=solid label="FUNC"]
  267 -> 57 [style=solid label="STRUCT"]
  267 -> 92 [style=solid label="ID"]
  267 -> 93 [style=solid label="STRING_LIT"]
  267 -> 94 [style=solid label="BINARY_LIT"]
  267 -> 95 [style=solid label="HEX_LIT"]
  267 -> 96 [style=solid label="FLOAT_LIT"]
  267 -> 97 [style=solid label="DEC_LIT"]
  267 -> 98 [style=solid label="'^'"]
  267 -> 99 [style=solid label="'&'"]
  267 -> 100 [style=solid label="'+'"]
  267 -> 101 [style=solid label="'-'"]
  267 -> 102 [style=solid label="'*'"]
  267 -> 103 [style=solid label="'!'"]
  267 -> 104 [style=solid label="'['"]
  267 -> 105 [style=solid label="\"(\""]
  267 -> 63 [style=dashed label="PackageName"]
  267 -> 290 [style=dashed label="ExpressionList"]
  267 -> 107 [style=dashed label="Expression"]
  267 -> 108 [style=dashed label="UnaryExpr"]
  267 -> 109 [style=dashed label="unary_op"]
  267 -> 110 [style=dashed label="PrimaryExpr"]
  267 -> 111 [style=dashed label="Operand"]
  267 -> 112 [style=dashed label="Literal"]
  267 -> 113 [style=dashed label="INT_LIT"]
  267 -> 114 [style=dashed label="BasicLit"]
  267 -> 115 [style=dashed label="OperandName"]
  267 -> 116 [style=dashed label="QualifiedIdent"]
  267 -> 117 [style=dashed label="CompositeLit"]
  267 -> 118 [style=dashed label="LiteralType"]
  267 -> 119 [style=dashed label="FunctionLit"]
  267 -> 120 [style=dashed label="TypeName"]
  267 -> 121 [style=dashed label="ArrayType"]
  267 -> 122 [style=dashed label="StructType"]
  268 [label="State 268\n\l163 IncDecStmt: Expression \"++\" •\l"]
  268 -> "268R163" [style=solid]
 "268R163" [label="R163", fillcolor=3, shape=diamond, style=filled]
  269 [label="State 269\n\l164 IncDecStmt: Expression \"--\" •\l"]
  269 -> "269R164" [style=solid]
 "269R164" [label="R164", fillcolor=3, shape=diamond, style=filled]
  270 [label="State 270\n\l 28 STAR_Statement_SC: STAR_Statement_SC Statement ';' •\l"]
  270 -> "270R28" [style=solid]
 "270R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  271 [label="State 271\n\l155 LabeledStmt: Label ':' • Statement\l"]
  271 -> 184 [style=solid label="BREAK"]
  271 -> 91 [style=solid label="FUNC"]
  271 -> 57 [style=solid label="STRUCT"]
  271 -> 185 [style=solid label="RETURN"]
  271 -> 186 [style=solid label="GOTO"]
  271 -> 20 [style=solid label="CONST"]
  271 -> 187 [style=solid label="IF"]
  271 -> 188 [style=solid label="CONTINUE"]
  271 -> 189 [style=solid label="FOR"]
  271 -> 190 [style=solid label="ID"]
  271 -> 21 [style=solid label="VAR"]
  271 -> 93 [style=solid label="STRING_LIT"]
  271 -> 94 [style=solid label="BINARY_LIT"]
  271 -> 95 [style=solid label="HEX_LIT"]
  271 -> 96 [style=solid label="FLOAT_LIT"]
  271 -> 97 [style=solid label="DEC_LIT"]
  271 -> 191 [style=solid label="GO"]
  271 -> 192 [style=solid label="FALLTHROUGH"]
  271 -> 22 [style=solid label="TYPE_TOK"]
  271 -> 98 [style=solid label="'^'"]
  271 -> 99 [style=solid label="'&'"]
  271 -> 100 [style=solid label="'+'"]
  271 -> 101 [style=solid label="'-'"]
  271 -> 102 [style=solid label="'*'"]
  271 -> 103 [style=solid label="'!'"]
  271 -> 104 [style=solid label="'['"]
  271 -> 105 [style=solid label="\"(\""]
  271 -> 79 [style=solid label="'{'"]
  271 -> 63 [style=dashed label="PackageName"]
  271 -> 194 [style=dashed label="Declaration"]
  271 -> 25 [style=dashed label="ConstDecl"]
  271 -> 26 [style=dashed label="TypeDecl"]
  271 -> 27 [style=dashed label="VarDecl"]
  271 -> 195 [style=dashed label="ExpressionList"]
  271 -> 196 [style=dashed label="Expression"]
  271 -> 108 [style=dashed label="UnaryExpr"]
  271 -> 109 [style=dashed label="unary_op"]
  271 -> 110 [style=dashed label="PrimaryExpr"]
  271 -> 111 [style=dashed label="Operand"]
  271 -> 112 [style=dashed label="Literal"]
  271 -> 113 [style=dashed label="INT_LIT"]
  271 -> 114 [style=dashed label="BasicLit"]
  271 -> 115 [style=dashed label="OperandName"]
  271 -> 116 [style=dashed label="QualifiedIdent"]
  271 -> 117 [style=dashed label="CompositeLit"]
  271 -> 118 [style=dashed label="LiteralType"]
  271 -> 119 [style=dashed label="FunctionLit"]
  271 -> 197 [style=dashed label="Block"]
  271 -> 291 [style=dashed label="Statement"]
  271 -> 199 [style=dashed label="LabeledStmt"]
  271 -> 200 [style=dashed label="Label"]
  271 -> 201 [style=dashed label="SimpleStmt"]
  271 -> 202 [style=dashed label="EmptyStmt"]
  271 -> 203 [style=dashed label="ExpressionStmt"]
  271 -> 204 [style=dashed label="IncDecStmt"]
  271 -> 205 [style=dashed label="Assignment"]
  271 -> 206 [style=dashed label="IfStmt"]
  271 -> 207 [style=dashed label="ForStmt"]
  271 -> 208 [style=dashed label="GoStmt"]
  271 -> 209 [style=dashed label="ReturnStmt"]
  271 -> 210 [style=dashed label="BreakStmt"]
  271 -> 211 [style=dashed label="ContinueStmt"]
  271 -> 212 [style=dashed label="GotoStmt"]
  271 -> 213 [style=dashed label="FallthroughStmt"]
  271 -> 120 [style=dashed label="TypeName"]
  271 -> 121 [style=dashed label="ArrayType"]
  271 -> 122 [style=dashed label="StructType"]
  271 -> "271R161" [style=solid]
 "271R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  272 [label="State 272\n\l124 LiteralType: '[' ELIPSIS ']' ElementType •\l"]
  272 -> "272R124" [style=solid]
 "272R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  273 [label="State 273\n\l 24 STAR_CM_EXP: STAR_CM_EXP ',' Expression •\l 52 Expression: Expression • binary_op Expression\l"]
  273 -> 146 [style=solid label="\"||\""]
  273 -> 147 [style=solid label="\"&&\""]
  273 -> 148 [style=solid label="'|'"]
  273 -> 149 [style=solid label="'^'"]
  273 -> 150 [style=solid label="'&'"]
  273 -> 151 [style=solid label="\"==\""]
  273 -> 152 [style=solid label="\"!=\""]
  273 -> 153 [style=solid label="'>'"]
  273 -> 154 [style=solid label="'<'"]
  273 -> 155 [style=solid label="\">=\""]
  273 -> 156 [style=solid label="\"<=\""]
  273 -> 157 [style=solid label="\">>\""]
  273 -> 158 [style=solid label="\"<<\""]
  273 -> 159 [style=solid label="'+'"]
  273 -> 160 [style=solid label="'-'"]
  273 -> 161 [style=solid label="'*'"]
  273 -> 162 [style=solid label="'/'"]
  273 -> 163 [style=solid label="'%'"]
  273 -> 165 [style=dashed label="binary_op"]
  273 -> 166 [style=dashed label="rel_op"]
  273 -> 167 [style=dashed label="add_op"]
  273 -> 168 [style=dashed label="mul_op"]
  273 -> "273R24" [style=solid]
 "273R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  274 [label="State 274\n\l 99 Arguments: '(' ArgumentInBracket ')' •\l"]
  274 -> "274R99" [style=solid]
 "274R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  275 [label="State 275\n\l103 ArgumentInBracketEnd: ELIPSIS • ','\l104                     | ELIPSIS •\l"]
  275 -> 292 [style=solid label="','"]
  275 -> "275R104" [style=solid]
 "275R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  276 [label="State 276\n\l100 ArgumentInBracket: ArgumentInBracketFirst ArgumentInBracketEnd •\l"]
  276 -> "276R100" [style=solid]
 "276R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  277 [label="State 277\n\l102 ArgumentInBracketFirst: Type ',' • ExpressionList\l"]
  277 -> 91 [style=solid label="FUNC"]
  277 -> 57 [style=solid label="STRUCT"]
  277 -> 92 [style=solid label="ID"]
  277 -> 93 [style=solid label="STRING_LIT"]
  277 -> 94 [style=solid label="BINARY_LIT"]
  277 -> 95 [style=solid label="HEX_LIT"]
  277 -> 96 [style=solid label="FLOAT_LIT"]
  277 -> 97 [style=solid label="DEC_LIT"]
  277 -> 98 [style=solid label="'^'"]
  277 -> 99 [style=solid label="'&'"]
  277 -> 100 [style=solid label="'+'"]
  277 -> 101 [style=solid label="'-'"]
  277 -> 102 [style=solid label="'*'"]
  277 -> 103 [style=solid label="'!'"]
  277 -> 104 [style=solid label="'['"]
  277 -> 105 [style=solid label="\"(\""]
  277 -> 63 [style=dashed label="PackageName"]
  277 -> 293 [style=dashed label="ExpressionList"]
  277 -> 107 [style=dashed label="Expression"]
  277 -> 108 [style=dashed label="UnaryExpr"]
  277 -> 109 [style=dashed label="unary_op"]
  277 -> 110 [style=dashed label="PrimaryExpr"]
  277 -> 111 [style=dashed label="Operand"]
  277 -> 112 [style=dashed label="Literal"]
  277 -> 113 [style=dashed label="INT_LIT"]
  277 -> 114 [style=dashed label="BasicLit"]
  277 -> 115 [style=dashed label="OperandName"]
  277 -> 116 [style=dashed label="QualifiedIdent"]
  277 -> 117 [style=dashed label="CompositeLit"]
  277 -> 118 [style=dashed label="LiteralType"]
  277 -> 119 [style=dashed label="FunctionLit"]
  277 -> 120 [style=dashed label="TypeName"]
  277 -> 121 [style=dashed label="ArrayType"]
  277 -> 122 [style=dashed label="StructType"]
  278 [label="State 278\n\l 97 Index: '[' Expression ']' •\l"]
  278 -> "278R97" [style=solid]
 "278R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  279 [label="State 279\n\l127 LiteralValue: '{' ElementList '}' •\l"]
  279 -> "279R127" [style=solid]
 "279R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  280 [label="State 280\n\l128 ElementList: KeyedElement STAR_CM_KeyedElement •\l129 STAR_CM_KeyedElement: STAR_CM_KeyedElement • ',' KeyedElement\l"]
  280 -> 294 [style=solid label="','"]
  280 -> "280R128" [style=solid]
 "280R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  281 [label="State 281\n\l131 KeyedElement: Key ':' • Element\l"]
  281 -> 91 [style=solid label="FUNC"]
  281 -> 57 [style=solid label="STRUCT"]
  281 -> 92 [style=solid label="ID"]
  281 -> 93 [style=solid label="STRING_LIT"]
  281 -> 94 [style=solid label="BINARY_LIT"]
  281 -> 95 [style=solid label="HEX_LIT"]
  281 -> 96 [style=solid label="FLOAT_LIT"]
  281 -> 97 [style=solid label="DEC_LIT"]
  281 -> 98 [style=solid label="'^'"]
  281 -> 99 [style=solid label="'&'"]
  281 -> 100 [style=solid label="'+'"]
  281 -> 101 [style=solid label="'-'"]
  281 -> 102 [style=solid label="'*'"]
  281 -> 103 [style=solid label="'!'"]
  281 -> 104 [style=solid label="'['"]
  281 -> 105 [style=solid label="\"(\""]
  281 -> 176 [style=solid label="'{'"]
  281 -> 63 [style=dashed label="PackageName"]
  281 -> 295 [style=dashed label="Expression"]
  281 -> 108 [style=dashed label="UnaryExpr"]
  281 -> 109 [style=dashed label="unary_op"]
  281 -> 110 [style=dashed label="PrimaryExpr"]
  281 -> 111 [style=dashed label="Operand"]
  281 -> 112 [style=dashed label="Literal"]
  281 -> 113 [style=dashed label="INT_LIT"]
  281 -> 114 [style=dashed label="BasicLit"]
  281 -> 115 [style=dashed label="OperandName"]
  281 -> 116 [style=dashed label="QualifiedIdent"]
  281 -> 117 [style=dashed label="CompositeLit"]
  281 -> 118 [style=dashed label="LiteralType"]
  281 -> 296 [style=dashed label="LiteralValue"]
  281 -> 297 [style=dashed label="Element"]
  281 -> 119 [style=dashed label="FunctionLit"]
  281 -> 120 [style=dashed label="TypeName"]
  281 -> 121 [style=dashed label="ArrayType"]
  281 -> 122 [style=dashed label="StructType"]
  282 [label="State 282\n\l207 FieldDecl: IdentifierList Type • Tag\l208          | IdentifierList Type •\l"]
  282 -> 298 [style=solid label="STRING_LIT"]
  282 -> 299 [style=dashed label="Tag"]
  282 -> "282R208" [style=solid]
 "282R208" [label="R208", fillcolor=3, shape=diamond, style=filled]
  283 [label="State 283\n\l 32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl ';' •\l"]
  283 -> "283R32" [style=solid]
 "283R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  284 [label="State 284\n\l166 IfStmt: IF Expression Block •\l"]
  284 -> "284R166" [style=solid]
 "284R166" [label="R166", fillcolor=3, shape=diamond, style=filled]
  285 [label="State 285\n\l167 IfStmt: IF SimpleStmt ';' • Expression Block\l168       | IF SimpleStmt ';' • Expression Block ELSE Block\l169       | IF SimpleStmt ';' • Expression Block ELSE IfStmt\l"]
  285 -> 91 [style=solid label="FUNC"]
  285 -> 57 [style=solid label="STRUCT"]
  285 -> 92 [style=solid label="ID"]
  285 -> 93 [style=solid label="STRING_LIT"]
  285 -> 94 [style=solid label="BINARY_LIT"]
  285 -> 95 [style=solid label="HEX_LIT"]
  285 -> 96 [style=solid label="FLOAT_LIT"]
  285 -> 97 [style=solid label="DEC_LIT"]
  285 -> 98 [style=solid label="'^'"]
  285 -> 99 [style=solid label="'&'"]
  285 -> 100 [style=solid label="'+'"]
  285 -> 101 [style=solid label="'-'"]
  285 -> 102 [style=solid label="'*'"]
  285 -> 103 [style=solid label="'!'"]
  285 -> 104 [style=solid label="'['"]
  285 -> 105 [style=solid label="\"(\""]
  285 -> 63 [style=dashed label="PackageName"]
  285 -> 300 [style=dashed label="Expression"]
  285 -> 108 [style=dashed label="UnaryExpr"]
  285 -> 109 [style=dashed label="unary_op"]
  285 -> 110 [style=dashed label="PrimaryExpr"]
  285 -> 111 [style=dashed label="Operand"]
  285 -> 112 [style=dashed label="Literal"]
  285 -> 113 [style=dashed label="INT_LIT"]
  285 -> 114 [style=dashed label="BasicLit"]
  285 -> 115 [style=dashed label="OperandName"]
  285 -> 116 [style=dashed label="QualifiedIdent"]
  285 -> 117 [style=dashed label="CompositeLit"]
  285 -> 118 [style=dashed label="LiteralType"]
  285 -> 119 [style=dashed label="FunctionLit"]
  285 -> 120 [style=dashed label="TypeName"]
  285 -> 121 [style=dashed label="ArrayType"]
  285 -> 122 [style=dashed label="StructType"]
  286 [label="State 286\n\l 52 Expression: Expression • binary_op Expression\l183 RangeClause: RANGE Expression •\l"]
  286 -> 146 [style=solid label="\"||\""]
  286 -> 147 [style=solid label="\"&&\""]
  286 -> 148 [style=solid label="'|'"]
  286 -> 149 [style=solid label="'^'"]
  286 -> 150 [style=solid label="'&'"]
  286 -> 151 [style=solid label="\"==\""]
  286 -> 152 [style=solid label="\"!=\""]
  286 -> 153 [style=solid label="'>'"]
  286 -> 154 [style=solid label="'<'"]
  286 -> 155 [style=solid label="\">=\""]
  286 -> 156 [style=solid label="\"<=\""]
  286 -> 157 [style=solid label="\">>\""]
  286 -> 158 [style=solid label="\"<<\""]
  286 -> 159 [style=solid label="'+'"]
  286 -> 160 [style=solid label="'-'"]
  286 -> 161 [style=solid label="'*'"]
  286 -> 162 [style=solid label="'/'"]
  286 -> 163 [style=solid label="'%'"]
  286 -> 165 [style=dashed label="binary_op"]
  286 -> 166 [style=dashed label="rel_op"]
  286 -> 167 [style=dashed label="add_op"]
  286 -> 168 [style=dashed label="mul_op"]
  286 -> "286R183" [style=solid]
 "286R183" [label="R183", fillcolor=3, shape=diamond, style=filled]
  287 [label="State 287\n\l184 RangeClause: ExpressionList '=' • RANGE Expression\l"]
  287 -> 301 [style=solid label="RANGE"]
  288 [label="State 288\n\l171 ForStmt: FOR ForStmtAfter Block •\l"]
  288 -> "288R171" [style=solid]
 "288R171" [label="R171", fillcolor=3, shape=diamond, style=filled]
  289 [label="State 289\n\l176 ForClause: OPT_InitStmt ';' • OPT_Condition ';' OPT_PostStmt\l"]
  289 -> 91 [style=solid label="FUNC"]
  289 -> 57 [style=solid label="STRUCT"]
  289 -> 92 [style=solid label="ID"]
  289 -> 93 [style=solid label="STRING_LIT"]
  289 -> 94 [style=solid label="BINARY_LIT"]
  289 -> 95 [style=solid label="HEX_LIT"]
  289 -> 96 [style=solid label="FLOAT_LIT"]
  289 -> 97 [style=solid label="DEC_LIT"]
  289 -> 98 [style=solid label="'^'"]
  289 -> 99 [style=solid label="'&'"]
  289 -> 100 [style=solid label="'+'"]
  289 -> 101 [style=solid label="'-'"]
  289 -> 102 [style=solid label="'*'"]
  289 -> 103 [style=solid label="'!'"]
  289 -> 104 [style=solid label="'['"]
  289 -> 105 [style=solid label="\"(\""]
  289 -> 63 [style=dashed label="PackageName"]
  289 -> 302 [style=dashed label="Expression"]
  289 -> 108 [style=dashed label="UnaryExpr"]
  289 -> 109 [style=dashed label="unary_op"]
  289 -> 110 [style=dashed label="PrimaryExpr"]
  289 -> 111 [style=dashed label="Operand"]
  289 -> 112 [style=dashed label="Literal"]
  289 -> 113 [style=dashed label="INT_LIT"]
  289 -> 114 [style=dashed label="BasicLit"]
  289 -> 115 [style=dashed label="OperandName"]
  289 -> 116 [style=dashed label="QualifiedIdent"]
  289 -> 117 [style=dashed label="CompositeLit"]
  289 -> 118 [style=dashed label="LiteralType"]
  289 -> 119 [style=dashed label="FunctionLit"]
  289 -> 303 [style=dashed label="Condition"]
  289 -> 304 [style=dashed label="OPT_Condition"]
  289 -> 120 [style=dashed label="TypeName"]
  289 -> 121 [style=dashed label="ArrayType"]
  289 -> 122 [style=dashed label="StructType"]
  289 -> "289R179" [style=solid]
 "289R179" [label="R179", fillcolor=3, shape=diamond, style=filled]
  290 [label="State 290\n\l165 Assignment: ExpressionList assign_op ExpressionList •\l"]
  290 -> "290R165" [style=solid]
 "290R165" [label="R165", fillcolor=3, shape=diamond, style=filled]
  291 [label="State 291\n\l155 LabeledStmt: Label ':' Statement •\l"]
  291 -> "291R155" [style=solid]
 "291R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  292 [label="State 292\n\l103 ArgumentInBracketEnd: ELIPSIS ',' •\l"]
  292 -> "292R103" [style=solid]
 "292R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  293 [label="State 293\n\l102 ArgumentInBracketFirst: Type ',' ExpressionList •\l"]
  293 -> "293R102" [style=solid]
 "293R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  294 [label="State 294\n\l129 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' • KeyedElement\l"]
  294 -> 91 [style=solid label="FUNC"]
  294 -> 57 [style=solid label="STRUCT"]
  294 -> 92 [style=solid label="ID"]
  294 -> 93 [style=solid label="STRING_LIT"]
  294 -> 94 [style=solid label="BINARY_LIT"]
  294 -> 95 [style=solid label="HEX_LIT"]
  294 -> 96 [style=solid label="FLOAT_LIT"]
  294 -> 97 [style=solid label="DEC_LIT"]
  294 -> 98 [style=solid label="'^'"]
  294 -> 99 [style=solid label="'&'"]
  294 -> 100 [style=solid label="'+'"]
  294 -> 101 [style=solid label="'-'"]
  294 -> 102 [style=solid label="'*'"]
  294 -> 103 [style=solid label="'!'"]
  294 -> 104 [style=solid label="'['"]
  294 -> 105 [style=solid label="\"(\""]
  294 -> 176 [style=solid label="'{'"]
  294 -> 63 [style=dashed label="PackageName"]
  294 -> 226 [style=dashed label="Expression"]
  294 -> 108 [style=dashed label="UnaryExpr"]
  294 -> 109 [style=dashed label="unary_op"]
  294 -> 110 [style=dashed label="PrimaryExpr"]
  294 -> 111 [style=dashed label="Operand"]
  294 -> 112 [style=dashed label="Literal"]
  294 -> 113 [style=dashed label="INT_LIT"]
  294 -> 114 [style=dashed label="BasicLit"]
  294 -> 115 [style=dashed label="OperandName"]
  294 -> 116 [style=dashed label="QualifiedIdent"]
  294 -> 117 [style=dashed label="CompositeLit"]
  294 -> 118 [style=dashed label="LiteralType"]
  294 -> 227 [style=dashed label="LiteralValue"]
  294 -> 305 [style=dashed label="KeyedElement"]
  294 -> 230 [style=dashed label="Key"]
  294 -> 231 [style=dashed label="Element"]
  294 -> 119 [style=dashed label="FunctionLit"]
  294 -> 120 [style=dashed label="TypeName"]
  294 -> 121 [style=dashed label="ArrayType"]
  294 -> 122 [style=dashed label="StructType"]
  295 [label="State 295\n\l 52 Expression: Expression • binary_op Expression\l135 Element: Expression •\l"]
  295 -> 146 [style=solid label="\"||\""]
  295 -> 147 [style=solid label="\"&&\""]
  295 -> 148 [style=solid label="'|'"]
  295 -> 149 [style=solid label="'^'"]
  295 -> 150 [style=solid label="'&'"]
  295 -> 151 [style=solid label="\"==\""]
  295 -> 152 [style=solid label="\"!=\""]
  295 -> 153 [style=solid label="'>'"]
  295 -> 154 [style=solid label="'<'"]
  295 -> 155 [style=solid label="\">=\""]
  295 -> 156 [style=solid label="\"<=\""]
  295 -> 157 [style=solid label="\">>\""]
  295 -> 158 [style=solid label="\"<<\""]
  295 -> 159 [style=solid label="'+'"]
  295 -> 160 [style=solid label="'-'"]
  295 -> 161 [style=solid label="'*'"]
  295 -> 162 [style=solid label="'/'"]
  295 -> 163 [style=solid label="'%'"]
  295 -> 165 [style=dashed label="binary_op"]
  295 -> 166 [style=dashed label="rel_op"]
  295 -> 167 [style=dashed label="add_op"]
  295 -> 168 [style=dashed label="mul_op"]
  295 -> "295R135" [style=solid]
 "295R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  296 [label="State 296\n\l136 Element: LiteralValue •\l"]
  296 -> "296R136" [style=solid]
 "296R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  297 [label="State 297\n\l131 KeyedElement: Key ':' Element •\l"]
  297 -> "297R131" [style=solid]
 "297R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  298 [label="State 298\n\l209 Tag: STRING_LIT •\l"]
  298 -> "298R209" [style=solid]
 "298R209" [label="R209", fillcolor=3, shape=diamond, style=filled]
  299 [label="State 299\n\l207 FieldDecl: IdentifierList Type Tag •\l"]
  299 -> "299R207" [style=solid]
 "299R207" [label="R207", fillcolor=3, shape=diamond, style=filled]
  300 [label="State 300\n\l 52 Expression: Expression • binary_op Expression\l167 IfStmt: IF SimpleStmt ';' Expression • Block\l168       | IF SimpleStmt ';' Expression • Block ELSE Block\l169       | IF SimpleStmt ';' Expression • Block ELSE IfStmt\l"]
  300 -> 146 [style=solid label="\"||\""]
  300 -> 147 [style=solid label="\"&&\""]
  300 -> 148 [style=solid label="'|'"]
  300 -> 149 [style=solid label="'^'"]
  300 -> 150 [style=solid label="'&'"]
  300 -> 151 [style=solid label="\"==\""]
  300 -> 152 [style=solid label="\"!=\""]
  300 -> 153 [style=solid label="'>'"]
  300 -> 154 [style=solid label="'<'"]
  300 -> 155 [style=solid label="\">=\""]
  300 -> 156 [style=solid label="\"<=\""]
  300 -> 157 [style=solid label="\">>\""]
  300 -> 158 [style=solid label="\"<<\""]
  300 -> 159 [style=solid label="'+'"]
  300 -> 160 [style=solid label="'-'"]
  300 -> 161 [style=solid label="'*'"]
  300 -> 162 [style=solid label="'/'"]
  300 -> 163 [style=solid label="'%'"]
  300 -> 79 [style=solid label="'{'"]
  300 -> 165 [style=dashed label="binary_op"]
  300 -> 166 [style=dashed label="rel_op"]
  300 -> 167 [style=dashed label="add_op"]
  300 -> 168 [style=dashed label="mul_op"]
  300 -> 306 [style=dashed label="Block"]
  301 [label="State 301\n\l184 RangeClause: ExpressionList '=' RANGE • Expression\l"]
  301 -> 91 [style=solid label="FUNC"]
  301 -> 57 [style=solid label="STRUCT"]
  301 -> 92 [style=solid label="ID"]
  301 -> 93 [style=solid label="STRING_LIT"]
  301 -> 94 [style=solid label="BINARY_LIT"]
  301 -> 95 [style=solid label="HEX_LIT"]
  301 -> 96 [style=solid label="FLOAT_LIT"]
  301 -> 97 [style=solid label="DEC_LIT"]
  301 -> 98 [style=solid label="'^'"]
  301 -> 99 [style=solid label="'&'"]
  301 -> 100 [style=solid label="'+'"]
  301 -> 101 [style=solid label="'-'"]
  301 -> 102 [style=solid label="'*'"]
  301 -> 103 [style=solid label="'!'"]
  301 -> 104 [style=solid label="'['"]
  301 -> 105 [style=solid label="\"(\""]
  301 -> 63 [style=dashed label="PackageName"]
  301 -> 307 [style=dashed label="Expression"]
  301 -> 108 [style=dashed label="UnaryExpr"]
  301 -> 109 [style=dashed label="unary_op"]
  301 -> 110 [style=dashed label="PrimaryExpr"]
  301 -> 111 [style=dashed label="Operand"]
  301 -> 112 [style=dashed label="Literal"]
  301 -> 113 [style=dashed label="INT_LIT"]
  301 -> 114 [style=dashed label="BasicLit"]
  301 -> 115 [style=dashed label="OperandName"]
  301 -> 116 [style=dashed label="QualifiedIdent"]
  301 -> 117 [style=dashed label="CompositeLit"]
  301 -> 118 [style=dashed label="LiteralType"]
  301 -> 119 [style=dashed label="FunctionLit"]
  301 -> 120 [style=dashed label="TypeName"]
  301 -> 121 [style=dashed label="ArrayType"]
  301 -> 122 [style=dashed label="StructType"]
  302 [label="State 302\n\l 52 Expression: Expression • binary_op Expression\l175 Condition: Expression •\l"]
  302 -> 146 [style=solid label="\"||\""]
  302 -> 147 [style=solid label="\"&&\""]
  302 -> 148 [style=solid label="'|'"]
  302 -> 149 [style=solid label="'^'"]
  302 -> 150 [style=solid label="'&'"]
  302 -> 151 [style=solid label="\"==\""]
  302 -> 152 [style=solid label="\"!=\""]
  302 -> 153 [style=solid label="'>'"]
  302 -> 154 [style=solid label="'<'"]
  302 -> 155 [style=solid label="\">=\""]
  302 -> 156 [style=solid label="\"<=\""]
  302 -> 157 [style=solid label="\">>\""]
  302 -> 158 [style=solid label="\"<<\""]
  302 -> 159 [style=solid label="'+'"]
  302 -> 160 [style=solid label="'-'"]
  302 -> 161 [style=solid label="'*'"]
  302 -> 162 [style=solid label="'/'"]
  302 -> 163 [style=solid label="'%'"]
  302 -> 165 [style=dashed label="binary_op"]
  302 -> 166 [style=dashed label="rel_op"]
  302 -> 167 [style=dashed label="add_op"]
  302 -> 168 [style=dashed label="mul_op"]
  302 -> "302R175" [style=solid]
 "302R175" [label="R175", fillcolor=3, shape=diamond, style=filled]
  303 [label="State 303\n\l178 OPT_Condition: Condition •\l"]
  303 -> "303R178" [style=solid]
 "303R178" [label="R178", fillcolor=3, shape=diamond, style=filled]
  304 [label="State 304\n\l176 ForClause: OPT_InitStmt ';' OPT_Condition • ';' OPT_PostStmt\l"]
  304 -> 308 [style=solid label="';'"]
  305 [label="State 305\n\l129 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' KeyedElement •\l"]
  305 -> "305R129" [style=solid]
 "305R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  306 [label="State 306\n\l167 IfStmt: IF SimpleStmt ';' Expression Block •\l168       | IF SimpleStmt ';' Expression Block • ELSE Block\l169       | IF SimpleStmt ';' Expression Block • ELSE IfStmt\l"]
  306 -> 309 [style=solid label="ELSE"]
  306 -> "306R167" [style=solid]
 "306R167" [label="R167", fillcolor=3, shape=diamond, style=filled]
  307 [label="State 307\n\l 52 Expression: Expression • binary_op Expression\l184 RangeClause: ExpressionList '=' RANGE Expression •\l"]
  307 -> 146 [style=solid label="\"||\""]
  307 -> 147 [style=solid label="\"&&\""]
  307 -> 148 [style=solid label="'|'"]
  307 -> 149 [style=solid label="'^'"]
  307 -> 150 [style=solid label="'&'"]
  307 -> 151 [style=solid label="\"==\""]
  307 -> 152 [style=solid label="\"!=\""]
  307 -> 153 [style=solid label="'>'"]
  307 -> 154 [style=solid label="'<'"]
  307 -> 155 [style=solid label="\">=\""]
  307 -> 156 [style=solid label="\"<=\""]
  307 -> 157 [style=solid label="\">>\""]
  307 -> 158 [style=solid label="\"<<\""]
  307 -> 159 [style=solid label="'+'"]
  307 -> 160 [style=solid label="'-'"]
  307 -> 161 [style=solid label="'*'"]
  307 -> 162 [style=solid label="'/'"]
  307 -> 163 [style=solid label="'%'"]
  307 -> 165 [style=dashed label="binary_op"]
  307 -> 166 [style=dashed label="rel_op"]
  307 -> 167 [style=dashed label="add_op"]
  307 -> 168 [style=dashed label="mul_op"]
  307 -> "307R184" [style=solid]
 "307R184" [label="R184", fillcolor=3, shape=diamond, style=filled]
  308 [label="State 308\n\l176 ForClause: OPT_InitStmt ';' OPT_Condition ';' • OPT_PostStmt\l"]
  308 -> 91 [style=solid label="FUNC"]
  308 -> 57 [style=solid label="STRUCT"]
  308 -> 92 [style=solid label="ID"]
  308 -> 93 [style=solid label="STRING_LIT"]
  308 -> 94 [style=solid label="BINARY_LIT"]
  308 -> 95 [style=solid label="HEX_LIT"]
  308 -> 96 [style=solid label="FLOAT_LIT"]
  308 -> 97 [style=solid label="DEC_LIT"]
  308 -> 98 [style=solid label="'^'"]
  308 -> 99 [style=solid label="'&'"]
  308 -> 100 [style=solid label="'+'"]
  308 -> 101 [style=solid label="'-'"]
  308 -> 102 [style=solid label="'*'"]
  308 -> 103 [style=solid label="'!'"]
  308 -> 104 [style=solid label="'['"]
  308 -> 105 [style=solid label="\"(\""]
  308 -> 63 [style=dashed label="PackageName"]
  308 -> 195 [style=dashed label="ExpressionList"]
  308 -> 196 [style=dashed label="Expression"]
  308 -> 108 [style=dashed label="UnaryExpr"]
  308 -> 109 [style=dashed label="unary_op"]
  308 -> 110 [style=dashed label="PrimaryExpr"]
  308 -> 111 [style=dashed label="Operand"]
  308 -> 112 [style=dashed label="Literal"]
  308 -> 113 [style=dashed label="INT_LIT"]
  308 -> 114 [style=dashed label="BasicLit"]
  308 -> 115 [style=dashed label="OperandName"]
  308 -> 116 [style=dashed label="QualifiedIdent"]
  308 -> 117 [style=dashed label="CompositeLit"]
  308 -> 118 [style=dashed label="LiteralType"]
  308 -> 119 [style=dashed label="FunctionLit"]
  308 -> 310 [style=dashed label="SimpleStmt"]
  308 -> 202 [style=dashed label="EmptyStmt"]
  308 -> 203 [style=dashed label="ExpressionStmt"]
  308 -> 204 [style=dashed label="IncDecStmt"]
  308 -> 205 [style=dashed label="Assignment"]
  308 -> 311 [style=dashed label="OPT_PostStmt"]
  308 -> 312 [style=dashed label="PostStmt"]
  308 -> 120 [style=dashed label="TypeName"]
  308 -> 121 [style=dashed label="ArrayType"]
  308 -> 122 [style=dashed label="StructType"]
  308 -> "308R161" [style=solid]
 "308R161" [label="R161", fillcolor=3, shape=diamond, style=filled]
  309 [label="State 309\n\l168 IfStmt: IF SimpleStmt ';' Expression Block ELSE • Block\l169       | IF SimpleStmt ';' Expression Block ELSE • IfStmt\l"]
  309 -> 187 [style=solid label="IF"]
  309 -> 79 [style=solid label="'{'"]
  309 -> 313 [style=dashed label="Block"]
  309 -> 314 [style=dashed label="IfStmt"]
  310 [label="State 310\n\l182 PostStmt: SimpleStmt •\l"]
  310 -> "310R182" [style=solid]
 "310R182" [label="R182", fillcolor=3, shape=diamond, style=filled]
  311 [label="State 311\n\l176 ForClause: OPT_InitStmt ';' OPT_Condition ';' OPT_PostStmt •\l"]
  311 -> "311R176" [style=solid]
 "311R176" [label="R176", fillcolor=3, shape=diamond, style=filled]
  312 [label="State 312\n\l180 OPT_PostStmt: PostStmt •\l"]
  312 -> "312R180" [style=solid]
 "312R180" [label="R180", fillcolor=3, shape=diamond, style=filled]
  313 [label="State 313\n\l168 IfStmt: IF SimpleStmt ';' Expression Block ELSE Block •\l"]
  313 -> "313R168" [style=solid]
 "313R168" [label="R168", fillcolor=3, shape=diamond, style=filled]
  314 [label="State 314\n\l169 IfStmt: IF SimpleStmt ';' Expression Block ELSE IfStmt •\l"]
  314 -> "314R169" [style=solid]
 "314R169" [label="R169", fillcolor=3, shape=diamond, style=filled]
}
