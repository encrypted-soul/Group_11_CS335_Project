Terminals unused in grammar

    CASE
    VARCASE
    SPACE
    TAB
    INT8
    INT16
    INT32
    INT64
    UINT8
    UINT16
    UINT32
    UINT64
    FLOAT32
    FLOAT64
    BYTE
    TRUE
    FALSE
    STRING
    SELECT
    DEFAULT


Rules useless in parser due to conflicts

  126 Key: ID

  174 OPT_InitStmt: %empty

  178 OPT_PostStmt: %empty


State 74 conflicts: 1 reduce/reduce
State 94 conflicts: 5 reduce/reduce
State 118 conflicts: 4 reduce/reduce
State 141 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 194 conflicts: 1 reduce/reduce
State 195 conflicts: 1 reduce/reduce
State 201 conflicts: 10 shift/reduce
State 223 conflicts: 18 shift/reduce
State 225 conflicts: 4 shift/reduce
State 230 conflicts: 1 shift/reduce
State 236 conflicts: 2 reduce/reduce
State 254 conflicts: 10 shift/reduce
State 259 conflicts: 10 shift/reduce
State 277 conflicts: 10 shift/reduce
State 287 conflicts: 1 shift/reduce
State 318 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC

    2 PackageClause: PACKAGE PackageName

    3 PackageName: ID

    4 ImportDecl: IMPORT ImportSpec
    5           | IMPORT '(' STAR_ImportSpec_SC ')'

    6 ImportSpec: ImportPath
    7           | '.' ImportPath
    8           | PackageName ImportPath

    9 ImportPath: STRING_LIT

   10 TopLevelDecl: Declaration
   11             | FunctionDecl

   12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl ';'
   13                     | %empty

   14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl ';'
   15                   | %empty

   16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec ';'
   17                   | %empty

   18 STAR_CM_ID: STAR_CM_ID ',' ID
   19           | %empty

   20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec ';'
   21                  | %empty

   22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec ';'
   23                | %empty

   24 STAR_CM_EXP: STAR_CM_EXP ',' Expression
   25            | %empty

   26 STAR_TypeSpec_SC: STAR_TypeSpec_SC ';'
   27                 | %empty

   28 STAR_Statement_SC: STAR_Statement_SC Statement ';'
   29                  | %empty

   30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' ParameterDecl
   31                      | %empty

   32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl ';'
   33                  | %empty

   34 Declaration: ConstDecl
   35            | TypeDecl
   36            | VarDecl

   37 ConstDecl: CONST ConstSpec
   38          | CONST '(' STAR_ConstSpec_SC ')'

   39 ConstSpec: IdentifierList

   40 IdentifierList: ID STAR_CM_ID

   41 TypeDecl: TYPE_TOK TypeSpec
   42         | TYPE_TOK '(' STAR_TypeSpec_SC ')'

   43 TypeSpec: AliasDecl
   44         | TypeDef

   45 AliasDecl: ID '=' Type

   46 TypeDef: ID Type

   47 VarDecl: VAR VarSpec
   48        | VAR '(' STAR_VarSpec_SC ')'

   49 VarSpec: IdentifierList "=" ExpressionList

   50 ExpressionList: Expression STAR_CM_EXP

   51 Expression: UnaryExpr
   52           | Expression binary_op Expression

   53 UnaryExpr: PrimaryExpr
   54          | unary_op UnaryExpr

   55 binary_op: "||"
   56          | "&&"
   57          | rel_op
   58          | add_op
   59          | mul_op

   60 rel_op: "=="
   61       | "!="
   62       | '<'
   63       | "<="
   64       | '>'
   65       | ">="

   66 add_op: '+'
   67       | '-'
   68       | '|'
   69       | '^'

   70 mul_op: '*'
   71       | '/'
   72       | '%'
   73       | "<<"
   74       | ">>"
   75       | '&'

   76 unary_op: '+'
   77         | '-'
   78         | '!'
   79         | '^'
   80         | '*'
   81         | '&'

   82 PrimaryExpr: Operand
   83            | PrimaryExpr Index
   84            | PrimaryExpr Selector
   85            | PrimaryExpr Arguments

   86 Selector: '.' ID

   87 Index: '[' Expression ']'

   88 Arguments: '(' ')'
   89          | '(' ArgumentInBracket ')'

   90 ArgumentInBracket: ArgumentInBracketFirst ArgumentInBracketEnd

   91 ArgumentInBracketFirst: ExpressionList
   92                       | Type
   93                       | Type ',' ExpressionList

   94 ArgumentInBracketEnd: ELIPSIS ','
   95                     | ELIPSIS
   96                     | ','
   97                     | %empty

   98 Operand: Literal
   99        | OperandName
  100        | "(" Expression ")"

  101 Literal: BasicLit
  102        | CompositeLit
  103        | FunctionLit

  104 INT_LIT: DEC_LIT
  105        | BINARY_LIT
  106        | HEX_LIT

  107 BasicLit: INT_LIT
  108         | FLOAT_LIT
  109         | STRING_LIT

  110 OperandName: ID
  111            | QualifiedIdent

  112 QualifiedIdent: PackageName '.' ID

  113 CompositeLit: LiteralType LiteralValue

  114 LiteralType: StructType
  115            | ArrayType
  116            | '[' ELIPSIS ']' ElementType
  117            | TypeName

  118 LiteralValue: '{' '}'
  119             | '{' ElementList '}'
  120             | '{' ElementList ',' '}'

  121 ElementList: KeyedElement STAR_CM_KeyedElement

  122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' KeyedElement
  123                     | %empty

  124 KeyedElement: Key ':' Element
  125             | Element

  126 Key: ID
  127    | Expression
  128    | LiteralValue

  129 Element: Expression
  130        | LiteralValue

  131 FunctionLit: FUNC Signature FunctionBody

  132 FunctionDecl: FUNC FunctionName Signature FunctionBody
  133             | FUNC FunctionName Signature

  134 FunctionName: ID

  135 FunctionBody: Block

  136 Block: '{' STAR_Statement_SC '}'

  137 Statement: Declaration
  138          | LabeledStmt
  139          | SimpleStmt
  140          | GoStmt
  141          | ReturnStmt
  142          | BreakStmt
  143          | ContinueStmt
  144          | GotoStmt
  145          | FallthroughStmt
  146          | Block
  147          | IfStmt
  148          | ForStmt

  149 LabeledStmt: Label ':' Statement

  150 Label: ID

  151 SimpleStmt: EmptyStmt
  152           | ExpressionStmt
  153           | IncDecStmt
  154           | Assignment

  155 EmptyStmt: %empty

  156 ExpressionStmt: Expression

  157 IncDecStmt: Expression "++"
  158           | Expression "--"

  159 Assignment: ExpressionList assign_op ExpressionList

  160 assign_op: add_op '='
  161          | mul_op '='

  162 IfStmt: IF Expression Block
  163       | IF SimpleStmt ';' Expression Block
  164       | IF SimpleStmt ';' Expression Block ELSE Block
  165       | IF SimpleStmt ';' Expression Block ELSE IfStmt

  166 ForStmt: FOR Block
  167        | FOR ForStmtAfter Block

  168 ForStmtAfter: Condition
  169             | ForClause
  170             | RangeClause

  171 Condition: Expression

  172 ForClause: OPT_InitStmt ';' OPT_Condition ';' OPT_PostStmt

  173 OPT_InitStmt: InitStmt
  174             | %empty

  175 OPT_Condition: Condition
  176              | %empty

  177 OPT_PostStmt: PostStmt
  178             | %empty

  179 InitStmt: SimpleStmt

  180 PostStmt: SimpleStmt

  181 RangeClause: RANGE Expression
  182            | ExpressionList '=' RANGE Expression

  183 GoStmt: GO Expression

  184 ReturnStmt: RETURN ExpressionList
  185           | RETURN

  186 BreakStmt: BREAK Label
  187          | BREAK

  188 ContinueStmt: CONTINUE Label
  189             | CONTINUE

  190 GotoStmt: GOTO Label

  191 FallthroughStmt: FALLTHROUGH

  192 Type: TypeName
  193     | TypeLit
  194     | '(' Type ')'

  195 TypeName: ID
  196         | QualifiedIdent

  197 TypeLit: ArrayType
  198        | StructType
  199        | PointerType
  200        | FunctionType

  201 ArrayType: '[' ArrayLength ']' ElementType

  202 ArrayLength: Expression

  203 ElementType: Type

  204 StructType: STRUCT '{' STAR_FieldDecl_SC '}'

  205 FieldDecl: IdentifierList Type Tag
  206          | IdentifierList Type

  207 Tag: STRING_LIT

  208 PointerType: '*' BaseType

  209 BaseType: Type

  210 FunctionType: FUNC Signature

  211 Signature: Parameters
  212          | Parameters Result

  213 Result: Parameters
  214       | Type

  215 Parameters: '(' ')'
  216           | '(' ParameterList ')'
  217           | '(' ParameterList ',' ')'

  218 ParameterList: ParameterDecl STAR_CM_ParameterDecl

  219 ParameterDecl: Type
  220              | IdentifierList Type
  221              | IdentifierList ELIPSIS Type
  222              | ELIPSIS Type


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 78
    '%' (37) 72
    '&' (38) 75 81
    '(' (40) 5 38 42 48 88 89 194 215 216 217
    ')' (41) 5 38 42 48 88 89 194 215 216 217
    '*' (42) 70 80 208
    '+' (43) 66 76
    ',' (44) 18 24 30 93 94 96 120 122 217
    '-' (45) 67 77
    '.' (46) 7 86 112
    '/' (47) 71
    ':' (58) 124 149
    ';' (59) 1 12 14 16 20 22 26 28 32 163 164 165 172
    '<' (60) 62
    '=' (61) 45 160 161 182
    '>' (62) 64
    '[' (91) 87 116 201
    ']' (93) 87 116 201
    '^' (94) 69 79
    '{' (123) 118 119 120 136 204
    '|' (124) 68
    '}' (125) 118 119 120 136 204
    error (256)
    CASE (258)
    BREAK (259) 186 187
    FUNC (260) 131 132 133 210
    VARCASE (261)
    STRUCT (262) 204
    RETURN (263) 184 185
    ELSE (264) 164 165
    GOTO (265) 190
    PACKAGE (266) 2
    CONST (267) 37 38
    IF (268) 162 163 164 165
    RANGE (269) 181 182
    CONTINUE (270) 188 189
    FOR (271) 166 167
    SPACE (272)
    TAB (273)
    ID (274) 3 18 40 45 46 86 110 112 126 134 150 195
    VAR (275) 47 48
    INT8 (276)
    INT16 (277)
    INT32 (278)
    INT64 (279)
    UINT8 (280)
    UINT16 (281)
    UINT32 (282)
    UINT64 (283)
    FLOAT32 (284)
    FLOAT64 (285)
    BYTE (286)
    TRUE (287)
    FALSE (288)
    STRING_LIT (289) 9 109 207
    BINARY_LIT (290) 105
    HEX_LIT (291) 106
    FLOAT_LIT (292) 108
    DEC_LIT (293) 104
    IMPORT (294) 4 5
    STRING (295)
    ELIPSIS (296) 94 95 116 221 222
    SELECT (297)
    GO (298) 183
    FALLTHROUGH (299) 191
    DEFAULT (300)
    TYPE_TOK (301) 41 42
    "=" (302) 49
    "||" (303) 55
    "&&" (304) 56
    "==" (305) 60
    "!=" (306) 61
    "<=" (307) 63
    ">=" (308) 65
    "<<" (309) 73
    ">>" (310) 74
    "(" (311) 100
    ")" (312) 100
    "++" (313) 157
    "--" (314) 158


Nonterminals, with rules where they appear

    $accept (82)
        on left: 0
    SourceFile (83)
        on left: 1
        on right: 0
    PackageClause (84)
        on left: 2
        on right: 1
    PackageName (85)
        on left: 3
        on right: 2 8 112
    ImportDecl (86)
        on left: 4 5
        on right: 14
    ImportSpec (87)
        on left: 6 7 8
        on right: 4 16
    ImportPath (88)
        on left: 9
        on right: 6 7 8
    TopLevelDecl (89)
        on left: 10 11
        on right: 12
    STAR_TopLevelDecl_SC (90)
        on left: 12 13
        on right: 1 12
    STAR_ImportDecl_SC (91)
        on left: 14 15
        on right: 1 14
    STAR_ImportSpec_SC (92)
        on left: 16 17
        on right: 5 16
    STAR_CM_ID (93)
        on left: 18 19
        on right: 18 40
    STAR_ConstSpec_SC (94)
        on left: 20 21
        on right: 20 38
    STAR_VarSpec_SC (95)
        on left: 22 23
        on right: 22 48
    STAR_CM_EXP (96)
        on left: 24 25
        on right: 24 50
    STAR_TypeSpec_SC (97)
        on left: 26 27
        on right: 26 42
    STAR_Statement_SC (98)
        on left: 28 29
        on right: 28 136
    STAR_CM_ParameterDecl (99)
        on left: 30 31
        on right: 30 218
    STAR_FieldDecl_SC (100)
        on left: 32 33
        on right: 32 204
    Declaration (101)
        on left: 34 35 36
        on right: 10 137
    ConstDecl (102)
        on left: 37 38
        on right: 34
    ConstSpec (103)
        on left: 39
        on right: 20 37
    IdentifierList (104)
        on left: 40
        on right: 39 49 205 206 220 221
    TypeDecl (105)
        on left: 41 42
        on right: 35
    TypeSpec (106)
        on left: 43 44
        on right: 41
    AliasDecl (107)
        on left: 45
        on right: 43
    TypeDef (108)
        on left: 46
        on right: 44
    VarDecl (109)
        on left: 47 48
        on right: 36
    VarSpec (110)
        on left: 49
        on right: 22 47
    ExpressionList (111)
        on left: 50
        on right: 49 91 93 159 182 184
    Expression (112)
        on left: 51 52
        on right: 24 50 52 87 100 127 129 156 157 158 162 163 164 165 171 181 182 183 202
    UnaryExpr (113)
        on left: 53 54
        on right: 51 54
    binary_op (114)
        on left: 55 56 57 58 59
        on right: 52
    rel_op (115)
        on left: 60 61 62 63 64 65
        on right: 57
    add_op (116)
        on left: 66 67 68 69
        on right: 58 160
    mul_op (117)
        on left: 70 71 72 73 74 75
        on right: 59 161
    unary_op (118)
        on left: 76 77 78 79 80 81
        on right: 54
    PrimaryExpr (119)
        on left: 82 83 84 85
        on right: 53 83 84 85
    Selector (120)
        on left: 86
        on right: 84
    Index (121)
        on left: 87
        on right: 83
    Arguments (122)
        on left: 88 89
        on right: 85
    ArgumentInBracket (123)
        on left: 90
        on right: 89
    ArgumentInBracketFirst (124)
        on left: 91 92 93
        on right: 90
    ArgumentInBracketEnd (125)
        on left: 94 95 96 97
        on right: 90
    Operand (126)
        on left: 98 99 100
        on right: 82
    Literal (127)
        on left: 101 102 103
        on right: 98
    INT_LIT (128)
        on left: 104 105 106
        on right: 107
    BasicLit (129)
        on left: 107 108 109
        on right: 101
    OperandName (130)
        on left: 110 111
        on right: 99
    QualifiedIdent (131)
        on left: 112
        on right: 111 196
    CompositeLit (132)
        on left: 113
        on right: 102
    LiteralType (133)
        on left: 114 115 116 117
        on right: 113
    LiteralValue (134)
        on left: 118 119 120
        on right: 113 128 130
    ElementList (135)
        on left: 121
        on right: 119 120
    STAR_CM_KeyedElement (136)
        on left: 122 123
        on right: 121 122
    KeyedElement (137)
        on left: 124 125
        on right: 121 122
    Key (138)
        on left: 126 127 128
        on right: 124
    Element (139)
        on left: 129 130
        on right: 124 125
    FunctionLit (140)
        on left: 131
        on right: 103
    FunctionDecl (141)
        on left: 132 133
        on right: 11
    FunctionName (142)
        on left: 134
        on right: 132 133
    FunctionBody (143)
        on left: 135
        on right: 131 132
    Block (144)
        on left: 136
        on right: 135 146 162 163 164 165 166 167
    Statement (145)
        on left: 137 138 139 140 141 142 143 144 145 146 147 148
        on right: 28 149
    LabeledStmt (146)
        on left: 149
        on right: 138
    Label (147)
        on left: 150
        on right: 149 186 188 190
    SimpleStmt (148)
        on left: 151 152 153 154
        on right: 139 163 164 165 179 180
    EmptyStmt (149)
        on left: 155
        on right: 151
    ExpressionStmt (150)
        on left: 156
        on right: 152
    IncDecStmt (151)
        on left: 157 158
        on right: 153
    Assignment (152)
        on left: 159
        on right: 154
    assign_op (153)
        on left: 160 161
        on right: 159
    IfStmt (154)
        on left: 162 163 164 165
        on right: 147 165
    ForStmt (155)
        on left: 166 167
        on right: 148
    ForStmtAfter (156)
        on left: 168 169 170
        on right: 167
    Condition (157)
        on left: 171
        on right: 168 175
    ForClause (158)
        on left: 172
        on right: 169
    OPT_InitStmt (159)
        on left: 173 174
        on right: 172
    OPT_Condition (160)
        on left: 175 176
        on right: 172
    OPT_PostStmt (161)
        on left: 177 178
        on right: 172
    InitStmt (162)
        on left: 179
        on right: 173
    PostStmt (163)
        on left: 180
        on right: 177
    RangeClause (164)
        on left: 181 182
        on right: 170
    GoStmt (165)
        on left: 183
        on right: 140
    ReturnStmt (166)
        on left: 184 185
        on right: 141
    BreakStmt (167)
        on left: 186 187
        on right: 142
    ContinueStmt (168)
        on left: 188 189
        on right: 143
    GotoStmt (169)
        on left: 190
        on right: 144
    FallthroughStmt (170)
        on left: 191
        on right: 145
    Type (171)
        on left: 192 193 194
        on right: 45 46 92 93 194 203 205 206 209 214 219 220 221 222
    TypeName (172)
        on left: 195 196
        on right: 117 192
    TypeLit (173)
        on left: 197 198 199 200
        on right: 193
    ArrayType (174)
        on left: 201
        on right: 115 197
    ArrayLength (175)
        on left: 202
        on right: 201
    ElementType (176)
        on left: 203
        on right: 116 201
    StructType (177)
        on left: 204
        on right: 114 198
    FieldDecl (178)
        on left: 205 206
        on right: 32
    Tag (179)
        on left: 207
        on right: 205
    PointerType (180)
        on left: 208
        on right: 199
    BaseType (181)
        on left: 209
        on right: 208
    FunctionType (182)
        on left: 210
        on right: 200
    Signature (183)
        on left: 211 212
        on right: 131 132 133 210
    Result (184)
        on left: 213 214
        on right: 212
    Parameters (185)
        on left: 215 216 217
        on right: 211 212 213
    ParameterList (186)
        on left: 218
        on right: 216 217
    ParameterDecl (187)
        on left: 219 220 221 222
        on right: 30 218


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    2 PackageClause: PACKAGE . PackageName

    ID  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC

    ';'  shift, and go to state 7


State 4

    3 PackageName: ID .

    $default  reduce using rule 3 (PackageName)


State 5

    2 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 2 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause ';' . STAR_ImportDecl_SC STAR_TopLevelDecl_SC

    $default  reduce using rule 15 (STAR_ImportDecl_SC)

    STAR_ImportDecl_SC  go to state 8


State 8

    1 SourceFile: PackageClause ';' STAR_ImportDecl_SC . STAR_TopLevelDecl_SC
   14 STAR_ImportDecl_SC: STAR_ImportDecl_SC . ImportDecl ';'

    IMPORT  shift, and go to state 9

    $default  reduce using rule 13 (STAR_TopLevelDecl_SC)

    ImportDecl            go to state 10
    STAR_TopLevelDecl_SC  go to state 11


State 9

    4 ImportDecl: IMPORT . ImportSpec
    5           | IMPORT . '(' STAR_ImportSpec_SC ')'

    ID          shift, and go to state 4
    STRING_LIT  shift, and go to state 12
    '('         shift, and go to state 13
    '.'         shift, and go to state 14

    PackageName  go to state 15
    ImportSpec   go to state 16
    ImportPath   go to state 17


State 10

   14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl . ';'

    ';'  shift, and go to state 18


State 11

    1 SourceFile: PackageClause ';' STAR_ImportDecl_SC STAR_TopLevelDecl_SC .
   12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC . TopLevelDecl ';'

    FUNC      shift, and go to state 19
    CONST     shift, and go to state 20
    VAR       shift, and go to state 21
    TYPE_TOK  shift, and go to state 22

    $default  reduce using rule 1 (SourceFile)

    TopLevelDecl  go to state 23
    Declaration   go to state 24
    ConstDecl     go to state 25
    TypeDecl      go to state 26
    VarDecl       go to state 27
    FunctionDecl  go to state 28


State 12

    9 ImportPath: STRING_LIT .

    $default  reduce using rule 9 (ImportPath)


State 13

    5 ImportDecl: IMPORT '(' . STAR_ImportSpec_SC ')'

    $default  reduce using rule 17 (STAR_ImportSpec_SC)

    STAR_ImportSpec_SC  go to state 29


State 14

    7 ImportSpec: '.' . ImportPath

    STRING_LIT  shift, and go to state 12

    ImportPath  go to state 30


State 15

    8 ImportSpec: PackageName . ImportPath

    STRING_LIT  shift, and go to state 12

    ImportPath  go to state 31


State 16

    4 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 4 (ImportDecl)


State 17

    6 ImportSpec: ImportPath .

    $default  reduce using rule 6 (ImportSpec)


State 18

   14 STAR_ImportDecl_SC: STAR_ImportDecl_SC ImportDecl ';' .

    $default  reduce using rule 14 (STAR_ImportDecl_SC)


State 19

  132 FunctionDecl: FUNC . FunctionName Signature FunctionBody
  133             | FUNC . FunctionName Signature

    ID  shift, and go to state 32

    FunctionName  go to state 33


State 20

   37 ConstDecl: CONST . ConstSpec
   38          | CONST . '(' STAR_ConstSpec_SC ')'

    ID   shift, and go to state 34
    '('  shift, and go to state 35

    ConstSpec       go to state 36
    IdentifierList  go to state 37


State 21

   47 VarDecl: VAR . VarSpec
   48        | VAR . '(' STAR_VarSpec_SC ')'

    ID   shift, and go to state 34
    '('  shift, and go to state 38

    IdentifierList  go to state 39
    VarSpec         go to state 40


State 22

   41 TypeDecl: TYPE_TOK . TypeSpec
   42         | TYPE_TOK . '(' STAR_TypeSpec_SC ')'

    ID   shift, and go to state 41
    '('  shift, and go to state 42

    TypeSpec   go to state 43
    AliasDecl  go to state 44
    TypeDef    go to state 45


State 23

   12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl . ';'

    ';'  shift, and go to state 46


State 24

   10 TopLevelDecl: Declaration .

    $default  reduce using rule 10 (TopLevelDecl)


State 25

   34 Declaration: ConstDecl .

    $default  reduce using rule 34 (Declaration)


State 26

   35 Declaration: TypeDecl .

    $default  reduce using rule 35 (Declaration)


State 27

   36 Declaration: VarDecl .

    $default  reduce using rule 36 (Declaration)


State 28

   11 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 11 (TopLevelDecl)


State 29

    5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC . ')'
   16 STAR_ImportSpec_SC: STAR_ImportSpec_SC . ImportSpec ';'

    ID          shift, and go to state 4
    STRING_LIT  shift, and go to state 12
    ')'         shift, and go to state 47
    '.'         shift, and go to state 14

    PackageName  go to state 15
    ImportSpec   go to state 48
    ImportPath   go to state 17


State 30

    7 ImportSpec: '.' ImportPath .

    $default  reduce using rule 7 (ImportSpec)


State 31

    8 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 8 (ImportSpec)


State 32

  134 FunctionName: ID .

    $default  reduce using rule 134 (FunctionName)


State 33

  132 FunctionDecl: FUNC FunctionName . Signature FunctionBody
  133             | FUNC FunctionName . Signature

    '('  shift, and go to state 49

    Signature   go to state 50
    Parameters  go to state 51


State 34

   40 IdentifierList: ID . STAR_CM_ID

    $default  reduce using rule 19 (STAR_CM_ID)

    STAR_CM_ID  go to state 52


State 35

   38 ConstDecl: CONST '(' . STAR_ConstSpec_SC ')'

    $default  reduce using rule 21 (STAR_ConstSpec_SC)

    STAR_ConstSpec_SC  go to state 53


State 36

   37 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 37 (ConstDecl)


State 37

   39 ConstSpec: IdentifierList .

    $default  reduce using rule 39 (ConstSpec)


State 38

   48 VarDecl: VAR '(' . STAR_VarSpec_SC ')'

    $default  reduce using rule 23 (STAR_VarSpec_SC)

    STAR_VarSpec_SC  go to state 54


State 39

   49 VarSpec: IdentifierList . "=" ExpressionList

    "="  shift, and go to state 55


State 40

   47 VarDecl: VAR VarSpec .

    $default  reduce using rule 47 (VarDecl)


State 41

   45 AliasDecl: ID . '=' Type
   46 TypeDef: ID . Type

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '='     shift, and go to state 61
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 65
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 42

   42 TypeDecl: TYPE_TOK '(' . STAR_TypeSpec_SC ')'

    $default  reduce using rule 27 (STAR_TypeSpec_SC)

    STAR_TypeSpec_SC  go to state 72


State 43

   41 TypeDecl: TYPE_TOK TypeSpec .

    $default  reduce using rule 41 (TypeDecl)


State 44

   43 TypeSpec: AliasDecl .

    $default  reduce using rule 43 (TypeSpec)


State 45

   44 TypeSpec: TypeDef .

    $default  reduce using rule 44 (TypeSpec)


State 46

   12 STAR_TopLevelDecl_SC: STAR_TopLevelDecl_SC TopLevelDecl ';' .

    $default  reduce using rule 12 (STAR_TopLevelDecl_SC)


State 47

    5 ImportDecl: IMPORT '(' STAR_ImportSpec_SC ')' .

    $default  reduce using rule 5 (ImportDecl)


State 48

   16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec . ';'

    ';'  shift, and go to state 73


State 49

  215 Parameters: '(' . ')'
  216           | '(' . ParameterList ')'
  217           | '(' . ParameterList ',' ')'

    FUNC     shift, and go to state 56
    STRUCT   shift, and go to state 57
    ID       shift, and go to state 74
    ELIPSIS  shift, and go to state 75
    '*'      shift, and go to state 59
    '('      shift, and go to state 60
    ')'      shift, and go to state 76
    '['      shift, and go to state 62

    PackageName     go to state 63
    IdentifierList  go to state 77
    QualifiedIdent  go to state 64
    Type            go to state 78
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71
    ParameterList   go to state 79
    ParameterDecl   go to state 80


State 50

  132 FunctionDecl: FUNC FunctionName Signature . FunctionBody
  133             | FUNC FunctionName Signature .

    '{'  shift, and go to state 81

    $default  reduce using rule 133 (FunctionDecl)

    FunctionBody  go to state 82
    Block         go to state 83


State 51

  211 Signature: Parameters .
  212          | Parameters . Result

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 84
    '['     shift, and go to state 62

    $default  reduce using rule 211 (Signature)

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 85
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71
    Result          go to state 86
    Parameters      go to state 87


State 52

   18 STAR_CM_ID: STAR_CM_ID . ',' ID
   40 IdentifierList: ID STAR_CM_ID .

    ','  shift, and go to state 88

    $default  reduce using rule 40 (IdentifierList)


State 53

   20 STAR_ConstSpec_SC: STAR_ConstSpec_SC . ConstSpec ';'
   38 ConstDecl: CONST '(' STAR_ConstSpec_SC . ')'

    ID   shift, and go to state 34
    ')'  shift, and go to state 89

    ConstSpec       go to state 90
    IdentifierList  go to state 37


State 54

   22 STAR_VarSpec_SC: STAR_VarSpec_SC . VarSpec ';'
   48 VarDecl: VAR '(' STAR_VarSpec_SC . ')'

    ID   shift, and go to state 34
    ')'  shift, and go to state 91

    IdentifierList  go to state 39
    VarSpec         go to state 92


State 55

   49 VarSpec: IdentifierList "=" . ExpressionList

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    ExpressionList  go to state 108
    Expression      go to state 109
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 56

  210 FunctionType: FUNC . Signature

    '('  shift, and go to state 49

    Signature   go to state 125
    Parameters  go to state 51


State 57

  204 StructType: STRUCT . '{' STAR_FieldDecl_SC '}'

    '{'  shift, and go to state 126


State 58

    3 PackageName: ID .
  195 TypeName: ID .

    '.'       reduce using rule 3 (PackageName)
    $default  reduce using rule 195 (TypeName)


State 59

  208 PointerType: '*' . BaseType

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 127
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    BaseType        go to state 128
    FunctionType    go to state 71


State 60

  194 Type: '(' . Type ')'

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 129
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 61

   45 AliasDecl: ID '=' . Type

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 130
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 62

  201 ArrayType: '[' . ArrayLength ']' ElementType

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 131
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    ArrayLength     go to state 132
    StructType      go to state 124


State 63

  112 QualifiedIdent: PackageName . '.' ID

    '.'  shift, and go to state 133


State 64

  196 TypeName: QualifiedIdent .

    $default  reduce using rule 196 (TypeName)


State 65

   46 TypeDef: ID Type .

    $default  reduce using rule 46 (TypeDef)


State 66

  192 Type: TypeName .

    $default  reduce using rule 192 (Type)


State 67

  193 Type: TypeLit .

    $default  reduce using rule 193 (Type)


State 68

  197 TypeLit: ArrayType .

    $default  reduce using rule 197 (TypeLit)


State 69

  198 TypeLit: StructType .

    $default  reduce using rule 198 (TypeLit)


State 70

  199 TypeLit: PointerType .

    $default  reduce using rule 199 (TypeLit)


State 71

  200 TypeLit: FunctionType .

    $default  reduce using rule 200 (TypeLit)


State 72

   26 STAR_TypeSpec_SC: STAR_TypeSpec_SC . ';'
   42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC . ')'

    ';'  shift, and go to state 134
    ')'  shift, and go to state 135


State 73

   16 STAR_ImportSpec_SC: STAR_ImportSpec_SC ImportSpec ';' .

    $default  reduce using rule 16 (STAR_ImportSpec_SC)


State 74

    3 PackageName: ID .
   40 IdentifierList: ID . STAR_CM_ID
  195 TypeName: ID .

    ')'       reduce using rule 195 (TypeName)
    '.'       reduce using rule 3 (PackageName)
    ','       reduce using rule 19 (STAR_CM_ID)
    ','       [reduce using rule 195 (TypeName)]
    $default  reduce using rule 19 (STAR_CM_ID)

    STAR_CM_ID  go to state 52


State 75

  222 ParameterDecl: ELIPSIS . Type

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 136
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 76

  215 Parameters: '(' ')' .

    $default  reduce using rule 215 (Parameters)


State 77

  220 ParameterDecl: IdentifierList . Type
  221              | IdentifierList . ELIPSIS Type

    FUNC     shift, and go to state 56
    STRUCT   shift, and go to state 57
    ID       shift, and go to state 58
    ELIPSIS  shift, and go to state 137
    '*'      shift, and go to state 59
    '('      shift, and go to state 60
    '['      shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 138
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 78

  219 ParameterDecl: Type .

    $default  reduce using rule 219 (ParameterDecl)


State 79

  216 Parameters: '(' ParameterList . ')'
  217           | '(' ParameterList . ',' ')'

    ')'  shift, and go to state 139
    ','  shift, and go to state 140


State 80

  218 ParameterList: ParameterDecl . STAR_CM_ParameterDecl

    $default  reduce using rule 31 (STAR_CM_ParameterDecl)

    STAR_CM_ParameterDecl  go to state 141


State 81

  136 Block: '{' . STAR_Statement_SC '}'

    $default  reduce using rule 29 (STAR_Statement_SC)

    STAR_Statement_SC  go to state 142


State 82

  132 FunctionDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 132 (FunctionDecl)


State 83

  135 FunctionBody: Block .

    $default  reduce using rule 135 (FunctionBody)


State 84

  194 Type: '(' . Type ')'
  215 Parameters: '(' . ')'
  216           | '(' . ParameterList ')'
  217           | '(' . ParameterList ',' ')'

    FUNC     shift, and go to state 56
    STRUCT   shift, and go to state 57
    ID       shift, and go to state 74
    ELIPSIS  shift, and go to state 75
    '*'      shift, and go to state 59
    '('      shift, and go to state 60
    ')'      shift, and go to state 76
    '['      shift, and go to state 62

    PackageName     go to state 63
    IdentifierList  go to state 77
    QualifiedIdent  go to state 64
    Type            go to state 143
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71
    ParameterList   go to state 79
    ParameterDecl   go to state 80


State 85

  214 Result: Type .

    $default  reduce using rule 214 (Result)


State 86

  212 Signature: Parameters Result .

    $default  reduce using rule 212 (Signature)


State 87

  213 Result: Parameters .

    $default  reduce using rule 213 (Result)


State 88

   18 STAR_CM_ID: STAR_CM_ID ',' . ID

    ID  shift, and go to state 144


State 89

   38 ConstDecl: CONST '(' STAR_ConstSpec_SC ')' .

    $default  reduce using rule 38 (ConstDecl)


State 90

   20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec . ';'

    ';'  shift, and go to state 145


State 91

   48 VarDecl: VAR '(' STAR_VarSpec_SC ')' .

    $default  reduce using rule 48 (VarDecl)


State 92

   22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec . ';'

    ';'  shift, and go to state 146


State 93

  131 FunctionLit: FUNC . Signature FunctionBody

    '('  shift, and go to state 49

    Signature   go to state 147
    Parameters  go to state 51


State 94

    3 PackageName: ID .
  110 OperandName: ID .
  195 TypeName: ID .

    ELIPSIS   reduce using rule 110 (OperandName)
    ELIPSIS   [reduce using rule 195 (TypeName)]
    ')'       reduce using rule 110 (OperandName)
    ')'       [reduce using rule 195 (TypeName)]
    '.'       reduce using rule 3 (PackageName)
    '.'       [reduce using rule 110 (OperandName)]
    ','       reduce using rule 110 (OperandName)
    ','       [reduce using rule 195 (TypeName)]
    '{'       reduce using rule 110 (OperandName)
    '{'       [reduce using rule 195 (TypeName)]
    $default  reduce using rule 110 (OperandName)


State 95

  109 BasicLit: STRING_LIT .

    $default  reduce using rule 109 (BasicLit)


State 96

  105 INT_LIT: BINARY_LIT .

    $default  reduce using rule 105 (INT_LIT)


State 97

  106 INT_LIT: HEX_LIT .

    $default  reduce using rule 106 (INT_LIT)


State 98

  108 BasicLit: FLOAT_LIT .

    $default  reduce using rule 108 (BasicLit)


State 99

  104 INT_LIT: DEC_LIT .

    $default  reduce using rule 104 (INT_LIT)


State 100

   76 unary_op: '+' .

    $default  reduce using rule 76 (unary_op)


State 101

   77 unary_op: '-' .

    $default  reduce using rule 77 (unary_op)


State 102

   80 unary_op: '*' .

    $default  reduce using rule 80 (unary_op)


State 103

   79 unary_op: '^' .

    $default  reduce using rule 79 (unary_op)


State 104

   81 unary_op: '&' .

    $default  reduce using rule 81 (unary_op)


State 105

   78 unary_op: '!' .

    $default  reduce using rule 78 (unary_op)


State 106

  116 LiteralType: '[' . ELIPSIS ']' ElementType
  201 ArrayType: '[' . ArrayLength ']' ElementType

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    ELIPSIS     shift, and go to state 148
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 131
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    ArrayLength     go to state 132
    StructType      go to state 124


State 107

  100 Operand: "(" . Expression ")"

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 149
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 108

   49 VarSpec: IdentifierList "=" ExpressionList .

    $default  reduce using rule 49 (VarSpec)


State 109

   50 ExpressionList: Expression . STAR_CM_EXP
   52 Expression: Expression . binary_op Expression

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 25 (STAR_CM_EXP)

    STAR_CM_EXP  go to state 168
    binary_op    go to state 169
    rel_op       go to state 170
    add_op       go to state 171
    mul_op       go to state 172


State 110

   51 Expression: UnaryExpr .

    $default  reduce using rule 51 (Expression)


State 111

   54 UnaryExpr: unary_op . UnaryExpr

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    UnaryExpr       go to state 173
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 112

   53 UnaryExpr: PrimaryExpr .
   83 PrimaryExpr: PrimaryExpr . Index
   84            | PrimaryExpr . Selector
   85            | PrimaryExpr . Arguments

    '('  shift, and go to state 174
    '.'  shift, and go to state 175
    '['  shift, and go to state 176

    $default  reduce using rule 53 (UnaryExpr)

    Selector   go to state 177
    Index      go to state 178
    Arguments  go to state 179


State 113

   82 PrimaryExpr: Operand .

    $default  reduce using rule 82 (PrimaryExpr)


State 114

   98 Operand: Literal .

    $default  reduce using rule 98 (Operand)


State 115

  107 BasicLit: INT_LIT .

    $default  reduce using rule 107 (BasicLit)


State 116

  101 Literal: BasicLit .

    $default  reduce using rule 101 (Literal)


State 117

   99 Operand: OperandName .

    $default  reduce using rule 99 (Operand)


State 118

  111 OperandName: QualifiedIdent .
  196 TypeName: QualifiedIdent .

    ELIPSIS   reduce using rule 111 (OperandName)
    ELIPSIS   [reduce using rule 196 (TypeName)]
    ')'       reduce using rule 111 (OperandName)
    ')'       [reduce using rule 196 (TypeName)]
    ','       reduce using rule 111 (OperandName)
    ','       [reduce using rule 196 (TypeName)]
    '{'       reduce using rule 111 (OperandName)
    '{'       [reduce using rule 196 (TypeName)]
    $default  reduce using rule 111 (OperandName)


State 119

  102 Literal: CompositeLit .

    $default  reduce using rule 102 (Literal)


State 120

  113 CompositeLit: LiteralType . LiteralValue

    '{'  shift, and go to state 180

    LiteralValue  go to state 181


State 121

  103 Literal: FunctionLit .

    $default  reduce using rule 103 (Literal)


State 122

  117 LiteralType: TypeName .

    $default  reduce using rule 117 (LiteralType)


State 123

  115 LiteralType: ArrayType .

    $default  reduce using rule 115 (LiteralType)


State 124

  114 LiteralType: StructType .

    $default  reduce using rule 114 (LiteralType)


State 125

  210 FunctionType: FUNC Signature .

    $default  reduce using rule 210 (FunctionType)


State 126

  204 StructType: STRUCT '{' . STAR_FieldDecl_SC '}'

    $default  reduce using rule 33 (STAR_FieldDecl_SC)

    STAR_FieldDecl_SC  go to state 182


State 127

  209 BaseType: Type .

    $default  reduce using rule 209 (BaseType)


State 128

  208 PointerType: '*' BaseType .

    $default  reduce using rule 208 (PointerType)


State 129

  194 Type: '(' Type . ')'

    ')'  shift, and go to state 183


State 130

   45 AliasDecl: ID '=' Type .

    $default  reduce using rule 45 (AliasDecl)


State 131

   52 Expression: Expression . binary_op Expression
  202 ArrayLength: Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 202 (ArrayLength)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 132

  201 ArrayType: '[' ArrayLength . ']' ElementType

    ']'  shift, and go to state 184


State 133

  112 QualifiedIdent: PackageName '.' . ID

    ID  shift, and go to state 185


State 134

   26 STAR_TypeSpec_SC: STAR_TypeSpec_SC ';' .

    $default  reduce using rule 26 (STAR_TypeSpec_SC)


State 135

   42 TypeDecl: TYPE_TOK '(' STAR_TypeSpec_SC ')' .

    $default  reduce using rule 42 (TypeDecl)


State 136

  222 ParameterDecl: ELIPSIS Type .

    $default  reduce using rule 222 (ParameterDecl)


State 137

  221 ParameterDecl: IdentifierList ELIPSIS . Type

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 186
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 138

  220 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 220 (ParameterDecl)


State 139

  216 Parameters: '(' ParameterList ')' .

    $default  reduce using rule 216 (Parameters)


State 140

  217 Parameters: '(' ParameterList ',' . ')'

    ')'  shift, and go to state 187


State 141

   30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl . ',' ParameterDecl
  218 ParameterList: ParameterDecl STAR_CM_ParameterDecl .

    ','  shift, and go to state 188

    ','       [reduce using rule 218 (ParameterList)]
    $default  reduce using rule 218 (ParameterList)


State 142

   28 STAR_Statement_SC: STAR_Statement_SC . Statement ';'
  136 Block: '{' STAR_Statement_SC . '}'

    BREAK        shift, and go to state 189
    FUNC         shift, and go to state 93
    STRUCT       shift, and go to state 57
    RETURN       shift, and go to state 190
    GOTO         shift, and go to state 191
    CONST        shift, and go to state 20
    IF           shift, and go to state 192
    CONTINUE     shift, and go to state 193
    FOR          shift, and go to state 194
    ID           shift, and go to state 195
    VAR          shift, and go to state 21
    STRING_LIT   shift, and go to state 95
    BINARY_LIT   shift, and go to state 96
    HEX_LIT      shift, and go to state 97
    FLOAT_LIT    shift, and go to state 98
    DEC_LIT      shift, and go to state 99
    GO           shift, and go to state 196
    FALLTHROUGH  shift, and go to state 197
    TYPE_TOK     shift, and go to state 22
    '+'          shift, and go to state 100
    '-'          shift, and go to state 101
    '*'          shift, and go to state 102
    '^'          shift, and go to state 103
    '&'          shift, and go to state 104
    '!'          shift, and go to state 105
    '['          shift, and go to state 106
    "("          shift, and go to state 107
    '{'          shift, and go to state 81
    '}'          shift, and go to state 198

    $default  reduce using rule 155 (EmptyStmt)

    PackageName      go to state 63
    Declaration      go to state 199
    ConstDecl        go to state 25
    TypeDecl         go to state 26
    VarDecl          go to state 27
    ExpressionList   go to state 200
    Expression       go to state 201
    UnaryExpr        go to state 110
    unary_op         go to state 111
    PrimaryExpr      go to state 112
    Operand          go to state 113
    Literal          go to state 114
    INT_LIT          go to state 115
    BasicLit         go to state 116
    OperandName      go to state 117
    QualifiedIdent   go to state 118
    CompositeLit     go to state 119
    LiteralType      go to state 120
    FunctionLit      go to state 121
    Block            go to state 202
    Statement        go to state 203
    LabeledStmt      go to state 204
    Label            go to state 205
    SimpleStmt       go to state 206
    EmptyStmt        go to state 207
    ExpressionStmt   go to state 208
    IncDecStmt       go to state 209
    Assignment       go to state 210
    IfStmt           go to state 211
    ForStmt          go to state 212
    GoStmt           go to state 213
    ReturnStmt       go to state 214
    BreakStmt        go to state 215
    ContinueStmt     go to state 216
    GotoStmt         go to state 217
    FallthroughStmt  go to state 218
    TypeName         go to state 122
    ArrayType        go to state 123
    StructType       go to state 124


State 143

  194 Type: '(' Type . ')'
  219 ParameterDecl: Type .

    ')'  shift, and go to state 183

    ')'       [reduce using rule 219 (ParameterDecl)]
    $default  reduce using rule 219 (ParameterDecl)


State 144

   18 STAR_CM_ID: STAR_CM_ID ',' ID .

    $default  reduce using rule 18 (STAR_CM_ID)


State 145

   20 STAR_ConstSpec_SC: STAR_ConstSpec_SC ConstSpec ';' .

    $default  reduce using rule 20 (STAR_ConstSpec_SC)


State 146

   22 STAR_VarSpec_SC: STAR_VarSpec_SC VarSpec ';' .

    $default  reduce using rule 22 (STAR_VarSpec_SC)


State 147

  131 FunctionLit: FUNC Signature . FunctionBody

    '{'  shift, and go to state 81

    FunctionBody  go to state 219
    Block         go to state 83


State 148

  116 LiteralType: '[' ELIPSIS . ']' ElementType

    ']'  shift, and go to state 220


State 149

   52 Expression: Expression . binary_op Expression
  100 Operand: "(" Expression . ")"

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167
    ")"   shift, and go to state 221

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 150

   66 add_op: '+' .

    $default  reduce using rule 66 (add_op)


State 151

   67 add_op: '-' .

    $default  reduce using rule 67 (add_op)


State 152

   70 mul_op: '*' .

    $default  reduce using rule 70 (mul_op)


State 153

   71 mul_op: '/' .

    $default  reduce using rule 71 (mul_op)


State 154

   55 binary_op: "||" .

    $default  reduce using rule 55 (binary_op)


State 155

   56 binary_op: "&&" .

    $default  reduce using rule 56 (binary_op)


State 156

   60 rel_op: "==" .

    $default  reduce using rule 60 (rel_op)


State 157

   61 rel_op: "!=" .

    $default  reduce using rule 61 (rel_op)


State 158

   62 rel_op: '<' .

    $default  reduce using rule 62 (rel_op)


State 159

   63 rel_op: "<=" .

    $default  reduce using rule 63 (rel_op)


State 160

   64 rel_op: '>' .

    $default  reduce using rule 64 (rel_op)


State 161

   65 rel_op: ">=" .

    $default  reduce using rule 65 (rel_op)


State 162

   68 add_op: '|' .

    $default  reduce using rule 68 (add_op)


State 163

   69 add_op: '^' .

    $default  reduce using rule 69 (add_op)


State 164

   72 mul_op: '%' .

    $default  reduce using rule 72 (mul_op)


State 165

   73 mul_op: "<<" .

    $default  reduce using rule 73 (mul_op)


State 166

   74 mul_op: ">>" .

    $default  reduce using rule 74 (mul_op)


State 167

   75 mul_op: '&' .

    $default  reduce using rule 75 (mul_op)


State 168

   24 STAR_CM_EXP: STAR_CM_EXP . ',' Expression
   50 ExpressionList: Expression STAR_CM_EXP .

    ','  shift, and go to state 222

    ','       [reduce using rule 50 (ExpressionList)]
    $default  reduce using rule 50 (ExpressionList)


State 169

   52 Expression: Expression binary_op . Expression

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 223
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 170

   57 binary_op: rel_op .

    $default  reduce using rule 57 (binary_op)


State 171

   58 binary_op: add_op .

    $default  reduce using rule 58 (binary_op)


State 172

   59 binary_op: mul_op .

    $default  reduce using rule 59 (binary_op)


State 173

   54 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 54 (UnaryExpr)


State 174

   88 Arguments: '(' . ')'
   89          | '(' . ArgumentInBracket ')'

    FUNC        shift, and go to state 224
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 225
    '('         shift, and go to state 60
    ')'         shift, and go to state 226
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName             go to state 63
    ExpressionList          go to state 227
    Expression              go to state 109
    UnaryExpr               go to state 110
    unary_op                go to state 111
    PrimaryExpr             go to state 112
    ArgumentInBracket       go to state 228
    ArgumentInBracketFirst  go to state 229
    Operand                 go to state 113
    Literal                 go to state 114
    INT_LIT                 go to state 115
    BasicLit                go to state 116
    OperandName             go to state 117
    QualifiedIdent          go to state 118
    CompositeLit            go to state 119
    LiteralType             go to state 120
    FunctionLit             go to state 121
    Type                    go to state 230
    TypeName                go to state 231
    TypeLit                 go to state 67
    ArrayType               go to state 232
    StructType              go to state 233
    PointerType             go to state 70
    FunctionType            go to state 71


State 175

   86 Selector: '.' . ID

    ID  shift, and go to state 234


State 176

   87 Index: '[' . Expression ']'

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 235
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 177

   84 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 84 (PrimaryExpr)


State 178

   83 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 83 (PrimaryExpr)


State 179

   85 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 85 (PrimaryExpr)


State 180

  118 LiteralValue: '{' . '}'
  119             | '{' . ElementList '}'
  120             | '{' . ElementList ',' '}'

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 236
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107
    '{'         shift, and go to state 180
    '}'         shift, and go to state 237

    PackageName     go to state 63
    Expression      go to state 238
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    LiteralValue    go to state 239
    ElementList     go to state 240
    KeyedElement    go to state 241
    Key             go to state 242
    Element         go to state 243
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 181

  113 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 113 (CompositeLit)


State 182

   32 STAR_FieldDecl_SC: STAR_FieldDecl_SC . FieldDecl ';'
  204 StructType: STRUCT '{' STAR_FieldDecl_SC . '}'

    ID   shift, and go to state 34
    '}'  shift, and go to state 244

    IdentifierList  go to state 245
    FieldDecl       go to state 246


State 183

  194 Type: '(' Type ')' .

    $default  reduce using rule 194 (Type)


State 184

  201 ArrayType: '[' ArrayLength ']' . ElementType

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 247
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    ElementType     go to state 248
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 185

  112 QualifiedIdent: PackageName '.' ID .

    $default  reduce using rule 112 (QualifiedIdent)


State 186

  221 ParameterDecl: IdentifierList ELIPSIS Type .

    $default  reduce using rule 221 (ParameterDecl)


State 187

  217 Parameters: '(' ParameterList ',' ')' .

    $default  reduce using rule 217 (Parameters)


State 188

   30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' . ParameterDecl

    FUNC     shift, and go to state 56
    STRUCT   shift, and go to state 57
    ID       shift, and go to state 74
    ELIPSIS  shift, and go to state 75
    '*'      shift, and go to state 59
    '('      shift, and go to state 60
    '['      shift, and go to state 62

    PackageName     go to state 63
    IdentifierList  go to state 77
    QualifiedIdent  go to state 64
    Type            go to state 78
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71
    ParameterDecl   go to state 249


State 189

  186 BreakStmt: BREAK . Label
  187          | BREAK .

    ID  shift, and go to state 250

    $default  reduce using rule 187 (BreakStmt)

    Label  go to state 251


State 190

  184 ReturnStmt: RETURN . ExpressionList
  185           | RETURN .

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    $default  reduce using rule 185 (ReturnStmt)

    PackageName     go to state 63
    ExpressionList  go to state 252
    Expression      go to state 109
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 191

  190 GotoStmt: GOTO . Label

    ID  shift, and go to state 250

    Label  go to state 253


State 192

  162 IfStmt: IF . Expression Block
  163       | IF . SimpleStmt ';' Expression Block
  164       | IF . SimpleStmt ';' Expression Block ELSE Block
  165       | IF . SimpleStmt ';' Expression Block ELSE IfStmt

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    $default  reduce using rule 155 (EmptyStmt)

    PackageName     go to state 63
    ExpressionList  go to state 200
    Expression      go to state 254
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    SimpleStmt      go to state 255
    EmptyStmt       go to state 207
    ExpressionStmt  go to state 208
    IncDecStmt      go to state 209
    Assignment      go to state 210
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 193

  188 ContinueStmt: CONTINUE . Label
  189             | CONTINUE .

    ID  shift, and go to state 250

    $default  reduce using rule 189 (ContinueStmt)

    Label  go to state 256


State 194

  166 ForStmt: FOR . Block
  167        | FOR . ForStmtAfter Block

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    RANGE       shift, and go to state 257
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107
    '{'         shift, and go to state 81

    ';'       reduce using rule 155 (EmptyStmt)
    ';'       [reduce using rule 174 (OPT_InitStmt)]
    $default  reduce using rule 155 (EmptyStmt)

    PackageName     go to state 63
    ExpressionList  go to state 258
    Expression      go to state 259
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    Block           go to state 260
    SimpleStmt      go to state 261
    EmptyStmt       go to state 207
    ExpressionStmt  go to state 208
    IncDecStmt      go to state 209
    Assignment      go to state 210
    ForStmtAfter    go to state 262
    Condition       go to state 263
    ForClause       go to state 264
    OPT_InitStmt    go to state 265
    InitStmt        go to state 266
    RangeClause     go to state 267
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 195

    3 PackageName: ID .
  110 OperandName: ID .
  150 Label: ID .
  195 TypeName: ID .

    '.'       reduce using rule 3 (PackageName)
    '.'       [reduce using rule 110 (OperandName)]
    '{'       reduce using rule 195 (TypeName)
    ':'       reduce using rule 150 (Label)
    $default  reduce using rule 110 (OperandName)


State 196

  183 GoStmt: GO . Expression

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 268
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 197

  191 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 191 (FallthroughStmt)


State 198

  136 Block: '{' STAR_Statement_SC '}' .

    $default  reduce using rule 136 (Block)


State 199

  137 Statement: Declaration .

    $default  reduce using rule 137 (Statement)


State 200

  159 Assignment: ExpressionList . assign_op ExpressionList

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    add_op     go to state 269
    mul_op     go to state 270
    assign_op  go to state 271


State 201

   50 ExpressionList: Expression . STAR_CM_EXP
   52 Expression: Expression . binary_op Expression
  156 ExpressionStmt: Expression .
  157 IncDecStmt: Expression . "++"
  158           | Expression . "--"

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167
    "++"  shift, and go to state 272
    "--"  shift, and go to state 273

    '+'       [reduce using rule 25 (STAR_CM_EXP)]
    '-'       [reduce using rule 25 (STAR_CM_EXP)]
    '*'       [reduce using rule 25 (STAR_CM_EXP)]
    '/'       [reduce using rule 25 (STAR_CM_EXP)]
    ','       reduce using rule 25 (STAR_CM_EXP)
    '|'       [reduce using rule 25 (STAR_CM_EXP)]
    '^'       [reduce using rule 25 (STAR_CM_EXP)]
    '%'       [reduce using rule 25 (STAR_CM_EXP)]
    "<<"      [reduce using rule 25 (STAR_CM_EXP)]
    ">>"      [reduce using rule 25 (STAR_CM_EXP)]
    '&'       [reduce using rule 25 (STAR_CM_EXP)]
    $default  reduce using rule 156 (ExpressionStmt)

    STAR_CM_EXP  go to state 168
    binary_op    go to state 169
    rel_op       go to state 170
    add_op       go to state 171
    mul_op       go to state 172


State 202

  146 Statement: Block .

    $default  reduce using rule 146 (Statement)


State 203

   28 STAR_Statement_SC: STAR_Statement_SC Statement . ';'

    ';'  shift, and go to state 274


State 204

  138 Statement: LabeledStmt .

    $default  reduce using rule 138 (Statement)


State 205

  149 LabeledStmt: Label . ':' Statement

    ':'  shift, and go to state 275


State 206

  139 Statement: SimpleStmt .

    $default  reduce using rule 139 (Statement)


State 207

  151 SimpleStmt: EmptyStmt .

    $default  reduce using rule 151 (SimpleStmt)


State 208

  152 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 152 (SimpleStmt)


State 209

  153 SimpleStmt: IncDecStmt .

    $default  reduce using rule 153 (SimpleStmt)


State 210

  154 SimpleStmt: Assignment .

    $default  reduce using rule 154 (SimpleStmt)


State 211

  147 Statement: IfStmt .

    $default  reduce using rule 147 (Statement)


State 212

  148 Statement: ForStmt .

    $default  reduce using rule 148 (Statement)


State 213

  140 Statement: GoStmt .

    $default  reduce using rule 140 (Statement)


State 214

  141 Statement: ReturnStmt .

    $default  reduce using rule 141 (Statement)


State 215

  142 Statement: BreakStmt .

    $default  reduce using rule 142 (Statement)


State 216

  143 Statement: ContinueStmt .

    $default  reduce using rule 143 (Statement)


State 217

  144 Statement: GotoStmt .

    $default  reduce using rule 144 (Statement)


State 218

  145 Statement: FallthroughStmt .

    $default  reduce using rule 145 (Statement)


State 219

  131 FunctionLit: FUNC Signature FunctionBody .

    $default  reduce using rule 131 (FunctionLit)


State 220

  116 LiteralType: '[' ELIPSIS ']' . ElementType

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 247
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    ElementType     go to state 276
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 221

  100 Operand: "(" Expression ")" .

    $default  reduce using rule 100 (Operand)


State 222

   24 STAR_CM_EXP: STAR_CM_EXP ',' . Expression

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 277
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 223

   52 Expression: Expression . binary_op Expression
   52           | Expression binary_op Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    '+'       [reduce using rule 52 (Expression)]
    '-'       [reduce using rule 52 (Expression)]
    '*'       [reduce using rule 52 (Expression)]
    '/'       [reduce using rule 52 (Expression)]
    "||"      [reduce using rule 52 (Expression)]
    "&&"      [reduce using rule 52 (Expression)]
    "=="      [reduce using rule 52 (Expression)]
    "!="      [reduce using rule 52 (Expression)]
    '<'       [reduce using rule 52 (Expression)]
    "<="      [reduce using rule 52 (Expression)]
    '>'       [reduce using rule 52 (Expression)]
    ">="      [reduce using rule 52 (Expression)]
    '|'       [reduce using rule 52 (Expression)]
    '^'       [reduce using rule 52 (Expression)]
    '%'       [reduce using rule 52 (Expression)]
    "<<"      [reduce using rule 52 (Expression)]
    ">>"      [reduce using rule 52 (Expression)]
    '&'       [reduce using rule 52 (Expression)]
    $default  reduce using rule 52 (Expression)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 224

  131 FunctionLit: FUNC . Signature FunctionBody
  210 FunctionType: FUNC . Signature

    '('  shift, and go to state 49

    Signature   go to state 278
    Parameters  go to state 51


State 225

   80 unary_op: '*' .
  208 PointerType: '*' . BaseType

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    FUNC      [reduce using rule 80 (unary_op)]
    STRUCT    [reduce using rule 80 (unary_op)]
    ID        [reduce using rule 80 (unary_op)]
    '['       [reduce using rule 80 (unary_op)]
    $default  reduce using rule 80 (unary_op)

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 127
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    BaseType        go to state 128
    FunctionType    go to state 71


State 226

   88 Arguments: '(' ')' .

    $default  reduce using rule 88 (Arguments)


State 227

   91 ArgumentInBracketFirst: ExpressionList .

    $default  reduce using rule 91 (ArgumentInBracketFirst)


State 228

   89 Arguments: '(' ArgumentInBracket . ')'

    ')'  shift, and go to state 279


State 229

   90 ArgumentInBracket: ArgumentInBracketFirst . ArgumentInBracketEnd

    ELIPSIS  shift, and go to state 280
    ','      shift, and go to state 281

    $default  reduce using rule 97 (ArgumentInBracketEnd)

    ArgumentInBracketEnd  go to state 282


State 230

   92 ArgumentInBracketFirst: Type .
   93                       | Type . ',' ExpressionList

    ','  shift, and go to state 283

    ','       [reduce using rule 92 (ArgumentInBracketFirst)]
    $default  reduce using rule 92 (ArgumentInBracketFirst)


State 231

  117 LiteralType: TypeName .
  192 Type: TypeName .

    '{'       reduce using rule 117 (LiteralType)
    $default  reduce using rule 192 (Type)


State 232

  115 LiteralType: ArrayType .
  197 TypeLit: ArrayType .

    '{'       reduce using rule 115 (LiteralType)
    $default  reduce using rule 197 (TypeLit)


State 233

  114 LiteralType: StructType .
  198 TypeLit: StructType .

    '{'       reduce using rule 114 (LiteralType)
    $default  reduce using rule 198 (TypeLit)


State 234

   86 Selector: '.' ID .

    $default  reduce using rule 86 (Selector)


State 235

   52 Expression: Expression . binary_op Expression
   87 Index: '[' Expression . ']'

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167
    ']'   shift, and go to state 284

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 236

    3 PackageName: ID .
  110 OperandName: ID .
  126 Key: ID .
  195 TypeName: ID .

    '.'       reduce using rule 3 (PackageName)
    '.'       [reduce using rule 110 (OperandName)]
    '{'       reduce using rule 195 (TypeName)
    ':'       reduce using rule 110 (OperandName)
    ':'       [reduce using rule 126 (Key)]
    $default  reduce using rule 110 (OperandName)


State 237

  118 LiteralValue: '{' '}' .

    $default  reduce using rule 118 (LiteralValue)


State 238

   52 Expression: Expression . binary_op Expression
  127 Key: Expression .
  129 Element: Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    ':'       reduce using rule 127 (Key)
    $default  reduce using rule 129 (Element)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 239

  128 Key: LiteralValue .
  130 Element: LiteralValue .

    ':'       reduce using rule 128 (Key)
    $default  reduce using rule 130 (Element)


State 240

  119 LiteralValue: '{' ElementList . '}'
  120             | '{' ElementList . ',' '}'

    ','  shift, and go to state 285
    '}'  shift, and go to state 286


State 241

  121 ElementList: KeyedElement . STAR_CM_KeyedElement

    $default  reduce using rule 123 (STAR_CM_KeyedElement)

    STAR_CM_KeyedElement  go to state 287


State 242

  124 KeyedElement: Key . ':' Element

    ':'  shift, and go to state 288


State 243

  125 KeyedElement: Element .

    $default  reduce using rule 125 (KeyedElement)


State 244

  204 StructType: STRUCT '{' STAR_FieldDecl_SC '}' .

    $default  reduce using rule 204 (StructType)


State 245

  205 FieldDecl: IdentifierList . Type Tag
  206          | IdentifierList . Type

    FUNC    shift, and go to state 56
    STRUCT  shift, and go to state 57
    ID      shift, and go to state 58
    '*'     shift, and go to state 59
    '('     shift, and go to state 60
    '['     shift, and go to state 62

    PackageName     go to state 63
    QualifiedIdent  go to state 64
    Type            go to state 289
    TypeName        go to state 66
    TypeLit         go to state 67
    ArrayType       go to state 68
    StructType      go to state 69
    PointerType     go to state 70
    FunctionType    go to state 71


State 246

   32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl . ';'

    ';'  shift, and go to state 290


State 247

  203 ElementType: Type .

    $default  reduce using rule 203 (ElementType)


State 248

  201 ArrayType: '[' ArrayLength ']' ElementType .

    $default  reduce using rule 201 (ArrayType)


State 249

   30 STAR_CM_ParameterDecl: STAR_CM_ParameterDecl ',' ParameterDecl .

    $default  reduce using rule 30 (STAR_CM_ParameterDecl)


State 250

  150 Label: ID .

    $default  reduce using rule 150 (Label)


State 251

  186 BreakStmt: BREAK Label .

    $default  reduce using rule 186 (BreakStmt)


State 252

  184 ReturnStmt: RETURN ExpressionList .

    $default  reduce using rule 184 (ReturnStmt)


State 253

  190 GotoStmt: GOTO Label .

    $default  reduce using rule 190 (GotoStmt)


State 254

   50 ExpressionList: Expression . STAR_CM_EXP
   52 Expression: Expression . binary_op Expression
  156 ExpressionStmt: Expression .
  157 IncDecStmt: Expression . "++"
  158           | Expression . "--"
  162 IfStmt: IF Expression . Block

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167
    '{'   shift, and go to state 81
    "++"  shift, and go to state 272
    "--"  shift, and go to state 273

    '+'       [reduce using rule 25 (STAR_CM_EXP)]
    '-'       [reduce using rule 25 (STAR_CM_EXP)]
    '*'       [reduce using rule 25 (STAR_CM_EXP)]
    '/'       [reduce using rule 25 (STAR_CM_EXP)]
    ';'       reduce using rule 156 (ExpressionStmt)
    '|'       [reduce using rule 25 (STAR_CM_EXP)]
    '^'       [reduce using rule 25 (STAR_CM_EXP)]
    '%'       [reduce using rule 25 (STAR_CM_EXP)]
    "<<"      [reduce using rule 25 (STAR_CM_EXP)]
    ">>"      [reduce using rule 25 (STAR_CM_EXP)]
    '&'       [reduce using rule 25 (STAR_CM_EXP)]
    $default  reduce using rule 25 (STAR_CM_EXP)

    STAR_CM_EXP  go to state 168
    binary_op    go to state 169
    rel_op       go to state 170
    add_op       go to state 171
    mul_op       go to state 172
    Block        go to state 291


State 255

  163 IfStmt: IF SimpleStmt . ';' Expression Block
  164       | IF SimpleStmt . ';' Expression Block ELSE Block
  165       | IF SimpleStmt . ';' Expression Block ELSE IfStmt

    ';'  shift, and go to state 292


State 256

  188 ContinueStmt: CONTINUE Label .

    $default  reduce using rule 188 (ContinueStmt)


State 257

  181 RangeClause: RANGE . Expression

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 293
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 258

  159 Assignment: ExpressionList . assign_op ExpressionList
  182 RangeClause: ExpressionList . '=' RANGE Expression

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    '='   shift, and go to state 294
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    add_op     go to state 269
    mul_op     go to state 270
    assign_op  go to state 271


State 259

   50 ExpressionList: Expression . STAR_CM_EXP
   52 Expression: Expression . binary_op Expression
  156 ExpressionStmt: Expression .
  157 IncDecStmt: Expression . "++"
  158           | Expression . "--"
  171 Condition: Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167
    "++"  shift, and go to state 272
    "--"  shift, and go to state 273

    '+'       [reduce using rule 25 (STAR_CM_EXP)]
    '-'       [reduce using rule 25 (STAR_CM_EXP)]
    '*'       [reduce using rule 25 (STAR_CM_EXP)]
    '/'       [reduce using rule 25 (STAR_CM_EXP)]
    ';'       reduce using rule 156 (ExpressionStmt)
    '|'       [reduce using rule 25 (STAR_CM_EXP)]
    '^'       [reduce using rule 25 (STAR_CM_EXP)]
    '%'       [reduce using rule 25 (STAR_CM_EXP)]
    "<<"      [reduce using rule 25 (STAR_CM_EXP)]
    ">>"      [reduce using rule 25 (STAR_CM_EXP)]
    '&'       [reduce using rule 25 (STAR_CM_EXP)]
    '{'       reduce using rule 171 (Condition)
    $default  reduce using rule 25 (STAR_CM_EXP)

    STAR_CM_EXP  go to state 168
    binary_op    go to state 169
    rel_op       go to state 170
    add_op       go to state 171
    mul_op       go to state 172


State 260

  166 ForStmt: FOR Block .

    $default  reduce using rule 166 (ForStmt)


State 261

  179 InitStmt: SimpleStmt .

    $default  reduce using rule 179 (InitStmt)


State 262

  167 ForStmt: FOR ForStmtAfter . Block

    '{'  shift, and go to state 81

    Block  go to state 295


State 263

  168 ForStmtAfter: Condition .

    $default  reduce using rule 168 (ForStmtAfter)


State 264

  169 ForStmtAfter: ForClause .

    $default  reduce using rule 169 (ForStmtAfter)


State 265

  172 ForClause: OPT_InitStmt . ';' OPT_Condition ';' OPT_PostStmt

    ';'  shift, and go to state 296


State 266

  173 OPT_InitStmt: InitStmt .

    $default  reduce using rule 173 (OPT_InitStmt)


State 267

  170 ForStmtAfter: RangeClause .

    $default  reduce using rule 170 (ForStmtAfter)


State 268

   52 Expression: Expression . binary_op Expression
  183 GoStmt: GO Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 183 (GoStmt)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 269

  160 assign_op: add_op . '='

    '='  shift, and go to state 297


State 270

  161 assign_op: mul_op . '='

    '='  shift, and go to state 298


State 271

  159 Assignment: ExpressionList assign_op . ExpressionList

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    ExpressionList  go to state 299
    Expression      go to state 109
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 272

  157 IncDecStmt: Expression "++" .

    $default  reduce using rule 157 (IncDecStmt)


State 273

  158 IncDecStmt: Expression "--" .

    $default  reduce using rule 158 (IncDecStmt)


State 274

   28 STAR_Statement_SC: STAR_Statement_SC Statement ';' .

    $default  reduce using rule 28 (STAR_Statement_SC)


State 275

  149 LabeledStmt: Label ':' . Statement

    BREAK        shift, and go to state 189
    FUNC         shift, and go to state 93
    STRUCT       shift, and go to state 57
    RETURN       shift, and go to state 190
    GOTO         shift, and go to state 191
    CONST        shift, and go to state 20
    IF           shift, and go to state 192
    CONTINUE     shift, and go to state 193
    FOR          shift, and go to state 194
    ID           shift, and go to state 195
    VAR          shift, and go to state 21
    STRING_LIT   shift, and go to state 95
    BINARY_LIT   shift, and go to state 96
    HEX_LIT      shift, and go to state 97
    FLOAT_LIT    shift, and go to state 98
    DEC_LIT      shift, and go to state 99
    GO           shift, and go to state 196
    FALLTHROUGH  shift, and go to state 197
    TYPE_TOK     shift, and go to state 22
    '+'          shift, and go to state 100
    '-'          shift, and go to state 101
    '*'          shift, and go to state 102
    '^'          shift, and go to state 103
    '&'          shift, and go to state 104
    '!'          shift, and go to state 105
    '['          shift, and go to state 106
    "("          shift, and go to state 107
    '{'          shift, and go to state 81

    $default  reduce using rule 155 (EmptyStmt)

    PackageName      go to state 63
    Declaration      go to state 199
    ConstDecl        go to state 25
    TypeDecl         go to state 26
    VarDecl          go to state 27
    ExpressionList   go to state 200
    Expression       go to state 201
    UnaryExpr        go to state 110
    unary_op         go to state 111
    PrimaryExpr      go to state 112
    Operand          go to state 113
    Literal          go to state 114
    INT_LIT          go to state 115
    BasicLit         go to state 116
    OperandName      go to state 117
    QualifiedIdent   go to state 118
    CompositeLit     go to state 119
    LiteralType      go to state 120
    FunctionLit      go to state 121
    Block            go to state 202
    Statement        go to state 300
    LabeledStmt      go to state 204
    Label            go to state 205
    SimpleStmt       go to state 206
    EmptyStmt        go to state 207
    ExpressionStmt   go to state 208
    IncDecStmt       go to state 209
    Assignment       go to state 210
    IfStmt           go to state 211
    ForStmt          go to state 212
    GoStmt           go to state 213
    ReturnStmt       go to state 214
    BreakStmt        go to state 215
    ContinueStmt     go to state 216
    GotoStmt         go to state 217
    FallthroughStmt  go to state 218
    TypeName         go to state 122
    ArrayType        go to state 123
    StructType       go to state 124


State 276

  116 LiteralType: '[' ELIPSIS ']' ElementType .

    $default  reduce using rule 116 (LiteralType)


State 277

   24 STAR_CM_EXP: STAR_CM_EXP ',' Expression .
   52 Expression: Expression . binary_op Expression

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    '+'       [reduce using rule 24 (STAR_CM_EXP)]
    '-'       [reduce using rule 24 (STAR_CM_EXP)]
    '*'       [reduce using rule 24 (STAR_CM_EXP)]
    '/'       [reduce using rule 24 (STAR_CM_EXP)]
    '|'       [reduce using rule 24 (STAR_CM_EXP)]
    '^'       [reduce using rule 24 (STAR_CM_EXP)]
    '%'       [reduce using rule 24 (STAR_CM_EXP)]
    "<<"      [reduce using rule 24 (STAR_CM_EXP)]
    ">>"      [reduce using rule 24 (STAR_CM_EXP)]
    '&'       [reduce using rule 24 (STAR_CM_EXP)]
    $default  reduce using rule 24 (STAR_CM_EXP)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 278

  131 FunctionLit: FUNC Signature . FunctionBody
  210 FunctionType: FUNC Signature .

    '{'  shift, and go to state 81

    $default  reduce using rule 210 (FunctionType)

    FunctionBody  go to state 219
    Block         go to state 83


State 279

   89 Arguments: '(' ArgumentInBracket ')' .

    $default  reduce using rule 89 (Arguments)


State 280

   94 ArgumentInBracketEnd: ELIPSIS . ','
   95                     | ELIPSIS .

    ','  shift, and go to state 301

    $default  reduce using rule 95 (ArgumentInBracketEnd)


State 281

   96 ArgumentInBracketEnd: ',' .

    $default  reduce using rule 96 (ArgumentInBracketEnd)


State 282

   90 ArgumentInBracket: ArgumentInBracketFirst ArgumentInBracketEnd .

    $default  reduce using rule 90 (ArgumentInBracket)


State 283

   93 ArgumentInBracketFirst: Type ',' . ExpressionList

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    ExpressionList  go to state 302
    Expression      go to state 109
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 284

   87 Index: '[' Expression ']' .

    $default  reduce using rule 87 (Index)


State 285

  120 LiteralValue: '{' ElementList ',' . '}'

    '}'  shift, and go to state 303


State 286

  119 LiteralValue: '{' ElementList '}' .

    $default  reduce using rule 119 (LiteralValue)


State 287

  121 ElementList: KeyedElement STAR_CM_KeyedElement .
  122 STAR_CM_KeyedElement: STAR_CM_KeyedElement . ',' KeyedElement

    ','  shift, and go to state 304

    ','       [reduce using rule 121 (ElementList)]
    $default  reduce using rule 121 (ElementList)


State 288

  124 KeyedElement: Key ':' . Element

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107
    '{'         shift, and go to state 180

    PackageName     go to state 63
    Expression      go to state 305
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    LiteralValue    go to state 306
    Element         go to state 307
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 289

  205 FieldDecl: IdentifierList Type . Tag
  206          | IdentifierList Type .

    STRING_LIT  shift, and go to state 308

    $default  reduce using rule 206 (FieldDecl)

    Tag  go to state 309


State 290

   32 STAR_FieldDecl_SC: STAR_FieldDecl_SC FieldDecl ';' .

    $default  reduce using rule 32 (STAR_FieldDecl_SC)


State 291

  162 IfStmt: IF Expression Block .

    $default  reduce using rule 162 (IfStmt)


State 292

  163 IfStmt: IF SimpleStmt ';' . Expression Block
  164       | IF SimpleStmt ';' . Expression Block ELSE Block
  165       | IF SimpleStmt ';' . Expression Block ELSE IfStmt

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 310
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 293

   52 Expression: Expression . binary_op Expression
  181 RangeClause: RANGE Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 181 (RangeClause)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 294

  182 RangeClause: ExpressionList '=' . RANGE Expression

    RANGE  shift, and go to state 311


State 295

  167 ForStmt: FOR ForStmtAfter Block .

    $default  reduce using rule 167 (ForStmt)


State 296

  172 ForClause: OPT_InitStmt ';' . OPT_Condition ';' OPT_PostStmt

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    $default  reduce using rule 176 (OPT_Condition)

    PackageName     go to state 63
    Expression      go to state 312
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    Condition       go to state 313
    OPT_Condition   go to state 314
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 297

  160 assign_op: add_op '=' .

    $default  reduce using rule 160 (assign_op)


State 298

  161 assign_op: mul_op '=' .

    $default  reduce using rule 161 (assign_op)


State 299

  159 Assignment: ExpressionList assign_op ExpressionList .

    $default  reduce using rule 159 (Assignment)


State 300

  149 LabeledStmt: Label ':' Statement .

    $default  reduce using rule 149 (LabeledStmt)


State 301

   94 ArgumentInBracketEnd: ELIPSIS ',' .

    $default  reduce using rule 94 (ArgumentInBracketEnd)


State 302

   93 ArgumentInBracketFirst: Type ',' ExpressionList .

    $default  reduce using rule 93 (ArgumentInBracketFirst)


State 303

  120 LiteralValue: '{' ElementList ',' '}' .

    $default  reduce using rule 120 (LiteralValue)


State 304

  122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' . KeyedElement

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 236
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107
    '{'         shift, and go to state 180

    PackageName     go to state 63
    Expression      go to state 238
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    LiteralValue    go to state 239
    KeyedElement    go to state 315
    Key             go to state 242
    Element         go to state 243
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 305

   52 Expression: Expression . binary_op Expression
  129 Element: Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 129 (Element)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 306

  130 Element: LiteralValue .

    $default  reduce using rule 130 (Element)


State 307

  124 KeyedElement: Key ':' Element .

    $default  reduce using rule 124 (KeyedElement)


State 308

  207 Tag: STRING_LIT .

    $default  reduce using rule 207 (Tag)


State 309

  205 FieldDecl: IdentifierList Type Tag .

    $default  reduce using rule 205 (FieldDecl)


State 310

   52 Expression: Expression . binary_op Expression
  163 IfStmt: IF SimpleStmt ';' Expression . Block
  164       | IF SimpleStmt ';' Expression . Block ELSE Block
  165       | IF SimpleStmt ';' Expression . Block ELSE IfStmt

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167
    '{'   shift, and go to state 81

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172
    Block      go to state 316


State 311

  182 RangeClause: ExpressionList '=' RANGE . Expression

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    PackageName     go to state 63
    Expression      go to state 317
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 312

   52 Expression: Expression . binary_op Expression
  171 Condition: Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 171 (Condition)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 313

  175 OPT_Condition: Condition .

    $default  reduce using rule 175 (OPT_Condition)


State 314

  172 ForClause: OPT_InitStmt ';' OPT_Condition . ';' OPT_PostStmt

    ';'  shift, and go to state 318


State 315

  122 STAR_CM_KeyedElement: STAR_CM_KeyedElement ',' KeyedElement .

    $default  reduce using rule 122 (STAR_CM_KeyedElement)


State 316

  163 IfStmt: IF SimpleStmt ';' Expression Block .
  164       | IF SimpleStmt ';' Expression Block . ELSE Block
  165       | IF SimpleStmt ';' Expression Block . ELSE IfStmt

    ELSE  shift, and go to state 319

    $default  reduce using rule 163 (IfStmt)


State 317

   52 Expression: Expression . binary_op Expression
  182 RangeClause: ExpressionList '=' RANGE Expression .

    '+'   shift, and go to state 150
    '-'   shift, and go to state 151
    '*'   shift, and go to state 152
    '/'   shift, and go to state 153
    "||"  shift, and go to state 154
    "&&"  shift, and go to state 155
    "=="  shift, and go to state 156
    "!="  shift, and go to state 157
    '<'   shift, and go to state 158
    "<="  shift, and go to state 159
    '>'   shift, and go to state 160
    ">="  shift, and go to state 161
    '|'   shift, and go to state 162
    '^'   shift, and go to state 163
    '%'   shift, and go to state 164
    "<<"  shift, and go to state 165
    ">>"  shift, and go to state 166
    '&'   shift, and go to state 167

    $default  reduce using rule 182 (RangeClause)

    binary_op  go to state 169
    rel_op     go to state 170
    add_op     go to state 171
    mul_op     go to state 172


State 318

  172 ForClause: OPT_InitStmt ';' OPT_Condition ';' . OPT_PostStmt

    FUNC        shift, and go to state 93
    STRUCT      shift, and go to state 57
    ID          shift, and go to state 94
    STRING_LIT  shift, and go to state 95
    BINARY_LIT  shift, and go to state 96
    HEX_LIT     shift, and go to state 97
    FLOAT_LIT   shift, and go to state 98
    DEC_LIT     shift, and go to state 99
    '+'         shift, and go to state 100
    '-'         shift, and go to state 101
    '*'         shift, and go to state 102
    '^'         shift, and go to state 103
    '&'         shift, and go to state 104
    '!'         shift, and go to state 105
    '['         shift, and go to state 106
    "("         shift, and go to state 107

    '{'       reduce using rule 155 (EmptyStmt)
    '{'       [reduce using rule 178 (OPT_PostStmt)]
    $default  reduce using rule 155 (EmptyStmt)

    PackageName     go to state 63
    ExpressionList  go to state 200
    Expression      go to state 201
    UnaryExpr       go to state 110
    unary_op        go to state 111
    PrimaryExpr     go to state 112
    Operand         go to state 113
    Literal         go to state 114
    INT_LIT         go to state 115
    BasicLit        go to state 116
    OperandName     go to state 117
    QualifiedIdent  go to state 118
    CompositeLit    go to state 119
    LiteralType     go to state 120
    FunctionLit     go to state 121
    SimpleStmt      go to state 320
    EmptyStmt       go to state 207
    ExpressionStmt  go to state 208
    IncDecStmt      go to state 209
    Assignment      go to state 210
    OPT_PostStmt    go to state 321
    PostStmt        go to state 322
    TypeName        go to state 122
    ArrayType       go to state 123
    StructType      go to state 124


State 319

  164 IfStmt: IF SimpleStmt ';' Expression Block ELSE . Block
  165       | IF SimpleStmt ';' Expression Block ELSE . IfStmt

    IF   shift, and go to state 192
    '{'  shift, and go to state 81

    Block   go to state 323
    IfStmt  go to state 324


State 320

  180 PostStmt: SimpleStmt .

    $default  reduce using rule 180 (PostStmt)


State 321

  172 ForClause: OPT_InitStmt ';' OPT_Condition ';' OPT_PostStmt .

    $default  reduce using rule 172 (ForClause)


State 322

  177 OPT_PostStmt: PostStmt .

    $default  reduce using rule 177 (OPT_PostStmt)


State 323

  164 IfStmt: IF SimpleStmt ';' Expression Block ELSE Block .

    $default  reduce using rule 164 (IfStmt)


State 324

  165 IfStmt: IF SimpleStmt ';' Expression Block ELSE IfStmt .

    $default  reduce using rule 165 (IfStmt)
